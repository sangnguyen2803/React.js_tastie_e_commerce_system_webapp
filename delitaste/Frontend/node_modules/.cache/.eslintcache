[{"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/index.js":"1","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/reportWebVitals.js":"2","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/i18n.js":"3","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store.js":"4","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/RootScreen.js":"5","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/UserAdmissionScreen/UserRegistrationScreen.js":"6","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/SignContractScreen/SignContractScreen.js":"7","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/HomeScreen/HomeScreen.js":"8","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/UserAdmissionScreen/UserSignInScreen.js":"9","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProviderDetailScreen/ProviderDetailScreen.js":"10","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantDashboardScreen/MerchantDashboardScreen.js":"11","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/MerchantFormScreen.js":"12","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ShipperScreen/ShipperScreen.js":"13","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/OrderCheckoutScreen/OrderCheckoutScreen.js":"14","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProfileScreen/ProfileScreen.js":"15","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/MerchantRegistrationScreen.js":"16","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/SearchScreen/SearchScreen.js":"17","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/OrderTrackingScreen/OrderTrackingScreen.js":"18","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/en/common_en.js":"19","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/fr/common_fr.js":"20","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/vi/common_vi.js":"21","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/index.js":"22","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/UserReducer/UserReducer.js":"23","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/config/routes.js":"24","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/RouteWithSubRoutes.js":"25","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/ProviderAction/ProviderAction.js":"26","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UserAction/UserAction.js":"27","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/ServiceInfoForm.js":"28","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/BusinessUnitForm.js":"29","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/BankInfoForm.js":"30","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/ProductDetailForm.js":"31","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/RegisteredRepresentativeForm.js":"32","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UserAction/AuthAction.js":"33","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/MerchantForm.js":"34","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/UserSignIn.js":"35","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/UserRegisteration.js":"36","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HigherOrderComponents(HOC)/withAuth.js":"37","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/SignContractForm/SignContractForm.js":"38","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/Home.js":"39","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UIComponentAction/DialogBoxAction.js":"40","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/ProviderDetail.js":"41","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/MerchantDashboard.js":"42","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderTracking.js":"43","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/SearchResult/SearchResult.js":"44","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/GuidePage.js":"45","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Shipper/Shipper.js":"46","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/Profile.js":"47","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderCheckout.js":"48","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Spinner/Spinner.js":"49","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/FormHeader/FormHeader.js":"50","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/types.js":"51","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ShipperReducer/ShipperReducer.js":"52","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ProductReducer/ProductReducer.js":"53","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/UIComponents/UIAlertReducers.js":"54","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ProviderReducer/ProviderReducer.js":"55","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/LoginForm/LoginForm.js":"56","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/NavBar.js":"57","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/RateProvider/RateProvider.js":"58","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/RateShipper/RateShipper.js":"59","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Toolbar/Toolbar.js":"60","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Footer/Footer.js":"61","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/Favorites/Favorites.js":"62","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/OrderHistory/OrderHistory.js":"63","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/AccountSetting/AccountSetting.js":"64","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileSidebar/ProfileSidebar.js":"65","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ErrorHandlers/FormError/FormError.js":"66","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ImageHandlers/ImagePreview/ImagePreview.js":"67","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/FormUtils/MerchantFormValidate.js":"68","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector.js":"69","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Tag/Tag.js":"70","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Toolbar/VoucherToolbar.js":"71","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDBusinessInsight/BusinessInsightPanel.js":"72","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDHome/HomePanel.js":"73","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Button/Button.js":"74","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Button/ButtonGroup/ButtonGroup.js":"75","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/HomeBodySidebar.js":"76","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/HomeBodyContent.js":"77","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBanner/HomeBanner.js":"78","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeHeader/HomeHeader.js":"79","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/MainContent.js":"80","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Modal/Modal.js":"81","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Stepper/Stepper.js":"82","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/OrderAction/OrderAction.js":"83","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/SearchResult/SearchContent/SearchContent.js":"84","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/CartAction/CartAction.js":"85","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/OrderDetail.js":"86","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderReview/OrderReview.js":"87","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/locations.js":"88","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SubNavBar.js":"89","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/MainNavBar.js":"90","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileDetail/ProfileDetail.js":"91","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/GuideBanner.js":"92","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/dummy/ShipperLocations.js":"93","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/Tutorials/Tutorial.js":"94","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OTOrderDetail/OTOrderDetail.js":"95","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderStatus/OrderStatus.js":"96","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/MarketingPanel.js":"97","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderPanel.js":"98","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductPanel.js":"99","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/Sidebar/Sidebar.js":"100","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/ProductAction/ProductAction.js":"101","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDHeader/PDHeader.js":"102","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDBody.js":"103","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/ProviderList/ProviderList.js":"104","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Breadcrumbs/Breadcrumbs.js":"105","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/ApplyPromotion.js":"106","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/ScheduleOrder.js":"107","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/CategoryDetail.js":"108","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ProgressBar/ProgressBar.js":"109","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/Metric/Metric.js":"110","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SearchBar.js":"111","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderStatus/ChatBox.js":"112","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/MenuCategoryDetail.js":"113","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDHome/MDHome.js":"114","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDBusinessInsight/MDBusinessInsight.js":"115","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/BusinessUtils.js":"116","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/ProviderShowAll.js":"117","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/ProviderGroup.js":"118","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/city.js":"119","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDProductDetail/PDProductDetail.js":"120","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/HomeAction/HomeAction.js":"121","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Cart/Cart.js":"122","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/CategoryLevelOne.js":"123","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/DialogBox/DialogBox.js":"124","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/NotificationPanel.js":"125","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/Tutorials/TutorialCard.js":"126","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/AccountSettingPanel.js":"127","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/LanguageSettingPanel.js":"128","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/MDMarketing.js":"129","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/NavFlyout/NavFlyout.js":"130","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/Tabs.js":"131","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductDetail.js":"132","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/MDHeader/MDHeader.js":"133","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDUpcomingProduct/PDUpcomingProduct.js":"134","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/CustomButtonGroup.js":"135","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/CategoryAction/CategoryAction.js":"136","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductHandler/ViewUpcomingProduct.js":"137","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductHandler/AddUpcomingProduct.js":"138","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Skeleton/ProviderGroupSkeleton.js":"139","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/NavFlyout/NavFlyoutAnchor.js":"140","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/VoucherHandlers/CreateVoucher.js":"141","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/VoucherHandlers/UpdatePromotion.js":"142","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/DateUtils.js":"143","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductOverview.js":"144","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderHistory.js":"145","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/CategoryList.js":"146","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/CategoryBanner.js":"147","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/CategoryGroup.js":"148","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/PickupProvider.js":"149","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductDetail.js":"150","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderDetail.js":"151","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderHandler/ViewOrderDetail.js":"152","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/EditProduct.js":"153","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddProduct.js":"154","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/AddressBookPanel.js":"155","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/data/orderListData.js":"156","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/SlideShow/SlideShow.js":"157","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/SignUpForm.js":"158","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductForMenu.js":"159","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/SelectMenuCategory.js":"160","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddMenuCategory.js":"161","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/RegisterStep.js":"162","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/EmailVerification.js":"163","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/DetailSignUpForm1.js":"164","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/DetailSignUpForm2.js":"165","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/UpdateAdditionalOption.js":"166","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddAdditionalOption.js":"167","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ErrorHandlers/AlertNotificationBox/AlertNotificationBox.js":"168","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/MapDialog.js":"169","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/AvatarEdit.js":"170","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/district.js":"171","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/FormUtils/FormValidate.js":"172","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UIComponentAction/UIAlertAction.js":"173"},{"size":817,"mtime":1658974746693,"results":"174","hashOfConfig":"175"},{"size":362,"mtime":1658974746696,"results":"176","hashOfConfig":"175"},{"size":906,"mtime":1658974746693,"results":"177","hashOfConfig":"175"},{"size":690,"mtime":1658974746705,"results":"178","hashOfConfig":"175"},{"size":6610,"mtime":1658974746703,"results":"179","hashOfConfig":"175"},{"size":453,"mtime":1658974746704,"results":"180","hashOfConfig":"175"},{"size":449,"mtime":1658974746699,"results":"181","hashOfConfig":"175"},{"size":514,"mtime":1658974746697,"results":"182","hashOfConfig":"175"},{"size":482,"mtime":1658974746704,"results":"183","hashOfConfig":"175"},{"size":559,"mtime":1658974746703,"results":"184","hashOfConfig":"175"},{"size":902,"mtime":1658974746697,"results":"185","hashOfConfig":"175"},{"size":2579,"mtime":1658974746698,"results":"186","hashOfConfig":"175"},{"size":586,"mtime":1658974746704,"results":"187","hashOfConfig":"175"},{"size":336,"mtime":1658974746700,"results":"188","hashOfConfig":"175"},{"size":1525,"mtime":1658974746702,"results":"189","hashOfConfig":"175"},{"size":515,"mtime":1658974746698,"results":"190","hashOfConfig":"175"},{"size":462,"mtime":1658974746703,"results":"191","hashOfConfig":"175"},{"size":337,"mtime":1658974746702,"results":"192","hashOfConfig":"175"},{"size":536,"mtime":1658974746695,"results":"193","hashOfConfig":"175"},{"size":579,"mtime":1658974746695,"results":"194","hashOfConfig":"175"},{"size":581,"mtime":1658974746696,"results":"195","hashOfConfig":"175"},{"size":537,"mtime":1658974746714,"results":"196","hashOfConfig":"175"},{"size":8062,"mtime":1658974746714,"results":"197","hashOfConfig":"175"},{"size":2037,"mtime":1658974746692,"results":"198","hashOfConfig":"175"},{"size":340,"mtime":1658974746577,"results":"199","hashOfConfig":"175"},{"size":18979,"mtime":1658974746709,"results":"200","hashOfConfig":"175"},{"size":10889,"mtime":1658974746712,"results":"201","hashOfConfig":"175"},{"size":16807,"mtime":1658974746644,"results":"202","hashOfConfig":"175"},{"size":29501,"mtime":1658974746639,"results":"203","hashOfConfig":"175"},{"size":12593,"mtime":1658974746637,"results":"204","hashOfConfig":"175"},{"size":5829,"mtime":1658974746642,"results":"205","hashOfConfig":"175"},{"size":13416,"mtime":1658974746643,"results":"206","hashOfConfig":"175"},{"size":712,"mtime":1658974746710,"results":"207","hashOfConfig":"175"},{"size":1505,"mtime":1658974746646,"results":"208","hashOfConfig":"175"},{"size":1641,"mtime":1658974746692,"results":"209","hashOfConfig":"175"},{"size":1574,"mtime":1658974746691,"results":"210","hashOfConfig":"175"},{"size":2352,"mtime":1658974746581,"results":"211","hashOfConfig":"175"},{"size":4444,"mtime":1658974746652,"results":"212","hashOfConfig":"175"},{"size":2140,"mtime":1658974746582,"results":"213","hashOfConfig":"175"},{"size":936,"mtime":1658974746710,"results":"214","hashOfConfig":"175"},{"size":5019,"mtime":1658974746680,"results":"215","hashOfConfig":"175"},{"size":4032,"mtime":1658974746635,"results":"216","hashOfConfig":"175"},{"size":16006,"mtime":1658974746665,"results":"217","hashOfConfig":"175"},{"size":2379,"mtime":1658974746682,"results":"218","hashOfConfig":"175"},{"size":774,"mtime":1658974746648,"results":"219","hashOfConfig":"175"},{"size":11690,"mtime":1658974746682,"results":"220","hashOfConfig":"175"},{"size":2429,"mtime":1658974746674,"results":"221","hashOfConfig":"175"},{"size":4450,"mtime":1658974746654,"results":"222","hashOfConfig":"175"},{"size":833,"mtime":1658974746576,"results":"223","hashOfConfig":"175"},{"size":999,"mtime":1658974746642,"results":"224","hashOfConfig":"175"},{"size":3491,"mtime":1658974746712,"results":"225","hashOfConfig":"175"},{"size":292,"mtime":1658974746713,"results":"226","hashOfConfig":"175"},{"size":319,"mtime":1658974746712,"results":"227","hashOfConfig":"175"},{"size":766,"mtime":1658974746714,"results":"228","hashOfConfig":"175"},{"size":2805,"mtime":1658974746713,"results":"229","hashOfConfig":"175"},{"size":8747,"mtime":1658974746685,"results":"230","hashOfConfig":"175"},{"size":1095,"mtime":1658974746568,"results":"231","hashOfConfig":"175"},{"size":6937,"mtime":1658974746668,"results":"232","hashOfConfig":"175"},{"size":7129,"mtime":1658974746669,"results":"233","hashOfConfig":"175"},{"size":1050,"mtime":1658974746570,"results":"234","hashOfConfig":"175"},{"size":2815,"mtime":1658974746565,"results":"235","hashOfConfig":"175"},{"size":7052,"mtime":1658974746672,"results":"236","hashOfConfig":"175"},{"size":6604,"mtime":1658974746673,"results":"237","hashOfConfig":"175"},{"size":9711,"mtime":1658974746671,"results":"238","hashOfConfig":"175"},{"size":5684,"mtime":1658974746676,"results":"239","hashOfConfig":"175"},{"size":922,"mtime":1658974746564,"results":"240","hashOfConfig":"175"},{"size":629,"mtime":1658974746565,"results":"241","hashOfConfig":"175"},{"size":2225,"mtime":1658974746718,"results":"242","hashOfConfig":"175"},{"size":5050,"mtime":1658974746640,"results":"243","hashOfConfig":"175"},{"size":661,"mtime":1658974746580,"results":"244","hashOfConfig":"175"},{"size":364,"mtime":1658974746571,"results":"245","hashOfConfig":"175"},{"size":615,"mtime":1658974746611,"results":"246","hashOfConfig":"175"},{"size":695,"mtime":1658974746614,"results":"247","hashOfConfig":"175"},{"size":2288,"mtime":1658974746561,"results":"248","hashOfConfig":"175"},{"size":812,"mtime":1658974746562,"results":"249","hashOfConfig":"175"},{"size":11444,"mtime":1658974746603,"results":"250","hashOfConfig":"175"},{"size":6007,"mtime":1658974746602,"results":"251","hashOfConfig":"175"},{"size":3800,"mtime":1658974746583,"results":"252","hashOfConfig":"175"},{"size":2798,"mtime":1658974746606,"results":"253","hashOfConfig":"175"},{"size":2057,"mtime":1658974746608,"results":"254","hashOfConfig":"175"},{"size":3956,"mtime":1658974746573,"results":"255","hashOfConfig":"175"},{"size":1557,"mtime":1658974746579,"results":"256","hashOfConfig":"175"},{"size":6104,"mtime":1658974746708,"results":"257","hashOfConfig":"175"},{"size":1870,"mtime":1658974746681,"results":"258","hashOfConfig":"175"},{"size":4257,"mtime":1658974746706,"results":"259","hashOfConfig":"175"},{"size":24705,"mtime":1658974746657,"results":"260","hashOfConfig":"175"},{"size":10492,"mtime":1658974746660,"results":"261","hashOfConfig":"175"},{"size":2301859,"mtime":1658974746076,"results":"262","hashOfConfig":"175"},{"size":4405,"mtime":1658974746569,"results":"263","hashOfConfig":"175"},{"size":12638,"mtime":1658974746568,"results":"264","hashOfConfig":"175"},{"size":33274,"mtime":1658974746675,"results":"265","hashOfConfig":"175"},{"size":2444,"mtime":1658974746646,"results":"266","hashOfConfig":"175"},{"size":1744,"mtime":1658974746013,"results":"267","hashOfConfig":"175"},{"size":1815,"mtime":1658974746649,"results":"268","hashOfConfig":"175"},{"size":8492,"mtime":1658974746661,"results":"269","hashOfConfig":"175"},{"size":7990,"mtime":1658974746664,"results":"270","hashOfConfig":"175"},{"size":572,"mtime":1658974746616,"results":"271","hashOfConfig":"175"},{"size":1674,"mtime":1658974746623,"results":"272","hashOfConfig":"175"},{"size":2023,"mtime":1658974746630,"results":"273","hashOfConfig":"175"},{"size":7060,"mtime":1658974746636,"results":"274","hashOfConfig":"175"},{"size":6124,"mtime":1658974746708,"results":"275","hashOfConfig":"175"},{"size":10972,"mtime":1658974746680,"results":"276","hashOfConfig":"175"},{"size":19896,"mtime":1658974746677,"results":"277","hashOfConfig":"175"},{"size":3738,"mtime":1658974746610,"results":"278","hashOfConfig":"175"},{"size":1369,"mtime":1658974746561,"results":"279","hashOfConfig":"175"},{"size":4862,"mtime":1658974746654,"results":"280","hashOfConfig":"175"},{"size":5656,"mtime":1658974746658,"results":"281","hashOfConfig":"175"},{"size":3285,"mtime":1658974746566,"results":"282","hashOfConfig":"175"},{"size":780,"mtime":1658974746577,"results":"283","hashOfConfig":"175"},{"size":1272,"mtime":1658974746633,"results":"284","hashOfConfig":"175"},{"size":2545,"mtime":1658974746569,"results":"285","hashOfConfig":"175"},{"size":2374,"mtime":1658974746663,"results":"286","hashOfConfig":"175"},{"size":5840,"mtime":1658974746624,"results":"287","hashOfConfig":"175"},{"size":21908,"mtime":1658974746614,"results":"288","hashOfConfig":"175"},{"size":15004,"mtime":1658974746613,"results":"289","hashOfConfig":"175"},{"size":257,"mtime":1658974746716,"results":"290","hashOfConfig":"175"},{"size":4395,"mtime":1658974746605,"results":"291","hashOfConfig":"175"},{"size":8169,"mtime":1658974746604,"results":"292","hashOfConfig":"175"},{"size":10508,"mtime":1658974746065,"results":"293","hashOfConfig":"175"},{"size":8862,"mtime":1658974746679,"results":"294","hashOfConfig":"175"},{"size":1413,"mtime":1658974746707,"results":"295","hashOfConfig":"175"},{"size":5836,"mtime":1658974746562,"results":"296","hashOfConfig":"175"},{"size":1470,"mtime":1658974746567,"results":"297","hashOfConfig":"175"},{"size":1264,"mtime":1658974746572,"results":"298","hashOfConfig":"175"},{"size":5268,"mtime":1658974746576,"results":"299","hashOfConfig":"175"},{"size":402,"mtime":1658974746651,"results":"300","hashOfConfig":"175"},{"size":4224,"mtime":1658974746574,"results":"301","hashOfConfig":"175"},{"size":2019,"mtime":1658974746575,"results":"302","hashOfConfig":"175"},{"size":23360,"mtime":1658974746615,"results":"303","hashOfConfig":"175"},{"size":475,"mtime":1658974746573,"results":"304","hashOfConfig":"175"},{"size":1450,"mtime":1658974746634,"results":"305","hashOfConfig":"175"},{"size":8511,"mtime":1658974746631,"results":"306","hashOfConfig":"175"},{"size":4684,"mtime":1658974746634,"results":"307","hashOfConfig":"175"},{"size":4899,"mtime":1658974746680,"results":"308","hashOfConfig":"175"},{"size":1224,"mtime":1658974746588,"results":"309","hashOfConfig":"175"},{"size":336,"mtime":1658974746707,"results":"310","hashOfConfig":"175"},{"size":1731,"mtime":1658974746632,"results":"311","hashOfConfig":"175"},{"size":12173,"mtime":1658974746632,"results":"312","hashOfConfig":"175"},{"size":660,"mtime":1658974746683,"results":"313","hashOfConfig":"175"},{"size":219,"mtime":1658974746574,"results":"314","hashOfConfig":"175"},{"size":10607,"mtime":1658974746617,"results":"315","hashOfConfig":"175"},{"size":9714,"mtime":1658974746618,"results":"316","hashOfConfig":"175"},{"size":505,"mtime":1658974746716,"results":"317","hashOfConfig":"175"},{"size":8993,"mtime":1658974746630,"results":"318","hashOfConfig":"175"},{"size":7274,"mtime":1658974746623,"results":"319","hashOfConfig":"175"},{"size":4919,"mtime":1658974746608,"results":"320","hashOfConfig":"175"},{"size":1293,"mtime":1658974746607,"results":"321","hashOfConfig":"175"},{"size":6871,"mtime":1658974746586,"results":"322","hashOfConfig":"175"},{"size":13458,"mtime":1658974746603,"results":"323","hashOfConfig":"175"},{"size":12357,"mtime":1658974746625,"results":"324","hashOfConfig":"175"},{"size":9406,"mtime":1658974746622,"results":"325","hashOfConfig":"175"},{"size":9511,"mtime":1658974746623,"results":"326","hashOfConfig":"175"},{"size":18320,"mtime":1658974746627,"results":"327","hashOfConfig":"175"},{"size":19187,"mtime":1658974746626,"results":"328","hashOfConfig":"175"},{"size":16951,"mtime":1658974746575,"results":"329","hashOfConfig":"175"},{"size":18825,"mtime":1658974746624,"results":"330","hashOfConfig":"175"},{"size":3510,"mtime":1658974746578,"results":"331","hashOfConfig":"175"},{"size":1865,"mtime":1658974746691,"results":"332","hashOfConfig":"175"},{"size":10864,"mtime":1658974746625,"results":"333","hashOfConfig":"175"},{"size":3513,"mtime":1658974746628,"results":"334","hashOfConfig":"175"},{"size":3646,"mtime":1658974746626,"results":"335","hashOfConfig":"175"},{"size":1478,"mtime":1658974746690,"results":"336","hashOfConfig":"175"},{"size":6596,"mtime":1658974746687,"results":"337","hashOfConfig":"175"},{"size":12150,"mtime":1658974746687,"results":"338","hashOfConfig":"175"},{"size":8596,"mtime":1658974746687,"results":"339","hashOfConfig":"175"},{"size":6763,"mtime":1658974746629,"results":"340","hashOfConfig":"175"},{"size":6588,"mtime":1658974746625,"results":"341","hashOfConfig":"175"},{"size":1175,"mtime":1658974746563,"results":"342","hashOfConfig":"175"},{"size":2530,"mtime":1658974746689,"results":"343","hashOfConfig":"175"},{"size":2410,"mtime":1658974746686,"results":"344","hashOfConfig":"175"},{"size":207288,"mtime":1658974746066,"results":"345","hashOfConfig":"175"},{"size":899,"mtime":1658974746718,"results":"346","hashOfConfig":"175"},{"size":669,"mtime":1658974746710,"results":"347","hashOfConfig":"175"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9xncb",{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/index.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/reportWebVitals.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/i18n.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store.js",["824","825","826","827"],"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./store/reducers\";\nimport UserReducer from \"store/reducers/UserReducer/UserReducer\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nlet persistor = persistStore(store);\n\nexport { persistor, store };\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/RootScreen.js",["828","829","830","831","832","833","834"],"import { Fragment, useState, useRef, useEffect } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport axios from \"axios\";\n//components\nimport RouteWithSubRoutes from \"components/Commons/RouteWithSubRoutes\";\nimport { routes } from \"config/routes\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n//common screen\nimport HomeScreen from \"./HomeScreen/HomeScreen\";\nimport UserSignInScreen from \"./UserAdmissionScreen/UserSignInScreen\";\nimport UserRegistrationScreen from \"./UserAdmissionScreen/UserRegistrationScreen\";\nimport ProfileScreen from \"./ProfileScreen/ProfileScreen\";\nimport MerchantRegistrationScreen from \"./MerchantRegistrationScreen/MerchantRegistrationScreen\";\nimport SignContractScreen from \"./MerchantRegistrationScreen/SignContractScreen/SignContractScreen\";\nimport MerchantFormScreen from \"./MerchantRegistrationScreen/MerchantFormScreen\";\nimport ProviderDetailScreen from \"./ProviderDetailScreen/ProviderDetailScreen\";\n//merchant registration form screen\nimport ServiceInfoForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/ServiceInfoForm\";\nimport RegisteredRepresentativeForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/RegisteredRepresentativeForm\";\nimport BusinessUnitForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/BusinessUnitForm\";\nimport ProductDetailForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/ProductDetailForm\";\nimport BankInfoForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/BankInfoForm\";\nimport MerchantDashboardScreen from \"./MerchantDashboardScreen/MerchantDashboardScreen\";\nimport OrderCheckoutScreen from \"./OrderCheckoutScreen/OrderCheckoutScreen\";\nimport OrderTrackingScreen from \"./OrderTrackingScreen/OrderTrackingScreen\";\nimport SearchScreen from \"./SearchScreen/SearchScreen\";\nimport ShipperScreen from \"./ShipperScreen/ShipperScreen\";\nimport {\n  setCurrentLocation,\n  getUserNotification,\n} from \"store/actions/UserAction/UserAction\";\nimport { getProviderNotification } from \"store/actions/ProviderAction/ProviderAction\";\nconst history = createBrowserHistory();\n\nfunction RootScreen(props) {\n  const getPosition = () => {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(res, rej);\n    });\n  };\n  useEffect(() => {\n    async function getUserLocation() {\n      var position = await getPosition();\n      const { latitude, longitude } = position.coords;\n      const endpoint = `https://api.geoapify.com/v1/geocode/reverse?lat=${latitude}&lon=${longitude}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n      let res = await axios.get(endpoint);\n      var address = \"\";\n      if (res.data) {\n        address = res.data?.features[0]?.properties?.formatted || \"\";\n      }\n      props.setCurrentLocation(latitude, longitude, address);\n    }\n    getUserLocation();\n  }, []);\n  useEffect(() => {\n    async function getNotification(role, uid, pid) {\n      if (role === 2) {\n        await props.getProviderNotification(pid);\n        return;\n      }\n      await props.getUserNotification(uid);\n      return;\n    }\n    if (props.user?.profile?.length !== 0 && props.user?.profile?.role)\n      getNotification(\n        props.user.profile.role,\n        props.user.profile.user_id,\n        props.user.provider_id\n      );\n  }, [props.user?.profile?.role]);\n  return (\n    <Fragment>\n      <Router history={history}>\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route exact path=\"/home\" component={HomeScreen} />\n        <Route exact path=\"/sign-up\" component={UserRegistrationScreen} />\n        <Route exact path=\"/sign-in\" component={UserSignInScreen} />\n        <Route exact path=\"/search\" component={SearchScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/shipper-simulator\" component={ShipperScreen} />\n        <Route\n          exact\n          path=\"/provider-detail/:id\"\n          component={ProviderDetailScreen}\n        />\n        <Route\n          exact\n          path=\"/order-checkout/:uid\"\n          component={OrderCheckoutScreen}\n        />\n        <Route\n          exact\n          path=\"/order-tracking/:order_code\"\n          component={OrderTrackingScreen}\n        />\n        <Route\n          exact\n          path=\"/merchant-registration\"\n          component={MerchantRegistrationScreen}\n        />\n        <Route\n          exact\n          path=\"/merchant-sign-contract\"\n          component={SignContractScreen}\n        />\n        <Route exact path=\"/merchant-registration/:id/service\">\n          <MerchantFormScreen>\n            <ServiceInfoForm />\n          </MerchantFormScreen>\n        </Route>\n        <Route exact path=\"/merchant-registration/:id/representative\">\n          <MerchantFormScreen>\n            <RegisteredRepresentativeForm />\n          </MerchantFormScreen>\n        </Route>\n        <Route exact path=\"/merchant-registration/:id/business-unit\">\n          <MerchantFormScreen>\n            <BusinessUnitForm />\n          </MerchantFormScreen>\n        </Route>\n        <Route exact path=\"/merchant-registration/:id/product-detail\">\n          <MerchantFormScreen>\n            <ProductDetailForm />\n          </MerchantFormScreen>\n        </Route>\n        <Route exact path=\"/merchant-registration/:id/bank\">\n          <MerchantFormScreen>\n            <BankInfoForm />\n          </MerchantFormScreen>\n        </Route>\n        <Route path=\"/merchant-dashboard\" component={MerchantDashboardScreen} />\n\n        <Route exact path=\"/:lang(en|vi)/\" component={HomeScreen} />\n        <Route exact path=\"/:lang(en|vi)/home\" component={HomeScreen} />\n        <Route\n          exact\n          path=\"/:lang(en|vi)/sign-in\"\n          component={UserSignInScreen}\n        />\n        <Route\n          exact\n          path=\"/:lang(en|vi)/sign-up\"\n          component={UserRegistrationScreen}\n        />\n        <Route\n          exact\n          path=\"/:lang(en|vi)/merchant-registration\"\n          component={MerchantRegistrationScreen}\n        />\n      </Router>\n    </Fragment>\n  );\n}\nRootScreen.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  setCurrentLocation: PropTypes.func.isRequired,\n  getUserNotification: PropTypes.func.isRequired,\n  getProviderNotification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\nexport default connect(mapStateToProps, {\n  setCurrentLocation,\n  getProviderNotification,\n  getUserNotification,\n})(RootScreen);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/UserAdmissionScreen/UserRegistrationScreen.js",["835"],"import React from \"react\";\nimport {useState, useEffect } from \"react\";\nimport UserRegistration from \"components/UserAdmission/UserRegisteration\";\nimport { Fragment } from \"react\";\n\nfunction UserRegistrationScreen(props) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <Fragment>\n      <UserRegistration />\n    </Fragment>\n  );\n}\n\nexport default UserRegistrationScreen;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/SignContractScreen/SignContractScreen.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/HomeScreen/HomeScreen.js",["836","837","838","839"],"import React from \"react\";\nimport { Suspense } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\n\nimport { withRouter } from \"react-router-dom\";\nimport Home from \"components/HomePage/Home\";\nimport { Fragment } from \"react\";\nimport Spinner from \"components/Commons/Overlay/Spinner/Spinner\";\n\nfunction HomeScreen(props) {\n  return (\n    <Fragment>\n      <Home />\n    </Fragment>\n  );\n}\n\nexport default withRouter(withAuth(HomeScreen));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/UserAdmissionScreen/UserSignInScreen.js",["840"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserSignIn from \"components/UserAdmission/UserSignIn\";\nimport { Fragment } from \"react\";\n\nfunction UserSignInScreen(props) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <Fragment>\n      <UserSignIn />\n    </Fragment>\n  );\n}\n\nexport default withRouter(UserSignInScreen);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProviderDetailScreen/ProviderDetailScreen.js",["841","842","843","844","845"],"import React from \"react\";\nimport { Suspense } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport ProviderDetail from \"components/ProviderDetail/ProviderDetail\";\nimport { Fragment } from \"react\";\nimport Spinner from \"components/Commons/Overlay/Spinner/Spinner\";\n\nfunction ProviderDetailScreen(props) {\n  return (\n    <Fragment>\n      <ProviderDetail />\n    </Fragment>\n  );\n}\n\nexport default withRouter(ProviderDetailScreen);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantDashboardScreen/MerchantDashboardScreen.js",["846","847","848","849"],"import React, { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\n//components\nimport MerchantDashboard from \"components/MerchantDashboard/MerchantDashboard\";\n\nfunction MerchantDashboardScreen(props) {\n  return (\n    <Fragment>\n      <MerchantDashboard />\n    </Fragment>\n  );\n}\nMerchantDashboardScreen.propTypes = {\n  merchant: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  merchant: state.ProviderReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, null)(withAuth(MerchantDashboardScreen))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/MerchantFormScreen.js",["850","851","852","853","854","855","856","857"],"import React, { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\n\nimport MerchantForm from \"components/MerchantRegistration/Forms/MerchantForm\";\nimport ServiceInfoForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/ServiceInfoForm\";\nimport RegisteredRepresentativeForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/RegisteredRepresentativeForm\";\nimport BusinessUnitForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/BusinessUnitForm\";\nimport ProductDetailForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/ProductDetailForm\";\nimport BankInfoForm from \"components/MerchantRegistration/Forms/DetailMerchantForm/BankInfoForm\";\n\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\n\nfunction MerchantFormScreen(props) {\n  useEffect(() => {\n    /*\n    if (!props.user.isUserAuthenticated) {\n      props.setDialogBox(\n        \"You must sign up to access to this features.\",\n        \"Warning\",\n        5000\n      );\n      props.history.push(\"/\");\n\n      return;\n    }\n    if (props.merchant.isMerchantAuthenticated) {\n      props.setDialogBox(\n        \"You have already registered a business account in Tastie.\",\n        \"Warning\",\n        5000\n      );\n      props.history.push(\"/\");\n\n      return;\n    }\n\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });*/\n  }, []);\n  return (\n    <Fragment>\n      <MerchantForm>{props.children}</MerchantForm>\n    </Fragment>\n  );\n}\nMerchantFormScreen.propTypes = {\n  merchant: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  setDialogBox: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  merchant: state.ProviderReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, {\n    setDialogBox,\n  })(withAuth(MerchantFormScreen))\n);\n\n/*\n        <Switch>\n          <Route\n            exact\n            path={`${match.path}/service`}\n            component={ServiceInfoForm}\n          />\n          <Route\n            exact\n            path={`${match.path}/representative`}\n            component={RegisteredRepresentativeForm}\n          />\n          <Route\n            exact\n            path={`${match.path}/business-unit`}\n            component={RegisteredRepresentativeForm}\n          />\n        </Switch>\n        */\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ShipperScreen/ShipperScreen.js",["858","859"],"import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Shipper from \"components/Shipper/Shipper\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nfunction ShipperScreen(props) {\n  const { user } = props;\n  return (\n    <Fragment>\n      <Shipper />\n    </Fragment>\n  );\n}\n\nShipperScreen.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, {})(ShipperScreen));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/OrderCheckoutScreen/OrderCheckoutScreen.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProfileScreen/ProfileScreen.js",["860","861","862","863","864","865","866","867"],"import React from \"react\";\nimport { Suspense } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Profile from \"components/Profile/Profile\";\nimport { getAccessTokenAPI } from \"store/actions/UserAction/AuthAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nfunction ProfileScreen(props) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchAccessToken(token) {\n      const res = await props.getAccessTokenAPI(token);\n      return res?.isAuth;\n    }\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    if (refreshToken !== null) {\n      let result = fetchAccessToken(refreshToken);\n      if (result) {\n        setLoading(false);\n        return;\n      } else {\n        props.history.push(\"/sign-in\");\n      }\n    }\n    props.history.push(\"/sign-in\");\n  }, []);\n  return !loading && <Profile />;\n}\n\nProfileScreen.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getAccessTokenAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getAccessTokenAPI })(ProfileScreen)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/MerchantRegistrationScreen/MerchantRegistrationScreen.js",["868"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport GuidePage from \"components/MerchantRegistration/GuidePage/GuidePage\";\nfunction MerchantRegistrationScreen(props) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <Fragment>\n      <GuidePage />\n    </Fragment>\n  );\n}\n\nexport default withRouter(MerchantRegistrationScreen);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/SearchScreen/SearchScreen.js",["869"],"import React from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Spinner from \"components/Commons/Overlay/Spinner/Spinner\";\nimport SearchResult from \"components/SearchResult/SearchResult\";\n\nfunction HomeScreen(props) {\n  return (\n    <Fragment>\n      <SearchResult />\n    </Fragment>\n  );\n}\n\nexport default withRouter(withAuth(HomeScreen));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/OrderTrackingScreen/OrderTrackingScreen.js",["870","871"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport OrderTracking from \"components/OrderTracking/OrderTracking\";\nfunction OrderTrackingScreen(props) {\n  return (\n    <Fragment>\n      <OrderTracking />\n    </Fragment>\n  );\n}\n\nexport default withRouter(OrderTrackingScreen);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/en/common_en.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/fr/common_fr.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/locale/vi/common_vi.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/index.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/UserReducer/UserReducer.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/config/routes.js",["872","873","874"],"import Homepage from \"components/HomePage/Home\";\nimport UserRegistrationScreen from \"screens/UserAdmissionScreen/UserRegistrationScreen\";\nimport UserSignInScreen from \"screens/UserAdmissionScreen/UserSignInScreen\";\nimport MerchantRegistrationScreen from \"screens/MerchantRegistrationScreen/MerchantRegistrationScreen\";\nimport SignContractScreen from \"screens/MerchantRegistrationScreen/SignContractScreen/SignContractScreen\";\nimport MerchantFormScreen from \"screens/MerchantRegistrationScreen/MerchantFormScreen\";\nimport MerchantDashboardScreen from \"screens/MerchantDashboardScreen/MerchantDashboardScreen\";\nimport HomeScreen from \"screens/HomeScreen/HomeScreen\";\n\nimport NavBar from \"components/Commons/Layout/NavBar/NavBar\";\nimport LoginForm from \"components/UserAdmission/LoginForm/LoginForm\";\n\nexport const routes = [\n  {\n    path: \"/:lang(en|fr|vi)/\",\n    component: HomeScreen,\n    exact: true,\n    breadcrumb: \"Home\",\n  },\n  {\n    path: \"/\",\n    component: HomeScreen,\n    exact: true,\n    breadcrumb: \"Home\",\n  },\n  {\n    path: \"/sign-up\",\n    exact: true,\n    component: UserRegistrationScreen,\n    breadcrumb: \"Sign Up\",\n  },\n  {\n    path: \"/:lang(en|fr|vi)/sign-up\",\n    exact: true,\n    component: UserSignInScreen,\n    breadcrumb: \"Sign Up\",\n  },\n  {\n    path: \"/:lang(en|fr|vi)/sign-in\",\n    exact: true,\n    component: UserSignInScreen,\n    breadcrumb: \"Sign In\",\n  },\n  {\n    path: \"/sign-in\",\n    exact: true,\n    component: UserSignInScreen,\n    breadcrumb: \"Sign In\",\n  },\n  {\n    path: \"/merchant-registration\",\n    exact: true,\n    component: MerchantRegistrationScreen,\n    breadcrumb: \"Start Business\",\n  },\n  {\n    path: \"/merchant-registration/sign-contract\",\n    exact: true,\n    component: SignContractScreen,\n    breadcrumb: \"Contract\",\n  },\n  {\n    path: \"/merchant-registration/:form\",\n    exact: true,\n    component: MerchantFormScreen,\n    breadcrumb: \"Service Info\",\n  },\n  {\n    path: \"/merchant-dashboard\",\n    exact: true,\n    component: MerchantDashboardScreen,\n    breadcrumb: \"Dashboard\",\n  },\n];\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/RouteWithSubRoutes.js",["875","876"],"import { Router, Route, Switch } from \"react-router-dom\";\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nexport default RouteWithSubRoutes;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/ProviderAction/ProviderAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UserAction/UserAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/ServiceInfoForm.js",["877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895"],"import \"./DetailMerchantForm.scss\";\nimport { useEffect, useState, useRef, useCallback, Fragment } from \"react\";\nimport \"style/Common.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { validateMerchantForm1 } from \"utils/FormUtils/MerchantFormValidate\";\nimport locations from \"assets/json_location/locations\";\nimport FormError from \"components/Commons/ErrorHandlers/FormError/FormError\";\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n\nimport { updateServiceInfoFormAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk } from \"@fortawesome/fontawesome-free-solid\";\nimport MapGL from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\";\n\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport StepperArrow from \"assets/stepper-arrow.png\";\n\nconst initialValues = {\n  name: \"\",\n  type: \"\",\n  street: \"\",\n  phone: \"\",\n  city: \"\",\n  district: \"\",\n  ward: \"\",\n  road: \"\",\n};\n\nconst formHeaderText = {\n  title: \"1. Provider Service Information\",\n  headerText: \"Set up your Tastie's merchant account\",\n  bodyText:\n    \"Your restaurant information will be public on Tastie. Make sure the information is accurrate and visible to the public.\",\n};\nfunction ServiceInfoForm(props) {\n  const [addressMapbox, setAddressMapbox] = useState(\"\");\n  const [viewport, setViewport] = useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8,\n  });\n\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  const handleGeocoderViewportChange = useCallback((newViewport) => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\n\n    return handleViewportChange({\n      ...newViewport,\n      ...geocoderDefaultOverrides,\n    });\n  }, []);\n\n  const getFullAddress = (road, city_id, district_id, ward_id) => {\n    const address = [];\n    locations\n      .filter((city) => city.code == city_id)\n      .map((selectedCity) => {\n        address.unshift(selectedCity.name);\n        selectedCity.districts\n          .filter((district) => district.code == district_id)\n          .map((selectedDistrict) => {\n            address.unshift(selectedDistrict.name);\n            selectedDistrict.wards\n              .filter((ward) => ward.code == ward_id)\n              .map((selectedWard) => {\n                address.unshift(selectedWard.name);\n              });\n          });\n      });\n    if (road) address.unshift(road);\n    return address.join(\", \");\n  };\n\n  const handleSubmitForm = async (values) => {\n    const { phone, city, district, ward, road } = values;\n    let merchantName = [values.name];\n    values.type && merchantName.push(values.type);\n    values.street && merchantName.push(values.street);\n    const formData = {\n      address: getFullAddress(road, city, district, ward),\n      latitude: viewport.latitude,\n      longitude: viewport.longitude,\n      merchant_name: merchantName.join(\" \"),\n      hotline: phone,\n      city_id: city,\n      district_id: district,\n      ward_id: ward,\n      road: road,\n    };\n    if (!props.match.params.id) return;\n    const updateStatus = await props.updateServiceInfoFormAPI(\n      props.match.params.id,\n      formData\n    );\n    if (updateStatus) props.history.push(\"representative\");\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validateMerchantForm1}\n      validateOnChange={false}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n\n        const searchOnMap = (values) => {\n          const { road, city, district, ward } = values;\n          const result = getFullAddress(road, city, district, ward);\n          setAddressMapbox(result);\n        };\n        return (\n          <Fragment>\n            <Form className=\"merchant-form-container\">\n              <FormHeader\n                title={formHeaderText.title}\n                headerText={formHeaderText.headerText}\n                bodyText={formHeaderText.bodyText}\n              />\n              <div className=\"merchant-form-wrapper\">\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Merchant name{\" \"}\n                    <FontAwesomeIcon className=\"asterisk\" icon={faAsterisk} />\n                  </div>\n                  <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                    <Field\n                      className=\"form-text-field\"\n                      style={\n                        values.name\n                          ? { backgroundColor: \"#F2F2F2\" }\n                          : { backgroundColor: \"white\" }\n                      }\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder=\"Merchant name\"\n                    />\n                    <img src={StepperArrow} width={20} height={2.5} />\n                    <Field\n                      className=\"form-text-field\"\n                      style={\n                        values.type\n                          ? { backgroundColor: \"#F2F2F2\" }\n                          : { backgroundColor: \"white\" }\n                      }\n                      type=\"text\"\n                      name=\"type\"\n                      placeholder=\"Restaurant type\"\n                    />\n                    <img src={StepperArrow} width={20} height={2.5} />\n                    <Field\n                      className=\"form-text-field\"\n                      style={\n                        values.street\n                          ? { backgroundColor: \"#F2F2F2\" }\n                          : { backgroundColor: \"white\" }\n                      }\n                      type=\"text\"\n                      name=\"street\"\n                      placeholder=\"Street\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={errors.name && touched.name ? errors.name : \"\"}\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                  <span className=\"field-description\">\n                    Merchant name should be named by the name of the restaurant\n                    and must be in the same format as provided. <br />\n                    E.g: \"The Alley - Tra Sua - Ho Tung Mau\"\n                  </span>\n                </div>\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Phone number{\" \"}\n                    <FontAwesomeIcon className=\"asterisk\" icon={faAsterisk} />\n                  </div>\n                  <div className=\"merchant-form-input-wrapper form-input-medium\">\n                    <Field\n                      className={\n                        errors.phone\n                          ? \"form-text-field error\"\n                          : \"form-text-field\"\n                      }\n                      style={\n                        values.phone\n                          ? { backgroundColor: \"#F2F2F2\" }\n                          : { backgroundColor: \"white\" }\n                      }\n                      type=\"text\"\n                      name=\"phone\"\n                      placeholder=\"Enter your merchant phone number\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={errors.phone && touched.phone ? errors.phone : \"\"}\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                  <span className=\"field-description\"></span>\n                </div>\n\n                <div className=\"group-field-name\">Business address:</div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <span className=\"field-description\">\n                    To make sure your business address is accurate. Please check\n                    location displayed on map below.\n                  </span>\n                </div>\n                <div className=\"location-wrapper\">\n                  <div\n                    className=\"group-field-medium\"\n                    onClick={() => searchOnMap(values)}\n                  >\n                    <div className=\"merchant-form-field-wrapper\">\n                      <div className=\"merchant-form-label-wrapper\">City</div>\n                      <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                        <Field\n                          className=\"form-text-field-select\"\n                          style={{ width: \"100%\", height: \"35px\" }}\n                          as=\"select\"\n                          name=\"city\"\n                          style={\n                            values.city\n                              ? { backgroundColor: \"#F2F2F2\" }\n                              : { backgroundColor: \"white\" }\n                          }\n                        >\n                          <option value=\"\" disabled hidden>\n                            Select a city...\n                          </option>\n                          {locations.map((city) => (\n                            <option\n                              key={city.code}\n                              value={city.code}\n                              label={city.name}\n                            />\n                          ))}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"merchant-form-field-wrapper\">\n                      <div className=\"merchant-form-label-wrapper\">\n                        District\n                      </div>\n                      <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                        <Field\n                          className=\"form-text-field-select\"\n                          style={{ width: \"100%\", height: \"35px\" }}\n                          as=\"select\"\n                          name=\"district\"\n                          style={\n                            values.district\n                              ? { backgroundColor: \"#F2F2F2\" }\n                              : { backgroundColor: \"white\" }\n                          }\n                        >\n                          <option value=\"\" disabled hidden>\n                            Select a district...\n                          </option>\n                          {locations\n                            .filter((city) => city.code == values.city)\n                            .map((selectedCity) =>\n                              selectedCity.districts.map((district) => (\n                                <option\n                                  key={district.code}\n                                  value={district.code}\n                                  label={district.name}\n                                />\n                              ))\n                            )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"merchant-form-field-wrapper\">\n                      <div className=\"merchant-form-label-wrapper\">Ward</div>\n                      <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                        <Field\n                          className=\"form-text-field-select\"\n                          style={{ width: \"100%\", height: \"35px\" }}\n                          as=\"select\"\n                          name=\"ward\"\n                          style={\n                            values.ward\n                              ? { backgroundColor: \"#F2F2F2\" }\n                              : { backgroundColor: \"white\" }\n                          }\n                        >\n                          <option value=\"\" disabled hidden>\n                            Select a ward...\n                          </option>\n                          {locations\n                            .filter((city) => city.code == values.city)\n                            .map((selectedCity) =>\n                              selectedCity.districts\n                                .filter(\n                                  (district) => district.code == values.district\n                                )\n                                .map((selectedDistrict) =>\n                                  selectedDistrict.wards.map((ward) => (\n                                    <option\n                                      key={ward.code}\n                                      value={ward.code}\n                                      label={ward.name}\n                                    />\n                                  ))\n                                )\n                            )}\n                        </Field>\n                      </div>\n                    </div>\n                    <div className=\"merchant-form-field-wrapper\">\n                      <div className=\"merchant-form-label-wrapper\">Road</div>\n                      <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                        <Field\n                          className={\n                            errors.road\n                              ? \"form-text-field error\"\n                              : \"form-text-field\"\n                          }\n                          style={\n                            values.road\n                              ? { backgroundColor: \"#F2F2F2\" }\n                              : { backgroundColor: \"white\" }\n                          }\n                          type=\"text\"\n                          name=\"road\"\n                          placeholder=\"House number - Road\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"map-container\">\n                    <MapGL\n                      ref={mapRef}\n                      {...viewport}\n                      width=\"100%\"\n                      height=\"320px\"\n                      onViewportChange={handleViewportChange}\n                      mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n                      containerStyle={{\n                        zIndex: 0,\n                      }}\n                      mapboxApiAccessToken={\n                        \"pk.eyJ1Ijoic2FuZ25ndXllbjI4MDMiLCJhIjoiY2t4bmwwMHNvM3h4azJxcGdjNnhlOHdlYSJ9.QFPmkMHDE3wfAJYE1oqyOg\"\n                      }\n                    >\n                      <Geocoder\n                        limit={1}\n                        mapRef={mapRef}\n                        style={{ zIndex: 0 }}\n                        onViewportChange={handleGeocoderViewportChange}\n                        inputValue={addressMapbox}\n                        mapboxApiAccessToken={\n                          \"pk.eyJ1Ijoic2FuZ25ndXllbjI4MDMiLCJhIjoiY2t4bmwwMHNvM3h4azJxcGdjNnhlOHdlYSJ9.QFPmkMHDE3wfAJYE1oqyOg\"\n                        }\n                        countries={\"vn\"}\n                        position={\"top-left\"}\n                        trackProximity={true}\n                      />\n                    </MapGL>\n                  </div>\n                </div>\n\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={errors.road && touched.road ? errors.road : \"\"}\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                </div>\n              </div>\n              <div className=\"btn-merchant-registration-wrapper\">\n                <button className=\"btn-merchant-registration-back\">Back</button>\n                <button\n                  className=\"btn-merchant-registration-next\"\n                  type=\"submit\"\n                >\n                  Save\n                </button>\n              </div>\n            </Form>\n          </Fragment>\n        );\n      }}\n    </Formik>\n  );\n}\n\nServiceInfoForm.propTypes = {\n  updateServiceInfoFormAPI: PropTypes.func.isRequired,\n};\n\nexport default withRouter(\n  connect(null, {\n    updateServiceInfoFormAPI,\n  })(ServiceInfoForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/BusinessUnitForm.js",["896","897","898","899"],"import \"./DetailMerchantForm.scss\";\nimport \"style/Common.scss\";\nimport { useEffect, useState, Fragment } from \"react\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport { validateMerchantForm3 } from \"utils/FormUtils/MerchantFormValidate\";\nimport FormError from \"components/Commons/ErrorHandlers/FormError/FormError\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport CategorySelector from \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector\";\nimport {\n  getCategoryAPI,\n  updateBusinessUnitInfoFormAPI,\n} from \"store/actions/ProviderAction/ProviderAction\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk, faImage } from \"@fortawesome/fontawesome-free-solid\";\nimport Switch from \"react-switch\";\n\nconst formHeaderText = {\n  title: \"3. Business unit information\",\n  headerText:\n    \"Set up your restaurant's information to attract and get more customers.\",\n  bodyText:\n    \"Make your business unit more accessible to the customers by providing as detailed information regarding your product as possible in the following format.\",\n};\n\nconst initialValues = {\n  operating: {\n    sunday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    monday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    tuesday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    wednesday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    thursday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    friday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n    saturday: {\n      openTime: \"00:00\",\n      closeTime: \"23:59\",\n    },\n  },\n  rushHour: \"\",\n  searchKeyword: \"\",\n  description: \"\",\n};\n\nfunction BusinessUnitForm(props) {\n  const [showRestaurantCategory, setShowRestaurantCategory] = useState(false);\n  const [showCuisineCategory, setShowCuisineCategory] = useState(false);\n  const [restaurantCategory, setRestaurantCategory] = useState([]);\n  const [cuisineCategory, setCuisineCategory] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState([]);\n  const [selectedCuisine, setSelectedCuisine] = useState([]);\n  useEffect(async () => {\n    try {\n      let restaurantCategory = await props.getCategoryAPI(\"provider\");\n      let cuisineCategory = await props.getCategoryAPI(\"cuisine\");\n      setRestaurantCategory(restaurantCategory);\n      setCuisineCategory(cuisineCategory);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (showRestaurantCategory || showCuisineCategory) {\n      document.body.style.position = \"fixed\";\n      return;\n    }\n    document.body.style.position = \"unset\";\n    document.body.style.overflowY = \"scroll\";\n  }, [showRestaurantCategory, showCuisineCategory]);\n  /*\n  const selectedCuisineCategory = [\n    { id: 1, categoryName: \"Milk tea\" },\n    { id: 2, categoryName: \"Coffee\" },\n    { id: 3, categoryName: \"Fastfood & StreetFood\" },\n    { id: 4, categoryName: \"ThaiFood\" },\n    { id: 5, categoryName: \"Dessert\" },\n  ];\n\n  const selectedRestaurantCategory = [\n    { id: 1, categoryName: \"Milk tea\" },\n    { id: 2, categoryName: \"Coffee\" },\n    { id: 3, categoryName: \"Fastfood & StreetFood\" },\n    { id: 4, categoryName: \"ThaiFood\" },\n    { id: 5, categoryName: \"Dessert\" },\n    { id: 6, categoryName: \"Bubble Tea\" },\n    { id: 7, categoryName: \"Macaroni\" },\n    { id: 8, categoryName: \"Icecream\" },\n    { id: 9, categoryName: \"Candy\" },\n    { id: 10, categoryName: \"Cake\" },\n    { id: 11, categoryName: \"Chewy Chewy\" },\n    { id: 12, categoryName: \"Hotpot\" },\n    { id: 13, categoryName: \"Fried Chicken\" },\n    { id: 14, categoryName: \"Pizza\" },\n    { id: 15, categoryName: \"Dessert\" },\n    { id: 16, categoryName: \"Milk tea\" },\n    { id: 17, categoryName: \"Coffee\" },\n    { id: 18, categoryName: \"Takoyaki\" },\n    { id: 19, categoryName: \"Spicy Food\" },\n    { id: 20, categoryName: \"Beefsteak\" },\n    { id: 28, categoryName: \"Sushi & Sashimi\" },\n    { id: 29, categoryName: \"Noodle\" },\n    { id: 30, categoryName: \"Korean Food\" },\n    { id: 31, categoryName: \"Machiato\" },\n    { id: 32, categoryName: \"Coffee\" },\n    { id: 33, categoryName: \"Fastfood & StreetFood\" },\n    { id: 34, categoryName: \"ThaiFood\" },\n    { id: 35, categoryName: \"Dessert\" },\n    { id: 36, categoryName: \"Milk tea\" },\n    { id: 37, categoryName: \"Coffee\" },\n    { id: 38, categoryName: \"Fastfood & StreetFood\" },\n    { id: 39, categoryName: \"ThaiFood\" },\n    { id: 40, categoryName: \"Dessert\" },\n  ];\n*/\n  //weekday-switchers-state\n  const [checkedSunday, setCheckedSunday] = useState(true);\n  const [checkedMonday, setCheckedMonday] = useState(true);\n  const [checkedTuesday, setCheckedTuesday] = useState(true);\n  const [checkedWednesday, setCheckedWednesday] = useState(true);\n  const [checkedThursday, setCheckedThursday] = useState(true);\n  const [checkedFriday, setCheckedFriday] = useState(true);\n  const [checkedSaturday, setCheckedSaturday] = useState(true);\n\n  const handleSubmitForm = async (values) => {\n    const { operating, rushHour, searchKeyword, description } = values;\n    if (!rushHour || !searchKeyword || !description) {\n      await props.setDialogBox(\n        \"Please fill in required fields.\",\n        \"Fail to submit this form\",\n        3000\n      );\n      return;\n    }\n\n    const formData = {\n      keyword: searchKeyword,\n      description: description,\n      avatar: \"\",\n      cover_picture: \"\",\n      facade_photo: \"\",\n      provider_category_id: selectedRestaurant,\n      cuisine_category_id: selectedCuisine,\n      rush_hour: rushHour,\n      operating: {\n        sunday: {\n          is_day_off: checkedSunday,\n          open_time: operating.sunday.openTime,\n          close_time: operating.sunday.closeTime,\n        },\n        monday: {\n          is_day_off: checkedMonday,\n          open_time: operating.monday.openTime,\n          close_time: operating.monday.closeTime,\n        },\n        tuesday: {\n          is_day_off: checkedTuesday,\n          open_time: operating.tuesday.openTime,\n          close_time: operating.tuesday.closeTime,\n        },\n        wednesday: {\n          is_day_off: checkedWednesday,\n          open_time: operating.wednesday.openTime,\n          close_time: operating.wednesday.closeTime,\n        },\n        thursday: {\n          is_day_off: checkedThursday,\n          open_time: operating.thursday.openTime,\n          close_time: operating.thursday.closeTime,\n        },\n        friday: {\n          is_day_off: checkedFriday,\n          open_time: operating.friday.openTime,\n          close_time: operating.friday.closeTime,\n        },\n        saturday: {\n          is_day_off: checkedSaturday,\n          open_time: operating.saturday.openTime,\n          close_time: operating.saturday.closeTime,\n        },\n      },\n    };\n    if (!props.match.params.id) return;\n    const updateStatus = await props.updateBusinessUnitInfoFormAPI(\n      props.match.params.id,\n      formData\n    );\n    if (updateStatus) props.history.push(\"product-detail\");\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validateMerchantForm3}\n      validateOnChange={false}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <>\n            <Form className=\"merchant-form-container\">\n              <FormHeader\n                title={formHeaderText.title}\n                headerText={formHeaderText.headerText}\n                bodyText={formHeaderText.bodyText}\n              />{\" \"}\n              <div className=\"merchant-form-wrapper\">\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-switch-label-wrapper\">\n                    Operation time{\" \"}\n                    <FontAwesomeIcon className=\"asterisk\" icon={faAsterisk} />\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Once set operation time, your restaurant must be open at\n                      these times. <br />\n                      Operation time can be changed right after merchant\n                      registration is completed.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-switch-wrapper\">\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedSunday((prev) => !prev);\n                        }}\n                        checked={checkedSunday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Sunday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedSunday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedSunday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.sunday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.sunday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedMonday((prev) => !prev);\n                        }}\n                        checked={checkedMonday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Monday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedMonday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedMonday === true ? (\n                        <Fragment>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.monday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.monday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </Fragment>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedTuesday((prev) => !prev);\n                        }}\n                        checked={checkedTuesday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Tuesday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedTuesday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedTuesday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.tuesday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.tuesday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedWednesday((prev) => !prev);\n                        }}\n                        checked={checkedWednesday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Wednesday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedWednesday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedWednesday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.wednesday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.wednesday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedThursday((prev) => !prev);\n                        }}\n                        checked={checkedThursday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Thursday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedThursday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedThursday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.thursday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.thursday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedFriday((prev) => !prev);\n                        }}\n                        checked={checkedFriday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Friday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedFriday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedFriday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.friday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.friday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n\n                    <div className=\"operation-time-wrapper\">\n                      <Switch\n                        onChange={() => {\n                          setCheckedSaturday((prev) => !prev);\n                        }}\n                        checked={checkedSaturday}\n                        onColor={\"#9C1818\"}\n                      />\n                      <span className=\"weekday-label\">Saturday</span>\n                      <span className=\"weekday-status-label\">\n                        {checkedSaturday ? \"Open\" : \"Closed\"}\n                      </span>\n                      {checkedSaturday === true ? (\n                        <>\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.saturday.openTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                          <Field\n                            className=\"form-text-field\"\n                            type=\"text\"\n                            name=\"operating.saturday.closeTime\"\n                            placeholder=\"00:00\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </>\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">Rush hour</div>\n                  <div className=\"merchant-form-input-wrapper form-input-small\">\n                    <Field\n                      className=\"form-text-field\"\n                      type=\"text\"\n                      name=\"rushHour\"\n                      placeholder=\"Rush hour\"\n                      maxLength={50}\n                      autoComplete=\"on\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={\n                      errors.rushHour && touched.rushHour ? errors.rushHour : \"\"\n                    }\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                </div>\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Search keywords\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Keywords separated by commas. Max. 25 characters.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <Field\n                      className=\"form-text-field\"\n                      type=\"text\"\n                      name=\"searchKeyword\"\n                      placeholder=\"Search Keyword\"\n                      maxLength={25}\n                      autoComplete=\"on\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">Description</div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Max. 150 characters.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <Field\n                      className=\"form-text-field-textarea\"\n                      component=\"textarea\"\n                      name=\"description\"\n                      placeholder=\"Restaurant Description\"\n                      maxLength={200}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Restaurant category\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Select at least 1 category and maximum 3 categories.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <div className=\"select-category-button-wrapper\">\n                      <button\n                        type=\"button\"\n                        className=\"btn-category\"\n                        onClick={() => setShowRestaurantCategory(true)}\n                      >\n                        Select category\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"tag-container\">\n                  {restaurantCategory.map((tag, index) =>\n                    selectedRestaurant.includes(tag.category_id) ? (\n                      <Tag key={tag.category_id} text={tag.category_name} />\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </div>\n\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Cuisine category\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Select at least 1 category and maximum 2 categories.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <div className=\"select-category-button-wrapper\">\n                      <button\n                        type=\"button\"\n                        className=\"btn-category\"\n                        onClick={() => setShowCuisineCategory(true)}\n                      >\n                        Select category\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"tag-container\">\n                  {cuisineCategory.map((tag, index) =>\n                    selectedCuisine.includes(tag.category_id) ? (\n                      <Tag key={tag.category_id} text={tag.category_name} />\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </div>\n                <div className=\"field-group-title\">\n                  Required rstaurant photo:\n                </div>\n                <div className=\"field-group-wrapper\">\n                  <div className=\"field-bottom-side-wrapper\">\n                    <span className=\"field-description\">\n                      Please use popular dish or logo of your shop to attract\n                      more customers <br />\n                      <FontAwesomeIcon className=\"asterisk\" icon={faAsterisk} />\n                      Note: If pictures provided don't satisfy our requirements,\n                      Tastie will replace them with Tastie logo so that your\n                      shop can start to sell as soon as possible. You can still\n                      change those photos later.\n                    </span>\n                  </div>\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      Cover Picture\n                    </div>\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div className=\"business-registration-browse\">\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faImage}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      Facade Photo\n                    </div>\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div className=\"business-registration-browse\">\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faImage}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      Avatar\n                    </div>\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div className=\"business-registration-browse\">\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faImage}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btn-merchant-registration-wrapper\">\n                <button className=\"btn-merchant-registration-back\">Back</button>\n                <button\n                  className=\"btn-merchant-registration-next\"\n                  type=\"submit\"\n                >\n                  Save\n                </button>\n              </div>\n            </Form>\n            <Modal\n              openModal={showRestaurantCategory}\n              title={\"Restaurant Category\"}\n              width={60}\n              height={500}\n              closeModal={() => {\n                setShowRestaurantCategory(false);\n              }}\n            >\n              <CategorySelector\n                save={() => setShowRestaurantCategory(false)}\n                selectedCategory={selectedRestaurant}\n                setSelectedCategory={setSelectedRestaurant}\n                list={restaurantCategory}\n                title={\"Select categories for restaurant's dishes (maximum: 3)\"}\n                required={3}\n              />\n            </Modal>\n            <Modal\n              openModal={showCuisineCategory}\n              title={\"Cuisine Category\"}\n              width={60}\n              height={500}\n              closeModal={() => {\n                setShowCuisineCategory(false);\n              }}\n            >\n              <CategorySelector\n                save={() => {\n                  setShowCuisineCategory(false);\n                }}\n                selectedCategory={selectedCuisine}\n                setSelectedCategory={setSelectedCuisine}\n                list={cuisineCategory}\n                title={\"Select categories for your restaurant (maximum: 2)\"}\n                required={2}\n              />\n            </Modal>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nBusinessUnitForm.propTypes = {\n  getCategoryAPI: PropTypes.func.isRequired,\n  updateBusinessUnitInfoFormAPI: PropTypes.func.isRequired,\n  setDialogBox: PropTypes.func.isRequired,\n};\n\nexport default withRouter(\n  connect(null, {\n    getCategoryAPI,\n    updateBusinessUnitInfoFormAPI,\n    setDialogBox,\n  })(BusinessUnitForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/BankInfoForm.js",["900","901","902","903","904","905"],"import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateMerchantForm5 } from \"utils/FormUtils/MerchantFormValidate\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk } from \"@fortawesome/fontawesome-free-solid\";\nimport \"./DetailMerchantForm.scss\";\nimport \"style/Common.scss\";\nimport FormError from \"components/Commons/ErrorHandlers/FormError/FormError\";\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport { updateBankInfoFormAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nconst formHeaderText = {\n  title: \"5. Bank Account Information\",\n  headerText: \"One final step to finish your merchant registration.\",\n  bodyText:\n    \"Make sure the following information is accurate as Tastie will send future profits (after 25% deduction of total bill according to the contract) through this bank number. Make sure your business license is up to date as our staff will very your business license within 24 hours\",\n};\nconst initialValues = {\n  idCardNumberBank: \"\",\n  dateOfIssue: \"\",\n  bankBeneficiaryName: \"\",\n  bankAccountNumber: \"\",\n  bankName: \"\",\n  bankProvince: \"\",\n  bankBranch: \"\",\n};\n\nfunction BankInfoForm(props) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  const handleSubmitForm = async (values) => {\n    const formData = {\n      id_card_number: values.idCardNumberBank,\n      date_of_issue: values.dateOfIssue,\n      bank_beneficiary_name: values.bankBeneficiaryName,\n      bank_account_number: values.bankAccountNumber,\n      bank_name: values.bankName,\n      bank_province: values.bankProvince,\n      bank_branch: values.bankBranch,\n    };\n    if (!props.match.params.id) return;\n    const updateStatus = await props.updateBankInfoFormAPI(\n      props.match.params.id,\n      formData\n    );\n    if (updateStatus) props.history.push(\"/merchant-dashboard\");\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validateMerchantForm5}\n      validateOnChange={false}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <>\n            <Form className=\"merchant-form-container\">\n              <FormHeader\n                title={formHeaderText.title}\n                headerText={formHeaderText.headerText}\n                bodyText={formHeaderText.bodyText}\n              />\n              <div className=\"merchant-form-wrapper\">\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Id card number\n                  </div>\n                  <div className=\"merchant-form-input-wrapper form-input-medium\">\n                    <Field\n                      className={\n                        errors.idCardNumberBank\n                          ? \"form-text-field error\"\n                          : \"form-text-field\"\n                      }\n                      type=\"text\"\n                      name=\"idCardNumberBank\"\n                      placeholder=\"ID card number\"\n                      maxLength={50}\n                      autoComplete=\"on\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={\n                      errors.idCardNumberBank && touched.idCardNumberBank\n                        ? errors.idCardNumberBank\n                        : \"\"\n                    }\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                </div>\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">\n                    Date of issue\n                  </div>\n                  <div className=\"merchant-form-input-wrapper form-input-medium\">\n                    <Field\n                      className={\n                        errors.dateOfIssue\n                          ? \"form-text-field error\"\n                          : \"form-text-field\"\n                      }\n                      type=\"date\"\n                      name=\"dateOfIssue\"\n                      placeholder=\"Date of issue\"\n                      maxLength={50}\n                      autoComplete=\"on\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <FormError\n                    err={\n                      errors.dateOfIssue && touched.dateOfIssue\n                        ? errors.dateOfIssue\n                        : \"\"\n                    }\n                    spaceBetween={0}\n                    fontSize={12}\n                    fontWeight={\"bold\"}\n                  />\n                  <span className=\"field-description\">\n                    Date of issue must be entered by the following format:\n                    YYYY/MM/DD. Eg. \"1999-01-01\"\n                  </span>\n                </div>\n                <div className=\"group-field-name\">Bank account:</div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <span className=\"field-description\">\n                    By providing the bank account information, the shop can\n                    receive payment immediately after confirming in case the\n                    payment method of this order is by credit card. No need to\n                    wait for driver to pay in cash.\n                  </span>\n                </div>\n                <div\n                  className=\"field-group-wrapper\"\n                  style={{ marginTop: \"10px\" }}\n                >\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      Bank beneficiary\n                    </div>\n                    <div className=\"merchant-form-input-wrapper form-input-large\">\n                      <Field\n                        className={\n                          errors.bankBeneficiaryName\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"bankBeneficiaryName\"\n                        placeholder=\"Bank beneficiary name\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <FormError\n                      err={\n                        errors.bankBeneficiaryName &&\n                        touched.bankBeneficiaryName\n                          ? errors.bankBeneficiaryName\n                          : \"\"\n                      }\n                      spaceBetween={0}\n                      fontSize={12}\n                      fontWeight={\"bold\"}\n                    />\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      Bank account number\n                    </div>\n                    <div className=\"merchant-form-input-wrapper form-input-large\">\n                      <Field\n                        className={\n                          errors.bankAccountNumber\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"bankAccountNumber\"\n                        placeholder=\"Bank account number\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <FormError\n                      err={\n                        errors.bankAccountNumber && touched.bankAccountNumber\n                          ? errors.bankAccountNumber\n                          : \"\"\n                      }\n                      spaceBetween={0}\n                      fontSize={12}\n                      fontWeight={\"bold\"}\n                    />\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">Bank name</div>\n                    <div className=\"merchant-form-input-wrapper form-input-large\">\n                      <Field\n                        className={\n                          errors.bankName\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"bankName\"\n                        placeholder=\"Bank name\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <FormError\n                      err={\n                        errors.bankName && touched.bankName\n                          ? errors.bankName\n                          : \"\"\n                      }\n                      spaceBetween={0}\n                      fontSize={12}\n                      fontWeight={\"bold\"}\n                    />\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      Bank Province\n                    </div>\n                    <div className=\"merchant-form-input-wrapper form-input-large\">\n                      <Field\n                        className={\n                          errors.bankProvince\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"bankProvince\"\n                        placeholder=\"Bank province\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <FormError\n                      err={\n                        errors.bankProvince && touched.dateOfIssue\n                          ? errors.bankProvince\n                          : \"\"\n                      }\n                      spaceBetween={0}\n                      fontSize={12}\n                      fontWeight={\"bold\"}\n                    />\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      Bank Branch\n                    </div>\n                    <div className=\"merchant-form-input-wrapper form-input-large\">\n                      <Field\n                        className={\n                          errors.bankBranch\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"bankBranch\"\n                        placeholder=\"Bank branch\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"field-bottom-side-wrapper\">\n                    <FormError\n                      err={\n                        errors.bankBranch && touched.bankBranch\n                          ? errors.bankBranch\n                          : \"\"\n                      }\n                      spaceBetween={0}\n                      fontSize={12}\n                      fontWeight={\"bold\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"btn-merchant-registration-wrapper\">\n                <button className=\"btn-merchant-registration-back\">Back</button>\n                <button\n                  className=\"btn-merchant-registration-next\"\n                  type=\"submit\"\n                >\n                  Save\n                </button>\n              </div>\n            </Form>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nBankInfoForm.propTypes = {\n  updateBankInfoFormAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(\n  connect(null, {\n    updateBankInfoFormAPI,\n  })(BankInfoForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/ProductDetailForm.js",["906","907","908","909","910","911","912","913","914","915"],"import { Fragment, useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { withRouter } from \"react-router-dom\";\nimport Menu from \"assets/menu.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk, faImage } from \"@fortawesome/fontawesome-free-solid\";\nimport \"./DetailMerchantForm.scss\";\nimport \"style/Common.scss\";\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport ImagePreview from \"components/Commons/ImageHandlers/ImagePreview/ImagePreview\";\nimport { updateProductDetailInfoFormAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nconst initialValues = {\n  menu: null,\n  priceRange: null,\n};\nconst formHeaderText = {\n  title: \"4. Product Detail Information\",\n  headerText: \"Let Tastie help you bring your specialty to everyone.\",\n  bodyText:\n    \"To make your business more consumer-friendly, provide a detailed list of products that your business will provide including price for each product. After registration, our staff will compare the products that you will sell with this list.\",\n};\nfunction ProductDetailForm(props) {\n  const [menu, setMenu] = useState(null);\n  const handleSubmitForm = async (values) => {\n    const formData = {\n      menu_image: \"abc\",\n      price_range: values.priceRange,\n      update_at: new Date().toISOString().split(\"T\")[0],\n    };\n    console.log(formData);\n    if (!props.match.params.id) return;\n    const updateStatus = await props.updateProductDetailInfoFormAPI(\n      props.match.params.id,\n      formData\n    );\n    if (updateStatus) props.history.push(\"bank\");\n  };\n  return (\n    <Formik\n      initialValues={{ menu: null, priceRange: \"\" }}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched, setFieldValue } = formikProps;\n        return (\n          <Fragment>\n            <Form className=\"merchant-form-container\">\n              <FormHeader\n                title={formHeaderText.title}\n                headerText={formHeaderText.headerText}\n                bodyText={formHeaderText.bodyText}\n              />\n\n              <div className=\"merchant-form-wrapper\">\n                <div className=\"field-group-wrapper\">\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      Menu photo\n                    </div>\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div\n                        className=\"business-registration-browse\"\n                        style={{\n                          width: \"100%\",\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <label className=\"form-file-field-2\" for=\"file\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faImage}\n                          />\n                          <span>Choose a file to upload</span>\n                          <Field\n                            type=\"file\"\n                            name=\"menu\"\n                            onChange={(event) => {\n                              setMenu(event.target.files[0]);\n                            }}\n                          />\n                        </label>\n                        <ImagePreview file={menu} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"description-box-wrapper\">\n                    <img src={Menu} className=\"description-box-image\" />\n                    <span className=\"description-box-content\">\n                      Please upload a clear photo of the menu so we can help to\n                      create menu for your shop faster. <br />\n                      *Note: If pictures provided don't satisfy our\n                      requirements, Tastie will replace them with Tastie logo so\n                      that your shop can start to sell as soon as possible. You\n                      can still change those photos later.\n                    </span>\n                  </div>\n                </div>\n                <div className=\"merchant-form-field-wrapper\">\n                  <div className=\"merchant-form-label-wrapper\">Price Range</div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <Field\n                      className=\"form-text-field-select\"\n                      style={{ width: \"100%\", height: \"35px\" }}\n                      type=\"text\"\n                      name=\"priceRange\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field-bottom-side-wrapper\">\n                  <span className=\"field-description\">\n                    Price should be estimated based on the average price for\n                    each product (dish) in your business units.\n                  </span>\n                </div>\n              </div>\n              <div className=\"btn-merchant-registration-wrapper\">\n                <button className=\"btn-merchant-registration-back\">Back</button>\n                <button\n                  className=\"btn-merchant-registration-next\"\n                  type=\"submit\"\n                >\n                  Save\n                </button>\n              </div>\n            </Form>\n          </Fragment>\n        );\n      }}\n    </Formik>\n  );\n}\nProductDetailForm.propTypes = {\n  updateProductDetailInfoFormAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(\n  connect(null, {\n    updateProductDetailInfoFormAPI,\n  })(ProductDetailForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/RegisteredRepresentativeForm.js",["916","917","918","919","920","921","922","923"],"import { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { validateMerchantForm2 } from \"utils/FormUtils/MerchantFormValidate\";\n\nimport \"./DetailMerchantForm.scss\";\nimport \"style/Common.scss\";\nimport { updateRepresentativeInfoFormAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nimport FormError from \"components/Commons/ErrorHandlers/FormError/FormError\";\nimport FormHeader from \"./FormHeader/FormHeader\";\nimport SwitchSelector from \"react-switch-selector\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk, faUpload } from \"@fortawesome/fontawesome-free-solid\";\n\nconst options = [\n  {\n    label: \"Individual\",\n    value: 0,\n    selectedBackgroundColor: \"#b90009\",\n  },\n  {\n    label: \"Enterprise\",\n    value: 1,\n    selectedBackgroundColor: \"#b90009\",\n  },\n];\n\nconst initialValues = {\n  companyName: \"\",\n  companyAddress: \"\",\n  representativeName: \"\",\n  representativeEmail: \"\",\n  phone: \"\",\n  idCardNumber: \"\",\n  idCardFront: null,\n  idCardBack: null,\n  businessRegistration: \"\",\n  taxCode: \"\",\n};\nconst formHeaderText = {\n  title: \"2. Registered Representative Information\",\n  headerText: \"Ready to be our Taste's merchant partner.\",\n  bodyText:\n    \"The representative’s infos must also be the provider’s infos. Our staff will contact via phone number within 24 hours to confirm the provided information.\",\n};\nfunction RegisteredRepresentativeForm(props) {\n  const [showRegisterAsEnterprise, setShowRegisterAsEnterprise] =\n    useState(false);\n\n  const onChange = () => {\n    setShowRegisterAsEnterprise((prev) => !prev);\n  };\n  const initialSelectedIndex = options.findIndex(({ value }) => value === 0);\n\n  const handleSubmitForm = async (values) => {\n    const formData = {\n      role: values.companyName && values.companyAddress ? 2 : 1,\n      company_name: values.companyName,\n      company_address: values.companyAddress,\n      owner_name: values.representativeName,\n      email: values.representativeEmail,\n      owner_phone: values.phone,\n      owner_card_id: values.idCardNumber,\n      owner_card_image1: values.idCardFront || \"front-card\",\n      owner_card_image2: values.idCardBack || \"back-card\",\n      tax_code: values.taxCode,\n    };\n    if (!props.match.params.id) return;\n    const updateStatus = await props.updateRepresentativeInfoFormAPI(\n      props.match.params.id,\n      formData\n    );\n    if (updateStatus) props.history.push(\"business-unit\");\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validateOnChange={false}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched, setFieldValue } = formikProps;\n        return (\n          <>\n            <Form className=\"merchant-form-container\">\n              <FormHeader\n                title={formHeaderText.title}\n                headerText={formHeaderText.headerText}\n                bodyText={formHeaderText.bodyText}\n              />\n              <div className=\"merchant-form-wrapper\">\n                <div className=\"merchant-form-field-wrapper\">\n                  <div\n                    className=\"merchant-form-label-wrapper\"\n                    style={{ fontWeight: \"normal\", fontSize: 14 }}\n                  >\n                    Register as:\n                  </div>\n                  <div className=\"merchant-form-input-wrapper\">\n                    <div className=\"switcher-wrapper\">\n                      <SwitchSelector\n                        onChange={onChange}\n                        options={options}\n                        initialSelectedIndex={initialSelectedIndex}\n                        backgroundColor={\"#E6E6E6\"}\n                        fontColor={\"#2C2C2C\"}\n                        selectedFontColor={\"#E6E6E6\"}\n                        fontSize={13}\n                        wrapperBorderRadius={0}\n                        optionBorderRadius={0}\n                        width={80}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {showRegisterAsEnterprise ? (\n                  <Fragment>\n                    <div className=\"field-group-title\">\n                      Enterprise information:\n                    </div>\n                    <div className=\"field-group-wrapper\">\n                      <div className=\"merchant-form-field-wrapper\">\n                        <div className=\"merchant-form-label-wrapper\">\n                          Company name\n                        </div>\n                        <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                          <Field\n                            className={\n                              errors.companyName\n                                ? \"form-text-field error\"\n                                : \"form-text-field\"\n                            }\n                            type=\"text\"\n                            name=\"companyName\"\n                            placeholder=\"Company name\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"merchant-form-field-wrapper\">\n                        <div className=\"merchant-form-label-wrapper\">\n                          Company address\n                        </div>\n                        <div className=\"merchant-form-input-wrapper form-input-extra-large\">\n                          <Field\n                            className={\n                              errors.companyAddress\n                                ? \"form-text-field error\"\n                                : \"form-text-field\"\n                            }\n                            type=\"text\"\n                            name=\"companyAddress\"\n                            placeholder=\"Company address\"\n                            maxLength={50}\n                            autoComplete=\"on\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </Fragment>\n                ) : (\n                  <Fragment></Fragment>\n                )}\n                <div className=\"field-group-title\">Personal information:</div>\n                <div className=\"field-group-wrapper\">\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">Full name</div>\n                    <div className=\"merchant-form-input-wrapper  form-input-extra-large\">\n                      <Field\n                        className={\n                          errors.representativeName\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"representativeName\"\n                        placeholder=\"Enter your name\"\n                        maxLength={50}\n                        autoComplete=\"on\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      Email & Phone number\n                    </div>\n                    <div className=\"merchant-form-input-wrapper  form-input-medium\">\n                      <Field\n                        className={\n                          errors.representativeEmail\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"representativeEmail\"\n                        placeholder=\"Email address\"\n                        maxLength={50}\n                        autoComplete=\"on\"\n                      />\n                      <Field\n                        className={\n                          errors.phone\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"phone\"\n                        placeholder=\"Phone number\"\n                        maxLength={50}\n                        autoComplete=\"on\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">\n                      ID Card number\n                    </div>\n                    <div className=\"merchant-form-input-wrapper form-input-medium\">\n                      <Field\n                        className={\n                          errors.idCardNumber\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"idCardNumber\"\n                        placeholder=\"Identity card number\"\n                        maxLength={50}\n                        autoComplete=\"on\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"field-group-title\">Registration Documents:</div>\n                <div className=\"field-group-wrapper\">\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      ID Card\n                    </div>\n\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div className=\"front-id-card-browse\">\n                        <span className=\"file-upload-description\">\n                          Photo of the front side of your ID Card\n                        </span>\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faUpload}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                      <div className=\"back-id-card-browse\">\n                        <span className=\"file-upload-description\">\n                          Photo of the back side of your ID Card\n                        </span>\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faUpload}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper-file\">\n                    <div className=\"merchant-form-label-wrapper-file\">\n                      Business Registration\n                    </div>\n                    <div className=\"merchant-form-input-wrapper-file\">\n                      <div className=\"business-registration-browse\">\n                        <label className=\"form-file-field-2\" for=\"upload\">\n                          <FontAwesomeIcon\n                            className=\"upload-icon\"\n                            icon={faUpload}\n                          />\n                          <span>Choose a file to upload</span>\n                          <input type=\"file\" id=\"upload\" />\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"merchant-form-field-wrapper\">\n                    <div className=\"merchant-form-label-wrapper\">Tax Code</div>\n                    <div className=\"merchant-form-input-wrapper form-input-medium\">\n                      <Field\n                        className={\n                          errors.taxCode\n                            ? \"form-text-field error\"\n                            : \"form-text-field\"\n                        }\n                        type=\"text\"\n                        name=\"taxCode\"\n                        placeholder=\"Tax Code\"\n                        maxLength={50}\n                        autoComplete=\"on\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btn-merchant-registration-wrapper\">\n                <button className=\"btn-merchant-registration-back\">Back</button>\n                <button\n                  className=\"btn-merchant-registration-next\"\n                  type=\"submit\"\n                >\n                  Save\n                </button>\n              </div>\n            </Form>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nRegisteredRepresentativeForm.propTypes = {\n  updateRepresentativeInfoFormAPI: PropTypes.func.isRequired,\n};\n\nexport default withRouter(\n  connect(null, {\n    updateRepresentativeInfoFormAPI,\n  })(RegisteredRepresentativeForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UserAction/AuthAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/MerchantForm.js",["924"],"import \"./MerchantForm.scss\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"components/Commons/Layout/Footer/Footer\";\nimport NavBar from \"components/Commons/Layout/NavBar/NavBar\";\nimport ToolBar from \"components/Commons/Layout/Toolbar/Toolbar\";\nimport MerchantBanner from \"assets/merchant-form-banner.png\";\nimport Stepper from \"components/Commons/Stepper/Stepper\";\n\nconst backgroundStyling = {\n  background: `url(${MerchantBanner})`,\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nfunction MerchantForm({ children }) {\n  const steps = [\n    {\n      description: \"Service info\",\n      styling: \"active\",\n    },\n    {\n      description: \"Representative info\",\n      styling: \"default\",\n    },\n    {\n      description: \"Business unit info\",\n      styling: \"default\",\n    },\n    {\n      description: \"Product detail info\",\n      styling: \"default\",\n    },\n    {\n      description: \"Bank info\",\n      styling: \"default\",\n    },\n  ];\n  return (\n    <div className=\"merchant-registration-page navbar-state\">\n      <NavBar hideBreadcrumb={false} fixed={true} />\n      <div\n        className=\"merchant-registration-form-container\"\n        style={backgroundStyling}\n      >\n        <Stepper steps={steps} />\n        <div className=\"merchant-registration-form-wrapper\">\n          <div className=\"merchant-registration-form\">{children}</div>\n        </div>\n      </div>\n      <Footer />\n      <ToolBar />\n    </div>\n  );\n}\n\nexport default MerchantForm;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/UserSignIn.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/UserRegisteration.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HigherOrderComponents(HOC)/withAuth.js",["925","926"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getAccessTokenAPI } from \"store/actions/UserAction/AuthAction\";\nimport { getCart } from \"store/actions/CartAction/CartAction\";\nimport {\n  getUserProfileAPI,\n  setLoading,\n  getAddressBookAPI,\n  setCurrentLocation,\n} from \"store/actions/UserAction/UserAction\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\n\nexport default function (WrappedComponent) {\n  class Authentication extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        userId: -1,\n        isLoading: true,\n        isAuth: false,\n      };\n    }\n\n    async componentDidMount() {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (refreshToken) {\n        const result = await this.props.getAccessTokenAPI(refreshToken);\n        if (result?.isAuth && result?.accessToken) {\n          this.setState({ isLoading: false });\n          this.setState({ isAuth: true });\n          const id = await this.props.getUserProfileAPI(result.accessToken);\n          this.setState({ userId: id });\n        }\n        return;\n      }\n    }\n    async componentDidUpdate(prevProps, prevState) {\n      if (prevState.userId !== this.state.userId && this.state.userId !== -1) {\n        this.props.getAddressBookAPI(this.state.userId);\n        this.props.getCart(this.state.userId);\n      }\n    }\n    render() {\n      return (\n        <WrappedComponent\n          isLoading={this.state.isLoading}\n          isAuth={this.state.isAuth}\n          {...this.props}\n        />\n      );\n    }\n  }\n  Authentication.propTypes = {\n    user: PropTypes.object.isRequired,\n    getAccessTokenAPI: PropTypes.func.isRequired,\n    getUserProfileAPI: PropTypes.func.isRequired,\n    getAddressBookAPI: PropTypes.func.isRequired,\n    setCurrentLocation: PropTypes.func.isRequired,\n    getCart: PropTypes.func.isRequired,\n    setLoading: PropTypes.func.isRequired,\n    setDialogBox: PropTypes.func.isRequired,\n  };\n  const mapStateToProps = (state) => ({\n    user: state.UserReducer,\n  });\n\n  return connect(mapStateToProps, {\n    getAccessTokenAPI,\n    getUserProfileAPI,\n    getAddressBookAPI,\n    setCurrentLocation,\n    getCart,\n    setLoading,\n    setDialogBox,\n  })(Authentication);\n}\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/SignContractForm/SignContractForm.js",["927","928","929","930"],"import \"./SignContractForm.scss\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport Footer from \"components/Commons/Layout/Footer/Footer\";\nimport NavBar from \"components/Commons/Layout/NavBar/NavBar\";\nimport Contract from \"assets/pdf/contract.pdf\";\nimport ToolBar from \"components/Commons/Layout/Toolbar/Toolbar\";\nimport MerchantBanner from \"assets/merchant-form-banner.png\";\nimport Stepper from \"components/Commons/Stepper/Stepper\";\nimport { createMerchantAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nimport { faChevronDown, faDesktop } from \"@fortawesome/fontawesome-free-solid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst backgroundStyling = {\n  background: `url(${MerchantBanner})`,\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nfunction SignContractForm(props) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, []);\n  const contractFormHandler = async () => {\n    const { user, createMerchantAPI } = props;\n    let result = -1;\n    if (user.profile?.user_id) {\n      result = await createMerchantAPI(user.profile.user_id);\n      if (result !== -1)\n        props.history.push(`/merchant-registration/${result}/service`);\n    } else props.history.push(\"/sign-in\");\n  };\n  return (\n    <>\n      <div className=\"sign-contract-form navbar-state\">\n        <NavBar hideBreadcrumb={false} fixed={true} />\n\n        <div className=\"contract-form-wrapper\">\n          <div className=\"contract-form\">\n            <span className=\"contract-header-title\">\n              Contract terms and agreements\n            </span>\n            <div className=\"form-header-wrapper\">\n              <div className=\"form-number-wrapper\">\n                <FontAwesomeIcon className=\"form-number\" icon={faChevronDown} />\n                <span className=\"show-more-text\">Sign contract</span>\n              </div>\n              <span className=\"merchant-registration-header-title\">\n                Start to grow your business\n              </span>\n            </div>\n            <span className=\"contract-header-text\">\n              Please read our terms and conditions:\n            </span>\n\n            <span className=\"contract-header-sub-text\">\n              To start online business, making sure that you or the Parties\n              hereby have read carefully and agreed to the our terms and\n              conditions set forth in PDF file below.\n            </span>\n            <br></br>\n            <embed className=\"contract-pdf-viewer\" src={Contract} />\n            <div className=\"contract-agree-section\">\n              <div className=\"contract-agree-check-wrapper\">\n                <input\n                  type=\"checkbox\"\n                  name=\"switch\"\n                  className=\"contract-agree-check\"\n                />\n              </div>\n              <div className=\"contract-agree-description\">\n                I hereby confirm that I have read all terms and conditions above\n                and agreed to sign contract with Tastie with the following fees\n                to become Tastie Partner Merchants: <br />- Commission at 25%\n                <br />- Within 30 days after your on-boarding request got\n                approved, you must sign the contract to finish the registration\n                process. Otherwise, your shop will be terminated on our\n                platform.\n              </div>\n            </div>\n            <div className=\"btn-sign-contract-wrapper\">\n              <div>\n                <Link to=\"/merchant-registration\">\n                  <button className=\"btn-sign-contract-back\">Back</button>\n                </Link>\n              </div>\n              <div onClick={contractFormHandler}>\n                <button className=\"btn-sign-contract-next\">Agree</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n        <ToolBar />\n      </div>\n    </>\n  );\n}\n\nSignContractForm.propTypes = {\n  createMerchantAPI: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    createMerchantAPI,\n  })(SignContractForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/Home.js",["931","932","933","934","935"],"import { withRouter } from \"react-router-dom\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport MainContent from \"./MainContent/MainContent\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport VoucherToolBar from \"../Commons/Layout/Toolbar/VoucherToolbar\";\nimport Background from \"assets/home_banner.png\";\nimport \"./Home.scss\";\nimport HomeHeader from \"./HomeHeader/HomeHeader\";\nimport HomeBanner from \"./HomeBanner/HomeBanner\";\nimport HomeBodySidebar from \"./HomeBody/HomeBodySidebar\";\nimport HomeBodyContent from \"./HomeBody/HomeBodyContent\";\n\nconst backgroundStyling = {\n  background: `url(${Background})`,\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nfunction Home(props) {\n  const [showScrollbar, setShowScrollbar] = useState(\"hidden\");\n  const [currentSortMode, setCurrentSortMode] = useState(1);\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n    window.addEventListener(\"scroll\", listenScrollEvent);\n  }, []);\n  const listenScrollEvent = (e) => {\n    if (window.scrollY > 410) {\n      setShowScrollbar(\"scroll\");\n    } else {\n      setShowScrollbar(\"hidden\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <NavBar fixed={true} />\n      <div className=\"main\">\n        {currentSortMode == 1 && (\n          <Fragment>\n            <HomeHeader />\n            <HomeBanner />\n          </Fragment>\n        )}\n        <div className=\"home-content\">\n          <HomeBodySidebar\n            type={1}\n            showScrollbar={showScrollbar}\n            setShowScrollbar={setShowScrollbar}\n            currentSortMode={currentSortMode}\n            setCurrentSortMode={setCurrentSortMode}\n          />\n          <HomeBodyContent\n            currentSortMode={currentSortMode}\n            setCurrentSortMode={setCurrentSortMode}\n          />\n        </div>\n      </div>\n      <Footer />\n      <ToolBar />\n    </Fragment>\n  );\n}\n\nexport default withRouter(Home);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UIComponentAction/DialogBoxAction.js",["936"],"import { SET_DIALOG_BOX, REMOVE_DIALOG_BOX } from \"store/actions/types\";\n\nexport const removeDialogBox = () => (dispatch) => {\n  dispatch({\n    type: REMOVE_DIALOG_BOX,\n    payload: {\n      loadDialogBox: false,\n      messageDialogHeader: \"\",\n      messageDialogContent: \"\",\n    },\n  });\n};\nexport const setDialogBox =\n  (messageContent, messageHeader, timeout) => (dispatch) => {\n    dispatch({\n      type: SET_DIALOG_BOX,\n      payload: {\n        loadDialogBox: true,\n        messageDialogHeader:\n          messageHeader || \"Access Denied - Authentication Failed\",\n        messageDialogContent: messageContent || \"Please try again.\",\n      },\n    });\n    return;\n    setTimeout(\n      () =>\n        dispatch({\n          type: REMOVE_DIALOG_BOX,\n          payload: {\n            loadDialogBox: false,\n            messageDialogHeader: \"\",\n            messageDialogContent: \"\",\n          },\n        }),\n      timeout || 2000\n    );\n  };\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/ProviderDetail.js",["937","938","939","940"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getUpcomingProductAPI } from \"store/actions/ProductAction/ProductAction\";\nimport \"./ProviderDetail.scss\";\nimport PDHeader from \"components/ProviderDetail/PDHeader/PDHeader\";\nimport PDBody from \"components/ProviderDetail/PDBody/PDBody\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport { getCustomerReviewAPI } from \"store/actions/ProviderAction/ProviderAction\";\n\nfunction ProviderDetail(props) {\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n\n  const providerInfo = {\n    provider_id: 1,\n    address:\n      \"KP.3 Centana, 36 Mai Chi Tho, An Phu Ward,  District 2, Ho Chi Minh City\",\n    provider_name: \"Burger King - Lyon Garibaldi Davinci\",\n    rating: \"4.5\",\n    rating_total: \"59\",\n    price_range: \"3.49€-5.49€\",\n    cooking_time: \"30 - 40 min\",\n    dietary: \"Alergy-friendly\",\n    provider_photo:\n      \"https://d1ralsognjng37.cloudfront.net/02f41a01-e3e0-42ff-be63-b65c393270b5.jpeg\",\n  };\n\n  const upcomingProduct = [\n    {\n      survey_id: 100001,\n      start_at: \"2022-03-01 00:00:00\",\n      expire_at: \"2022-04-01 00:00:00\",\n      product: {\n        upcoming_product_id: 100000,\n        product_name: \"Smoked Salmon Tartine\",\n        description:\n          \"Salmon with organic butter, scallion, dill, and a side of herb aioli. [540 Cal.]\",\n        estimated_price: 15.0,\n        release_date: \"2022 March 28\",\n        product_image:\n          \"https://d1ralsognjng37.cloudfront.net/6b599bdb-8c5d-4d11-ae78-4f87f49c6550.jpeg\",\n      },\n      survey: {\n        question: \"Are you eager to try this upcoming product?\",\n        choices: [\n          \"Absolutely yes! I cannot wait to try this!\",\n          \"It seems good. I am curious about its flavor.\",\n          \"Neutral. I am not sure.\",\n          \"I am not interested.\",\n          \"It is not my thing!\",\n          \"Other\",\n        ],\n      },\n    },\n    {\n      survey_id: 100002,\n      start_at: \"2022-03-01 00:00:00\",\n      expire_at: \"2022-04-01 00:00:00\",\n      product: {\n        upcoming_product_id: 100000,\n        product_name: \"Smoked Salmon Tartine\",\n        description:\n          \"Salmon with organic butter, scallion, dill, and a side of herb aioli. [540 Cal.]\",\n        estimated_price: 15.0,\n        release_date: \"2022 March 28\",\n        product_image:\n          \"https://d1ralsognjng37.cloudfront.net/a513ef8a-e005-457d-a8e8-e49d82cf8720.jpeg\",\n      },\n      survey: {\n        question: \"Are you eager to try this upcoming product?\",\n        choices: [\n          \"Absolutely yes! I cannot wait to try this!\",\n          \"It seems good. I am curious about its flavor.\",\n          \"Neutral. I am not sure.\",\n          \"I am not interested.\",\n          \"It is not my thing!\",\n          \"Other\",\n        ],\n      },\n    },\n  ];\n  const [items, setItems] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [upcomingItems, setUpcomingItems] = useState([]);\n  useEffect(() => {\n    async function fetchingDataAPI() {\n      const productList = await props.getProductListAPI(props.match.params?.id);\n      if (productList) setItems([...productList]);\n      const upcomingProductList = await props.getUpcomingProductAPI(\n        props.match.params?.id\n      );\n      if (upcomingProductList) setUpcomingItems(upcomingProductList);\n    }\n    fetchingDataAPI();\n    return () => {\n      setItems([]);\n      setUpcomingItems([]);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function fetchingReviews() {\n      const reviewList = await props.getCustomerReviewAPI(\n        props.match.params?.id\n      );\n      if (reviewList) setReviews(reviewList);\n    }\n    fetchingReviews();\n    return () => {\n      setReviews([]);\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NavBar fixed={true} />\n      <div className=\"main\">\n        <PDHeader />\n        <PDBody\n          products={items}\n          upcomingProducts={upcomingItems}\n          setProducts={setItems}\n          customerReviews={reviews}\n        />\n      </div>\n      <Footer />\n      <ToolBar />\n    </Fragment>\n  );\n}\n\nProviderDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  getCustomerReviewAPI: PropTypes.func.isRequired,\n  getUpcomingProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(\n    connect(mapStateToProps, {\n      getProductListAPI,\n      getCustomerReviewAPI,\n      getUpcomingProductAPI,\n    })(ProviderDetail)\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/MerchantDashboard.js",["941","942"],"import \"./MerchantDashboard.scss\";\nimport NavBar from \"components/Commons/Layout/NavBar/NavBar\";\nimport Sidebar from \"components/MerchantDashboard/Sidebar/Sidebar\";\nimport { useEffect } from \"react\";\nimport { withRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport MerchantBanner from \"assets/merchant-form-banner.png\";\nimport ProductPanel from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductPanel\";\nimport OrderPanel from \"components/MerchantDashboard/DashboardFeatures/MDOrder/OrderPanel\";\nimport HomePanel from \"./DashboardFeatures/MDHome/HomePanel\";\nimport MarketingPanel from \"components/MerchantDashboard/DashboardFeatures/MDMarketing/MarketingPanel\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport BusinessInsightPanel from \"./DashboardFeatures/MDBusinessInsight/BusinessInsightPanel\";\nconst backgroundStyling = {\n  background: `url(${MerchantBanner})`,\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\nfunction MerchantDashboard(props) {\n  const { match, location } = props;\n  useEffect(() => {});\n  return (\n    <div className=\"merchant-dashboard-container\">\n      <NavBar\n        hideBreadcrumb={true}\n        hideSubNavbar={true}\n        merchant={true}\n        fixed={true}\n      />\n      <div className=\"main-dashboard-wrapper\">\n        <div className=\"dashboard-side-bar\">\n          <Sidebar />\n        </div>\n        <div className=\"dashboard-panel\">\n          <Switch>\n            <Route exact path={`${match.path}/provider`} component={HomePanel}>\n              <Redirect to={`${match.path}/provider/my-restaurant`} />\n            </Route>\n            <Route exact path={`${match.path}/order`} component={OrderPanel}>\n              <Redirect to={`${match.path}/product/my-product`} />\n            </Route>\n            <Route\n              exact\n              path={`${match.path}/insights`}\n              component={BusinessInsightPanel}\n            >\n              <Redirect to={`${match.path}/insights/business-insight`} />\n            </Route>\n            <Route\n              exact\n              path={`${match.path}/product`}\n              component={ProductPanel}\n            >\n              <Redirect to={`${match.path}/product/my-product`} />\n            </Route>\n            <Route exact path={`${match.path}`}>\n              <Redirect to={`${match.path}/provider/my-restaurant`} />\n            </Route>\n            <Route exact path={`${match.path}/provider`}>\n              <Redirect to={`${match.path}/provider/my-restaurant`} />\n            </Route>\n            <Route exact path={`${match.path}/order`}>\n              <Redirect to={`${match.path}/order/my-order`} />\n            </Route>\n            <Route exact path={`${match.path}/product`}>\n              <Redirect to={`${match.path}/product/my-product`} />\n            </Route>\n            <Route exact path={`${match.path}/revenue`}>\n              <Redirect to={`${match.path}/revenue/business-revenue`} />\n            </Route>\n            <Route exact path={`${match.path}/insights`}>\n              <Redirect to={`${match.path}/insights/business-insight`} />\n            </Route>\n            <Route\n              exact\n              path={`${match.path}/order/:name`}\n              component={OrderPanel}\n            />\n            <Route\n              exact\n              path={`${match.path}/product/:name`}\n              component={ProductPanel}\n            />\n            <Route\n              exact\n              path={`${match.path}/provider/:name`}\n              component={HomePanel}\n            />\n            <Route\n              exact\n              path={`${match.path}/marketing/:name`}\n              component={MarketingPanel}\n            />{\" \"}\n            <Route\n              exact\n              path={`${match.path}/insights/:name`}\n              component={BusinessInsightPanel}\n            />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(withAuth(MerchantDashboard));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderTracking.js",["943","944","945","946","947","948","949","950","951","952","953","954","955","956"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./OrderTracking.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport OrderStatus from \"components/OrderTracking/OrderStatus/OrderStatus\";\nimport OTOrderDetail from \"components/OrderTracking/OTOrderDetail/OTOrderDetail\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport RateShipper from \"./RateShipper/RateShipper\";\nimport { addNotificationAPI } from \"store/actions/OrderAction/OrderAction\";\nimport {\n  getAllProductFromOrderAPI,\n  getOrderStatusAPI,\n} from \"store/actions/OrderAction/OrderAction\";\nimport RateProvider from \"./RateProvider/RateProvider\";\n\nfunction OrderTracking(props) {\n  const { user, getAllProductFromOrderAPI, getOrderStatusAPI, match } = props;\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"100vh\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 16,\n  });\n  const [departureCoordinates, setDepartureCoordinates] = useState([\n    106.68057155417674, 10.768685473523648,\n  ]);\n  const [arrivalCoordinates, setArrivalCoordinates] = useState([\n    106.68060027236189, 10.75909421616193,\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const { order_code } = props.match.params;\n  const [showPopup, setShowPopup] = useState(false);\n  const [showRatingShipper, setShowRatingShipper] = useState(false);\n  const [showRatingProvider, setShowRatingProvider] = useState(false);\n\n  const [currentStatus, setCurrentStatus] = useState(1);\n  const [submittedStatus, setSubmittedStatus] = useState(true);\n  const [assignedStatus, setAssignedStatus] = useState(false);\n  const [confirmedStatus, setConfirmedStatus] = useState(false);\n  const [pickedStatus, setPickedStatus] = useState(false);\n  const [completedStatus, setCompletedStatus] = useState(false);\n  const [cancelStatus, setCancelStatus] = useState(false);\n  const [orderItems, setOrderItems] = useState([]);\n  const [orderSummary, setOrderSummary] = useState([]);\n  const [showOrderDetail, setShowOrderDetail] = useState(false);\n  useEffect(() => {\n    if (currentStatus === 5 && orderSummary) {\n      if (orderSummary.delivery_mode !== 2) {\n        setShowRatingShipper(true);\n        setShowRatingProvider(false);\n      } else {\n        setShowRatingShipper(false);\n        setShowRatingProvider(true);\n      }\n    }\n  }, [currentStatus, orderSummary]);\n  useEffect(() => {\n    const code = match.params.order_code;\n    async function fetchingOrder(orderCode) {\n      const result1 = await getAllProductFromOrderAPI(orderCode);\n      const result2 = await getOrderStatusAPI(orderCode);\n      Promise.all([result1, result2]).then((data) => {\n        setOrderItems(result1);\n        setOrderSummary(result2);\n        if (data[0] && data[1]) {\n          setOrderData((prev) => ({\n            ...prev,\n            provider_id: data[0].provider_id,\n            merchant_name: data[0].merchant_name,\n            items: data[0].items,\n            num_items: data[0].num_items,\n            delivery_fee: data[0].delivery_fee,\n          }));\n          const status = [\n            \"Submitted\",\n            \"Assigned\",\n            \"Confirmed\",\n            \"Picked\",\n            \"Completed\",\n          ];\n          setCurrentStatus(\n            status.indexOf(\n              data[1].order_status[data[1].order_status.length - 1]\n                .order_status_name\n            ) + 1\n          );\n        }\n      });\n      setLoading(true);\n    }\n    fetchingOrder(code);\n  }, []);\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  const [orderData, setOrderData] = useState({\n    merchant_name: null,\n    items: [],\n    num_items: 0,\n    delivery_fee: 0,\n  });\n\n  useEffect(() => {\n    setSubmittedStatus(1 <= currentStatus ? true : false);\n    setAssignedStatus(2 <= currentStatus ? true : false);\n    setConfirmedStatus(3 <= currentStatus ? true : false);\n    setPickedStatus(4 <= currentStatus ? true : false);\n    setCompletedStatus(5 <= currentStatus ? true : false);\n    setCancelStatus(6 <= currentStatus ? true : false);\n  }, [currentStatus]);\n\n  useEffect(() => {\n    user.socket.emit(\"join-room\", order_code);\n    //order status 2\n    user.socket.on(\"order-accepted\", (message) => {\n      setAssignedStatus(true);\n      setCurrentStatus(2);\n    });\n    //order status 3\n    user.socket.on(\"order-confirmed-from-provider\", () => {\n      setConfirmedStatus(true);\n      setCurrentStatus(3);\n    });\n    //order status 4\n    user.socket.on(\"shipper-on-the-way\", (message) => {\n      setPickedStatus(true);\n      setCurrentStatus(4);\n    });\n    //order status 5\n    user.socket.on(\"shipper-has-arrived\", (message) => {\n      setPickedStatus(true);\n      setCurrentStatus(5);\n    });\n    user.socket.on(\"order-canceled\", (message) => {\n      setCancelStatus(true);\n      setCurrentStatus(6);\n    });\n    return () => {\n      user.socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    async function fetchingRoutesAndDirections() {\n      const endpoint = `https://api.mapbox.com/directions/v5/mapbox/driving/${departureCoordinates[0]},${departureCoordinates[1]};${arrivalCoordinates[0]},${arrivalCoordinates[1]}?geometries=geojson&access_token=pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g`;\n      const res = await axios.get(endpoint);\n      const points = res.data.routes[0].geometry.coordinates;\n      points.unshift(departureCoordinates);\n      points.push(arrivalCoordinates);\n      setRoutes(points);\n    }\n    fetchingRoutesAndDirections();\n  }, []);\n\n  const dataOne = {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"LineString\",\n      coordinates: routes,\n    },\n  };\n\n  return (\n    <Fragment>\n      <NavBar fixed={true} />\n\n      <div className=\"order-tracking-container\">\n        <div className=\"order-tracking-left-side\">\n          <ReactMapGl\n            {...viewport}\n            mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n            onViewportChange={(viewport) => setViewport(viewport)}\n            mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n          >\n            <Source id=\"polylineLayer\" type=\"geojson\" data={dataOne}>\n              <Layer\n                id=\"lineLayer\"\n                type=\"line\"\n                source=\"my-data\"\n                layout={{\n                  \"line-join\": \"round\",\n                  \"line-cap\": \"round\",\n                }}\n                paint={{\n                  \"line-color\": \"rgba(3, 170, 238, 0.5)\",\n                  \"line-width\": 10,\n                }}\n              />\n            </Source>\n            <Marker\n              latitude={departureCoordinates[1]}\n              longitude={departureCoordinates[0]}\n              offsetLeft={-20}\n              offsetTop={-30}\n            >\n              <img\n                alt=\"marker\"\n                onClick={() => setShowPopup(true)}\n                style={{ height: 30, width: 30 }}\n                src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n              />\n            </Marker>\n            <Marker\n              alt=\"marker\"\n              latitude={arrivalCoordinates[1]}\n              longitude={arrivalCoordinates[0]}\n              offsetLeft={-20}\n              offsetTop={-30}\n            >\n              <img\n                style={{ height: 30, width: 30 }}\n                alt=\"marker\"\n                src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n              />\n            </Marker>\n          </ReactMapGl>\n        </div>\n        <div className=\"order-tracking-right-side\">\n          <div className=\"order-status-container\">\n            <div className=\"order-status-timing\">\n              <div className=\"or-s-main-text\">14</div>\n              <div className=\"or-s-sub-text\">mins</div>\n            </div>\n            <div className=\"order-status-header\">\n              <span className=\"or-s-main-text-header\">\n                {orderItems?.merchant_name}\n              </span>\n              <span className=\"or-s-sub-text-header\">\n                Total:{\" \"}\n                <span className=\"highlight-main-text\">\n                  $ {orderSummary?.subtotal?.toFixed(2)}{\" \"}\n                </span>{\" \"}\n                \"(2 items)\"\n              </span>\n              <span className=\"or-s-sub-text-header\">\n                Delivery estimated:{\" \"}\n                <span className=\"highlight-main-text\">2021-06-04 16:30 </span>\n              </span>\n            </div>\n          </div>\n          {orderSummary?.delivery_mode === 2 ? (\n            <div className=\"or-s-stepper-wrapper\">\n              <div\n                className={\n                  submittedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">1</span>\n                <span className=\"or-s-stepper-node-title\">Submitted</span>\n              </div>\n              <div\n                className={\n                  confirmedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n                style={{ width: 200 }}\n              ></div>\n              <div\n                className={\n                  confirmedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">2</span>\n                <span className=\"or-s-stepper-node-title\">Confirmed</span>\n              </div>\n              <div\n                className={\n                  completedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n                style={{ width: 200 }}\n              ></div>\n              <div\n                className={\n                  completedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">3</span>\n                <span className=\"or-s-stepper-node-title\">Completed</span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"or-s-stepper-wrapper\">\n              <div\n                className={\n                  submittedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">1</span>\n                <span className=\"or-s-stepper-node-title\">Submitted</span>\n              </div>\n              <div\n                className={\n                  assignedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n              ></div>\n              <div\n                className={\n                  assignedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">2</span>\n                <span className=\"or-s-stepper-node-title\">Assigning</span>\n              </div>\n              <div\n                className={\n                  confirmedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n              ></div>\n              <div\n                className={\n                  confirmedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">3</span>\n                <span className=\"or-s-stepper-node-title\">Confirmed</span>\n              </div>\n              <div\n                className={\n                  pickedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n              ></div>\n              <div\n                className={\n                  pickedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">4</span>\n                <span className=\"or-s-stepper-node-title\">Picked</span>\n              </div>\n              <div\n                className={\n                  completedStatus\n                    ? \"or-s-stepper-line-checked\"\n                    : \"or-s-stepper-line-not-checked\"\n                }\n              ></div>\n              <div\n                className={\n                  completedStatus\n                    ? \"or-s-stepper-node-checked\"\n                    : \"or-s-stepper-node-not-checked\"\n                }\n              >\n                <span className=\"or-s-stepper-node-index\">5</span>\n                <span className=\"or-s-stepper-node-title\">Completed</span>\n              </div>\n            </div>\n          )}\n\n          <OTOrderDetail\n            orderItems={orderItems}\n            orderSummary={orderSummary}\n            showOrderDetail={showOrderDetail}\n            setShowOrderDetail={setShowOrderDetail}\n          />\n          {!showOrderDetail && (\n            <OrderStatus\n              orderSummary={orderSummary}\n              status={currentStatus}\n              showOrderDetail={showOrderDetail}\n              setShowOrderDetail={setShowOrderDetail}\n              setCompletedStatus={setCompletedStatus}\n              setPickedStatus={setPickedStatus}\n              setCurrentStatus={setCurrentStatus}\n              currentStatus={currentStatus}\n            />\n          )}\n        </div>\n      </div>\n      <Modal\n        openModal={showRatingShipper}\n        closeModal={() => {\n          setShowRatingShipper(false);\n          setShowRatingProvider(true);\n        }}\n        transparent={0.5}\n        title={\"Rate Shipper\"}\n        width={40}\n        height={600}\n        padding=\"0% 0%\"\n        hideHeader={true}\n      >\n        <RateShipper\n          setVisible={setShowRatingShipper}\n          orderSummary={orderSummary}\n        />\n      </Modal>\n      <Modal\n        openModal={showRatingProvider}\n        closeModal={() => {\n          setShowRatingProvider(false);\n        }}\n        transparent={0.5}\n        title={\"Rate Order\"}\n        width={40}\n        height={500}\n        padding=\"0% 0%\"\n        hideHeader={true}\n      >\n        <RateProvider\n          setVisible={setShowRatingProvider}\n          orderSummary={orderSummary}\n        />\n      </Modal>\n    </Fragment>\n  );\n}\n\nOrderTracking.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getAllProductFromOrderAPI: PropTypes.func.isRequired,\n  getOrderStatusAPI: PropTypes.func.isRequired,\n  addNotificationAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(\n    connect(mapStateToProps, {\n      getAllProductFromOrderAPI,\n      getOrderStatusAPI,\n      addNotificationAPI,\n    })(OrderTracking)\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/SearchResult/SearchResult.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/GuidePage.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Shipper/Shipper.js",["957","958","959","960","961","962","963"],"import { withRouter } from \"react-router-dom\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport \"./Shipper.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport CartImage from \"assets/cart.svg\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { ShipperLocation } from \"assets/dummy/ShipperLocations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartArrowDown } from \"@fortawesome/fontawesome-free-solid\";\nimport Avatar from \"assets/avatar.jpg\";\nimport { addNotificationAPI } from \"store/actions/OrderAction/OrderAction\";\nconst shipper_info = {\n  name: \"Terry Harrison\",\n  license_plate: \"64B1 - 03663\",\n  rating: 5,\n  profile_image:\n    \"https://pyxis.nymag.com/v1/imgs/231/dd4/b1d43dd12227a68877644b36e1b6c9850e-13-zayn-malik.rsquare.w330.jpg\",\n};\n\nfunction Shipper(props) {\n  const { shipper } = props;\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [orderCode, setOrderCode] = useState(\"\");\n  const [orderData, setOrderData] = useState({});\n  const [shipperConfirmBox, setShipperConfirmBox] = useState(false);\n  useEffect(() => {\n    shipper.socket.on(\n      \"shipper-received-order\",\n      (order, customer, provider, order_code) => {\n        setOrderData({\n          provider: {\n            name: provider.name,\n            phone: 1234567890,\n            address: provider.address,\n            location: provider.location,\n            provider_id: provider.provider_id,\n          },\n          customer: {\n            user_id: customer.user_id,\n            name: customer.name,\n            phone: customer.phone,\n            address: customer.address,\n            location: customer.location,\n          },\n          order: { cart: [...order], order_code: order_code },\n        });\n        setShipperConfirmBox(true);\n        // console.log(data);\n        // dispatch(ReceiveOrder(data));\n      }\n    );\n    return () => {\n      shipper.socket.disconnect();\n    };\n  }, []);\n  const sendMessage = (text) => {\n    if (text !== \"\") {\n      setMessages((prev) => [...prev, text]);\n      setMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    shipper.socket.emit(\"join-room\", orderCode);\n    shipper.socket.on(\"receive-customer-inbox\", (message) => {\n      console.log(messages);\n      setMessages((prev) => [\n        ...prev,\n        { sender: \"customer\", message: message.message },\n      ]);\n    });\n  }, [orderCode]);\n\n  async function addNotification(data) {\n    const notification_id = await props.addNotificationAPI(data);\n    return notification_id;\n  }\n\n  const shipperAcceptOrder = async (orderData) => {\n    //user_notification\n    const user_notification_form = {\n      user_id: orderData.customer.user_id,\n      provider_id: null,\n      role: 1,\n      subject: shipper_info.name,\n      content: ` is taking care of your order ${orderData.order.order_code} at ${orderData.provider.name}.`, //notification content\n      order_code: orderData.order.order_code,\n      read_status: false,\n      type: 1,\n    };\n    const user_notification_id = await addNotification(user_notification_form);\n    user_notification_form.id = user_notification_id;\n    //provider_notification\n    const provider_notification_form = {\n      user_id: null,\n      provider_id: orderData.provider.provider_id,\n      role: 2,\n      subject: `A new order ${orderData.order.order_code}`,\n      content: ` has been submitted to your restaurant. Check it out now.`, //notification content\n      order_code: orderData.order.order_code,\n      read_status: false,\n      type: 2,\n    };\n    const provider_notification_id = await addNotification(\n      provider_notification_form\n    );\n    provider_notification_form.id = provider_notification_id;\n\n    shipper.socket.emit(\n      \"shipper-accepted-order\",\n      orderData.order,\n      orderData.customer,\n      orderData.provider,\n      orderData.order.order_code,\n      user_notification_form,\n      provider_notification_form\n    );\n    setOrderCode(orderData.order.order_code);\n    try {\n      await axios.post(`/v1/api/tastie/order/update_order_status`, {\n        order_code: orderData.order.order_code,\n        status: 2, // picked\n        shipper_id: null, // edit actual shiper_id here\n        update_at: \"2022-04-21 20:11:11\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    setShipperConfirmBox(false);\n  };\n  const shipperDeclineOrder = async (orderData) => {\n    shipper.socket.emit(\n      \"shipper-decline-order\",\n      orderData.order,\n      orderData.customer,\n      orderData.provider,\n      orderData.order.order_code\n    );\n    setShipperConfirmBox(false);\n  };\n  const shipperOnTheWay = async () => {\n    shipper.socket.emit(\"On-the-way\", orderData.order.order_code);\n    try {\n      await axios.post(`/v1/api/tastie/order/update_order_status`, {\n        order_code: orderData.order.order_code,\n        status: 4, // picked\n        shipper_id: null, // edit actual shiper_id here\n        update_at: \"2022-04-21 20:11:11\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const shipperFinishOrder = async () => {\n    shipper.socket.emit(\n      \"Shipper-arrived\",\n      \"The shipper has arrived at your place\",\n      orderData.order.order_code\n    );\n    try {\n      await axios.post(`/v1/api/tastie/order/update_order_status`, {\n        order_code: orderData.order.order_code,\n        status: 5,\n        shipper_id: null, // edit actual shiper_id here\n        update_at: \"2022-04-21 20:11:11\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <NavBar fixed={true} hideBreadcrumb={true} />\n      <div className=\"shipper-main\">\n        <div className=\"shipper-container\">\n          {shipperConfirmBox ? (\n            <div className=\"shipper-utility-row\">\n              <span className=\"shi-uti-text\">\n                You received a new order at <b>{orderData.provider.name}</b>\n              </span>\n              <span className=\"shi-uti-text-medium\">\n                Order code: <b>{orderData.order.order_code}</b>\n              </span>\n              <span className=\"shi-uti-text-medium\">Customer information:</span>\n              <span className=\"shi-uti-text-small\">\n                <b>Name:</b> {orderData.customer.name}\n                <br />\n                <b>Phone number:</b> {orderData.customer.phone}\n                <br />\n                <b>Address:</b> {orderData.customer.address}\n              </span>\n              <ButtonGroup\n                float=\"center\"\n                width={100}\n                mgTop={5}\n                mgBottom={5}\n                gap={10}\n              >\n                <Button\n                  color={\"white\"}\n                  bgColor={\"#710000\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={100}\n                  fontSize={14}\n                  height={30}\n                  label={\"Accept\"}\n                  onClick={() => shipperAcceptOrder(orderData)}\n                />\n\n                <Button\n                  color={\"#101010\"}\n                  bgColor={\"#d6d6d6\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={100}\n                  fontSize={14}\n                  height={30}\n                  label={\"Decline\"}\n                  onClick={() => shipperDeclineOrder(orderData)}\n                />\n              </ButtonGroup>\n            </div>\n          ) : (\n            <Fragment>\n              <div className=\"shipper-utility-row\" style={{ height: \"200px\" }}>\n                <div\n                  className=\"cart-body\"\n                  style={{ justifyContent: \"center\", width: \"100%\" }}\n                >\n                  <img\n                    src={CartImage}\n                    alt=\"cart_image\"\n                    className=\"cart-image\"\n                  />\n                  <span\n                    className=\"cart-image-description\"\n                    style={{ fontSize: 14 }}\n                  >\n                    You have no new order at the moment.\n                  </span>\n                </div>\n              </div>\n            </Fragment>\n          )}\n          <div className=\"shipper-utility-row\">\n            <ButtonGroup\n              float=\"center\"\n              width={100}\n              mgTop={5}\n              mgBottom={5}\n              gap={15}\n            >\n              <span className=\"shi-uti-text-medium\">Shipper actions: </span>\n              <Button\n                color={\"white\"}\n                bgColor={\"#710000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={140}\n                fontSize={13}\n                height={30}\n                label={\"Go to restaurant\"}\n                onClick={() => shipperAcceptOrder()}\n              />\n\n              <Button\n                color={\"white\"}\n                bgColor={\"#710000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={140}\n                fontSize={13}\n                height={30}\n                label={\"On the way\"}\n                onClick={() => shipperOnTheWay()}\n              />\n\n              <Button\n                color={\"white\"}\n                bgColor={\"#710000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={140}\n                fontSize={13}\n                height={30}\n                label={\"Complete order\"}\n                onClick={() => shipperFinishOrder()}\n              />\n            </ButtonGroup>\n          </div>\n          <div className=\"or-st-ship-conversation\">\n            {messages?.map((item, index) => (\n              <div key={index} className={`or-st-chat-item-${item.sender}`}>\n                <img\n                  className=\"or-st-chat-avatar\"\n                  src={\n                    item.sender === \"shipper\" ? shipper.profile_image : Avatar\n                  }\n                  alt=\"shipper_image\"\n                />\n                <span className=\"or-st-chat-item-content\">{item.message}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"or-st-ship-chat-bar\">\n            <input\n              className=\"or-st-chat-content\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              name=\"chat\"\n            />\n            <div\n              className=\"or-st-chat-submit\"\n              onClick={() => {\n                if (message !== \"\") {\n                  setMessages((prev) => [\n                    ...prev,\n                    { sender: \"shipper\", message: message },\n                  ]);\n                  shipper.socket.emit(\"shipper-inbox\", message, orderCode);\n                  setMessage(\"\");\n                }\n              }}\n            >\n              Send\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n      <ToolBar />\n    </Fragment>\n  );\n}\n\nShipper.propTypes = {\n  user: PropTypes.object.isRequired,\n  shipper: PropTypes.object.isRequired,\n  addNotificationAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  shipper: state.ShipperReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addNotificationAPI })(Shipper)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/Profile.js",["964","965","966","967","968","969","970","971"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport \"./Profile.scss\";\nimport {\n  useLocation,\n  withRouter,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProfileDetail from \"components/Profile/ProfileDetail/ProfileDetail\";\nimport MyAccount from \"./AccountSetting/AccountSetting\";\nimport OrderHistory from \"./OrderHistory/OrderHistory\";\nimport ProfileSidebar from \"./ProfileSidebar/ProfileSidebar\";\nimport Favorites from \"./Favorites/Favorites\";\n\nfunction Profile(props) {\n  const { match, location, user } = props;\n  return (\n    <Fragment>\n      <NavBar fixed={true} hideBreadcrumb={true} />\n      <div className=\"profile-container\">\n        <div className=\"profile-sidebar-wrapper\">\n          <ProfileSidebar />\n        </div>\n        <div className=\"profile-content-wrapper\">\n          <Switch>\n            <Route exact path={match.path}>\n              <Redirect to={`/`} />\n            </Route>\n            <Route\n              exact\n              path={`${match.path}/edit`}\n              component={ProfileDetail}\n            />\n            <Route\n              exact\n              path={`${match.path}/account-settings`}\n              component={MyAccount}\n            />\n            <Route\n              exact\n              path={`${match.path}/e-wallet`}\n              component={MyAccount}\n            />\n            <Route\n              exact\n              path={`${match.path}/promotion`}\n              component={OrderHistory}\n            />\n            <Route\n              exact\n              path={`${match.path}/favorites`}\n              component={Favorites}\n            />\n            <Route\n              exact\n              path={`${match.path}/order-history`}\n              component={OrderHistory}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Profile));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderCheckout.js",["972","973","974","975"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../Commons/Layout/Toolbar/Toolbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./OrderCheckout.scss\";\nimport OrderDetail from \"components/OrderCheckout/OrderDetail/OrderDetail\";\nimport OrderReview from \"components/OrderCheckout/OrderReview/OrderReview\";\nimport { getCart } from \"store/actions/CartAction/CartAction\";\nimport { getPromotionAmountAPI } from \"store/actions/OrderAction/OrderAction\";\n\nfunction OrderCheckout(props) {\n  useEffect(() => {\n    if (\n      props.user.profile.user_id !== -1 &&\n      props.user.profile.user_id !== undefined\n    ) {\n      if (String(props.user.profile.user_id) !== props.match.params.uid)\n        props.history.replace(\"/\");\n    }\n  }, [props.user.profile.user_id]);\n  const [promotionAmount, setPromotionAmount] = useState(0);\n  const { user, getCart } = props;\n  const [orderForm, setOrderForm] = useState({\n    delivery_mode: 1,\n    customer_id: props.match.params.uid,\n    customer_phone: \"\",\n    delivery_address: \"\",\n    delivery_method: 1,\n    delivery_fee: 0,\n    ecoupon_code: \"\",\n    payment_method: 1,\n    payment_status: 1,\n    promotion_code: \"\",\n    schedule_time: \"\",\n    subtotal: 0,\n    tips: 0,\n    total: 0,\n  });\n\n  useEffect(() => {\n    async function getPromotionAmount() {\n      const amount = await props.getPromotionAmountAPI(\n        orderForm.promotion_code,\n        parseFloat(orderForm.subtotal)\n      );\n      setPromotionAmount(amount);\n    }\n    if (orderForm.promotion_code !== \"\") {\n      getPromotionAmount();\n    }\n  }, [orderForm?.promotion_code]);\n  const [deliveryOption, setDeliveryOption] = useState(0);\n  useEffect(() => {\n    if (deliveryOption === 1)\n      setOrderForm((prevState) => ({\n        ...prevState,\n        delivery_mode: 2,\n      }));\n    else\n      setOrderForm((prevState) => ({\n        ...prevState,\n        delivery_mode: 1,\n      }));\n  }, [deliveryOption]);\n  const [deliveryFee, setDeliveryFee] = useState(0); //(1)\n  const [orderItem, setOrderItem] = useState([]);\n  const [arrivalCoordinates, setArrivalCoordinates] = useState([\n    106.68060027236189, 10.75909421616193,\n  ]);\n  const [departureCoordinates, setDepartureCoordinates] = useState([\n    106.68057155417674, 10.768685473523648,\n  ]);\n  useEffect(() => {\n    async function fetchingCart(id) {\n      const cart = await getCart(id);\n      setOrderItem(cart);\n      setArrivalCoordinates([\n        parseFloat(cart.longitude),\n        parseFloat(cart.latitude),\n      ]);\n    }\n    if (user.isUserAuthenticated) {\n      fetchingCart(props.match.params.uid || user.profile.user_id);\n    }\n  }, []);\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  return (\n    <Fragment>\n      <NavBar fixed={true} />\n      <div className=\"order-checkout-container\">\n        <OrderDetail\n          orderForm={orderForm}\n          setOrderForm={setOrderForm}\n          deliveryFee={deliveryFee}\n          setDeliveryFee={setDeliveryFee}\n          departureCoordinates={departureCoordinates}\n          setDepartureCoordinates={setDepartureCoordinates}\n          arrivalCoordinates={arrivalCoordinates}\n          setArrivalCoordinates={setArrivalCoordinates}\n          deliveryOption={deliveryOption}\n          setDeliveryOption={setDeliveryOption}\n          setPromotionAmount={setPromotionAmount}\n        />\n        <OrderReview\n          promotionAmount={promotionAmount}\n          orderForm={orderForm}\n          setOrderForm={setOrderForm}\n          deliveryFee={deliveryFee}\n          setDeliveryFee={setDeliveryFee}\n          deliveryOption={deliveryOption}\n          setDeliveryOption={setDeliveryOption}\n        />\n      </div>\n      <Footer />\n      <ToolBar />\n    </Fragment>\n  );\n}\n\nOrderCheckout.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getCart: PropTypes.func.isRequired,\n  getPromotionAmountAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(\n    connect(mapStateToProps, { getCart, getPromotionAmountAPI })(OrderCheckout)\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Spinner/Spinner.js",["976","977","978"],"import { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport \"./Spinner.scss\";\nimport Loader from \"react-spinners/ScaleLoader\";\n\nconst override = css`\n  display: block;\n  left: 45%;\n  top: 35%;\n  font-size: 14px;\n  color: white;\n  z-index: 101;\n`;\n\nconst Spinner = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [color, setColor] = useState(\"#FFD400\");\n  return props.visibility === true ? (\n    <div className=\"spinner-wrapper\">\n      <Loader\n        color={color}\n        loading={loading}\n        css={override}\n        margin={5}\n        size={90}\n        height={50}\n        width={10}\n        speedMultiplier={0.8}\n        radius={3}\n      />\n      <span className=\"spinner-text\">Please wait for a while...</span>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Spinner;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/FormHeader/FormHeader.js",["979"],"import { faChevronDown, faDesktop } from \"@fortawesome/fontawesome-free-solid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Fragment } from \"react\";\nfunction FormHeader(props) {\n  const scrollToFormSubmit = () => {\n    window.scrollTo({\n      top: 400,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"form-banner-wrapper\">\n        <div className=\"form-number-wrapper\" onClick={scrollToFormSubmit}>\n          <FontAwesomeIcon className=\"form-number\" icon={faChevronDown} />\n          <span className=\"show-more-text\">Scroll to Submit</span>\n        </div>\n\n        <span className=\"merchant-registration-header-title\">\n          {props.title}\n        </span>\n      </div>\n      <div className=\"header-content\">\n        <span className=\"form-header-text\">{props.headerText}</span>\n        <span className=\"form-header-sub-text\">{props.bodyText}</span>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default FormHeader;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/types.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ShipperReducer/ShipperReducer.js",["980"],"import io from \"socket.io-client\";\n\nconst initialState = {\n  socket: io(`http://157.230.243.92:3015`),\n};\n\nconst ShipperReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    default:\n      return state;\n  }\n};\n\nexport default ShipperReducer;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ProductReducer/ProductReducer.js",["981"],"import { GET_PRODUCT_LIST } from \"store/actions/types\";\n\nconst initialState = {\n  productList: [],\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PRODUCT_LIST:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n}\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/UIComponents/UIAlertReducers.js",["982"],"import {\n  SET_ALERT_NOTIFICATION,\n  REMOVE_ALERT_NOTIFICATION,\n  SET_DIALOG_BOX,\n  REMOVE_DIALOG_BOX,\n} from \"store/actions/types\";\nimport {} from \"store/actions/types\";\n\nconst initialState = {\n  msg: \"\",\n  loadingAlert: false,\n  loadDialogBox: false,\n  messageDialogHeader: \"\",\n  messageDialogContent: \"\",\n  alertStyling: \"danger\",\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT_NOTIFICATION:\n      return { ...state, ...payload };\n    case REMOVE_ALERT_NOTIFICATION:\n      return { ...state, ...payload };\n    case SET_DIALOG_BOX:\n      return { ...state, ...payload };\n    case REMOVE_DIALOG_BOX:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n}\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ProviderReducer/ProviderReducer.js",["983"],"import {\n  CREATE_MERCHANT,\n  UPDATE_SERVICE_INFO_FORM,\n  UPDATE_REPRESENTATIVE_INFO_FORM,\n  UPDATE_BUSINESS_UNIT_INFO_FORM,\n  UPDATE_PRODUCT_DETAIL_INFO_FORM,\n  UPDATE_BANK_INFO_FORM,\n  SET_DASHBOARD_PROVIDER,\n  SET_ORDER_LIST,\n  SET_TOP_PRODUCT_BY_SALES,\n  SET_TOP_PRODUCT_BY_UNIT,\n  SET_CURRENT_ORDER_LIST,\n  SET_TOP_CATEGORY_BY_UNIT,\n  ADD_ORDER_TO_ORDER_LIST,\n  UPDATE_ORDER_IN_ORDER_LIST,\n} from \"store/actions/types\";\nimport {} from \"store/actions/types\";\nimport io from \"socket.io-client\";\n\nconst initialState = {\n  isMerchantAuthenticated: false,\n  isServiceFormSubmitted: false,\n  isRepresentativeInfoFormSubmitted: false,\n  isBusinessUnitInfoFormSubmitted: false,\n  isProductDetailInfoFormSubmitted: false,\n  isBankInfoFormSubmitted: false,\n  currentForm: 0,\n  merchantId: \"\",\n  merchantPrefilledData: {},\n  provider: {\n    longitude: 106.68057155417674,\n    latitude: 10.768685473523648,\n  },\n  socket: io(`http://157.230.243.92:3015`),\n  providerNotifications: [],\n  currentOrderList: [],\n  operation: [],\n  orderList: [],\n  topBySales: [],\n  topByUnit: [],\n  topCategory: [],\n};\nconst ProviderReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CURRENT_ORDER_LIST:\n      return { ...state, ...payload };\n    case SET_DASHBOARD_PROVIDER:\n      return {\n        ...state,\n        ...payload,\n        provider: payload.provider,\n        operation: payload.operation,\n      };\n    case ADD_ORDER_TO_ORDER_LIST:\n      const copy = state.orderList.filter(\n        (el) => el.order_code !== payload.order.order_code\n      );\n      state.orderList = copy;\n      state.orderList.unshift(payload.order);\n      return { ...state, ...payload };\n\n    case UPDATE_ORDER_IN_ORDER_LIST:\n      state.orderList.forEach((item) => {\n        if (item.order_code === payload.order.order_code) item.status = 6;\n        return { ...state, ...payload };\n      });\n    case SET_ORDER_LIST:\n      return { ...state, ...payload };\n    case CREATE_MERCHANT:\n      return { ...state, ...payload };\n    case UPDATE_SERVICE_INFO_FORM:\n      return { ...state, ...payload, currentForm: 1 };\n    case UPDATE_REPRESENTATIVE_INFO_FORM:\n      return { ...state, ...payload, currentForm: 2 };\n    case UPDATE_BUSINESS_UNIT_INFO_FORM:\n      return { ...state, ...payload, currentForm: 3 };\n    case UPDATE_PRODUCT_DETAIL_INFO_FORM:\n      return { ...state, ...payload, currentForm: 4 };\n    case UPDATE_BANK_INFO_FORM:\n      return { ...state, ...payload, currentForm: -1 };\n    case SET_TOP_PRODUCT_BY_SALES:\n      return { ...state, ...payload };\n    case SET_TOP_PRODUCT_BY_UNIT:\n      return { ...state, ...payload };\n    case SET_TOP_CATEGORY_BY_UNIT:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default ProviderReducer;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/LoginForm/LoginForm.js",["984","985","986","987","988","989","990"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n//components\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\n\n//assets\nimport Logo from \"assets/logo.png\";\nimport FacebookLogo from \"assets/Icon/facebook.png\";\nimport GoogleLogo from \"assets/Icon/google.png\";\nimport { useTranslation } from \"react-i18next\";\n\n//icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faTimes,\n  faEyeSlash,\n  faEye,\n} from \"@fortawesome/fontawesome-free-solid\";\n\n//scss\nimport \"style/Common.scss\";\nimport \"./LoginForm.scss\";\nimport { accountSignInAPI } from \"store/actions/UserAction/UserAction\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\n/*<img className=\"brand-logo-image-login\" alt=\"logo\" src={Logo} />*/\nfunction LoginForm(props) {\n  const { t, i18n } = useTranslation(\"translation\", {\n    keyPrefix: \"userAdmission.signIn\",\n  });\n  const [showValidateDialog, setShowValidateDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({\n    header: \"\",\n    text1: \"\",\n    text2: \"\",\n  });\n  const [functionalIcon, setFunctionalIcon] = useState({\n    enableRemoveText: false,\n    enablePasswordVisibility: false,\n  });\n  const [userLoginInfo, setUserLoginInfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const handleSubmitForm = async () => {\n    const { email, password } = userLoginInfo;\n    if (!(email || password)) return;\n    const formData = {};\n    formData[\"password\"] = password;\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n      formData[\"email\"] = email;\n    if (\n      /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/.test(\n        email\n      )\n    )\n      formData[\"phone\"] = userLoginInfo.email;\n    console.log(\"hello\");\n    const result = await props.accountSignInAPI(formData);\n    if (result.state) {\n      props.history.push(\"/\");\n      return;\n    }\n    setShowValidateDialog(true);\n    setDialogContent({\n      ...dialogContent,\n      header: \"Unable to sign in\",\n      text1: `Fail to sign in`,\n      text2: `The email or password you entered did not match our records. Please double-check and try again.`,\n    });\n  };\n\n  const updateUserLoginInfo = (e) =>\n    setUserLoginInfo({ ...userLoginInfo, [e.target.name]: e.target.value });\n\n  const loadClearTextInput = (inputType = \"email\") => {\n    if (functionalIcon.enableRemoveText)\n      return (\n        <FontAwesomeIcon\n          className=\"remove-text-icon\"\n          onClick={() => {\n            userLoginInfo[inputType] = \"\";\n          }}\n          icon={faTimes}\n        />\n      );\n  };\n  const loadPasswordVisibility = () => {\n    if (functionalIcon.enablePasswordVisibility)\n      return (\n        <FontAwesomeIcon\n          className=\"eye-show-icon\"\n          onClick={() =>\n            setFunctionalIcon({\n              ...functionalIcon,\n              enablePasswordVisibility:\n                !functionalIcon.enablePasswordVisibility,\n            })\n          }\n          icon={faEye}\n        />\n      );\n    else\n      return (\n        <FontAwesomeIcon\n          className=\"eye-slash-icon\"\n          onClick={() =>\n            setFunctionalIcon({\n              ...functionalIcon,\n              enablePasswordVisibility:\n                !functionalIcon.enablePasswordVisibility,\n            })\n          }\n          icon={faEyeSlash}\n        />\n      );\n  };\n\n  return (\n    <div className=\"login-section\">\n      <div className=\"login-form\">\n        <div className=\"login-form-wrapper\">\n          <div className=\"form-header\">\n            <span className=\"login-form-title\" style={{ fontSize: 50 }}>\n              Tastie!\n            </span>\n          </div>\n          <div\n            className=\"login-input-wrapper\"\n            onMouseOver={() =>\n              setFunctionalIcon({\n                ...functionalIcon,\n                enableRemoveText: true,\n              })\n            }\n            onMouseLeave={() =>\n              setFunctionalIcon({\n                ...functionalIcon,\n                enableRemoveText: false,\n              })\n            }\n          >\n            <div className=\"form-label-login\">{t(\"sign-in-username\")}</div>\n            <input\n              className=\"login-input-username form-text-field\"\n              value={userLoginInfo.email}\n              name=\"email\"\n              onChange={(e) => updateUserLoginInfo(e)}\n              type=\"text\"\n              placeholder=\"Email or phone number\"\n              maxLength={50}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  handleSubmitForm();\n                }\n              }}\n            />\n            {loadClearTextInput(\"email\")}\n          </div>\n\n          <div className=\"login-input-wrapper\">\n            <div className=\"form-label-login\">{t(\"sign-in-password\")}</div>\n            <input\n              className=\"login-input-password form-text-field\"\n              value={userLoginInfo.password}\n              name=\"password\"\n              onChange={(e) => updateUserLoginInfo(e)}\n              type={\n                functionalIcon.enablePasswordVisibility ? \"text\" : \"password\"\n              }\n              placeholder=\"Password\"\n              maxLength={50}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  handleSubmitForm();\n                }\n              }}\n            />\n            {loadPasswordVisibility()}\n          </div>\n          <label className=\"remember-me-wrapper\">\n            <input type=\"checkbox\" />\n            <span className=\"remember-me\">{t(\"sign-in-remember-me\")}</span>\n          </label>\n\n          <button\n            className=\"btn-form btn-login-position\"\n            onClick={handleSubmitForm}\n          >\n            <div className=\"none-icon\"></div>\n            {t(\"sign-in-button\")}\n            <FontAwesomeIcon className=\"chevron-icon\" icon={faChevronRight} />\n          </button>\n          <div className=\"link-forget-password\">\n            <a>{t(\"sign-in-forget-password\")}</a>\n          </div>\n          <div className=\"form-seperator\">-OR-</div>\n          <button className=\"btn-sign-up-google\">\n            <img\n              className=\"google-icon\"\n              alt=\"Google sign-in\"\n              src={GoogleLogo}\n            />\n            <div className=\"sign-up-label-gooogle\">\n              {t(\"sign-in-with-google\")}\n            </div>\n          </button>\n          <button className=\"btn-sign-up-facebook\">\n            <img\n              className=\"facebook-icon\"\n              alt=\"Facebook sign-in\"\n              src={FacebookLogo}\n            />\n            <div className=\"sign-up-label-facebook\">\n              {t(\"sign-in-with-facebook\")}\n            </div>\n          </button>\n          <div className=\"policy\">\n            By continuing, you agree to DeliTaste's{\" \"}\n            <b className=\"text-3\">Terms of Service, Privacy Policy</b>\n          </div>\n          <div className=\"label-redirect-sign-up\">\n            Not a member of Delitaste yet?\n            <Link className=\"redirect-sign-up\" to=\"/sign-up\">\n              {\" \"}\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>{\" \"}\n      <DialogBox\n        visibility={showValidateDialog}\n        headerText={dialogContent.header}\n        close={() => setShowValidateDialog(false)}\n      >\n        <div className=\"dialog-detail-wrapper\">\n          <div className=\"dialogbox-content\">\n            <span className=\"dialogbox-content-detail-main\">\n              {dialogContent.text1}\n            </span>\n            <span className=\"dialogbox-content-detail-sub\">\n              {dialogContent.text2}\n            </span>\n          </div>\n          <div className=\"dialogbox-action\">\n            <ButtonGroup gap={5} mgRight={5}>\n              <Button\n                color={\"white\"}\n                bgColor={\"#800000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={80}\n                height={30}\n                label={\"OK\"}\n                onClick={() => setShowValidateDialog(false)}\n              />\n            </ButtonGroup>\n          </div>\n        </div>\n      </DialogBox>\n    </div>\n  );\n}\n\nLoginForm.propTypes = {\n  accountSignInAPI: PropTypes.func.isRequired,\n  setDialogBox: PropTypes.func.isRequired,\n};\n\nexport default withRouter(\n  connect(null, {\n    accountSignInAPI,\n    setDialogBox,\n  })(LoginForm)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/NavBar.js",["991","992"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport MainNavBar from \"./MainNavBar\";\nimport SubNavBar from \"./SubNavBar\";\nimport Breadcrumbs from \"components/Commons/Breadcrumbs/Breadcrumbs\";\nimport \"./NavBar.scss\";\n\nfunction NavBar(props) {\n  const { hideBreadcrumb } = props;\n  return (\n    <>\n      <div\n        className=\"navbars-wrapper\"\n        style={\n          props.fixed\n            ? { position: \"fixed\" }\n            : {\n                position: \"unset\",\n                boxShadow:\n                  \"rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.1) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset\",\n              }\n        }\n      >\n        <MainNavBar hideSubNavbar={props.hideSubNavbar} />\n        {!props.merchant ? <SubNavBar variant={true} /> : <></>}\n        {!hideBreadcrumb ? (\n          <div className=\"nav-bread-crumbs\">\n            <Breadcrumbs />\n          </div>\n        ) : null}\n\n        <div className=\"darken-mask\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(NavBar);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/RateProvider/RateProvider.js",["993","994","995","996"],"import { useState, useEffect, Fragment } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"../RateShipper/RateShipper.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/fontawesome-free-solid\";\n\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { ratingOrderAPI } from \"store/actions/OrderAction/OrderAction\";\n\nfunction RateProvider(props) {\n  const { orderSummary } = props;\n  const [rating, setRating] = useState(5);\n  const [ratingTitle, setRatingTitle] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [selectedRating, setSelectedRating] = useState(0);\n  const [selectedTags, setSelectedTags] = useState(\"\");\n  const ratingChanged = (newRating) => {\n    const level = [\"Too bad\", \"Bad\", \"Neutral\", \"Delicious\", \"Perfect\"];\n    setRatingTitle(level[newRating - 1]);\n    setRating(newRating);\n  };\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  const handleSubmitRating = async () => {\n    const data = {\n      order_id: orderSummary.order_id,\n      create_at: new Date().toISOString().split(\"T\")[0],\n      content: comment,\n      stars: rating,\n      image: \"\",\n    };\n    console.log(data);\n    const status = await props.ratingOrderAPI(data);\n    if (status) {\n      props.setVisible(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"rate-shipper-feedback-container\">\n        <div className=\"rshi-fb-wrapper\">\n          <div className=\"rsh-fb-rating\">\n            <ReactStars\n              count={5}\n              onChange={ratingChanged}\n              value={0}\n              size={48}\n              emptyIcon={<i className=\"far fa-star\"></i>}\n              fullIcon={<i className=\"fa fa-star\"></i>}\n              activeColor={\"#AB2E15\"}\n            />\n          </div>\n          {ratingTitle && <div className=\"rshi-fb-sub-text\">{ratingTitle}</div>}\n          {rating < 3 && (\n            <Fragment>\n              <span className=\"rshi-fb-main-text-medium\">\n                Sincerely sorry for this bad experience.\n                <br />\n                Please report your problems and include evidences to us.\n              </span>\n              <div className=\"rshi-fb-compliments\">\n                {[\n                  \"Too salty\",\n                  \"Too sweet\",\n                  \"Disgusting\",\n                  \"The food is getting cold\",\n                  \"Very bad\",\n                ].map((item, index) => (\n                  <div\n                    className=\"rshi-fb-compliment-tag\"\n                    onClick={() => {\n                      setComment((prev) => prev + \"[\" + item + \"] \");\n                      if (selectedTags.includes(item)) {\n                        let copy = [...selectedTags];\n                        copy.splice(copy.indexOf(item), 1); // remove item\n                        setSelectedTags(copy);\n                      } else {\n                        setSelectedTags((prev) => [...prev, item]);\n                      }\n                    }}\n                    key={index}\n                    style={{\n                      padding: \"4px 8px\",\n                      backgroundColor: \"rgba(230,230,230,0.7)\",\n                      marginRight: index === 4 ? 0 : 10,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <span>{item}</span>\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          )}\n          {rating >= 3 && (\n            <Fragment>\n              <span className=\"rshi-fb-main-text-medium\">\n                Share your compliments:\n              </span>\n              <div className=\"rshi-fb-compliments\">\n                {[\n                  \"Yummy!\",\n                  \"Affordable\",\n                  \"Good packaging\",\n                  \"Filling\",\n                  \"Good food appearance\",\n                ].map((item, index) => (\n                  <div\n                    className=\"rshi-fb-compliment-tag\"\n                    onClick={() => {\n                      setComment((prev) => prev + \"[\" + item + \"] \");\n                      if (selectedTags.includes(item)) {\n                        let copy = [...selectedTags];\n                        copy.splice(copy.indexOf(item), 1); // remove item\n                        setSelectedTags(copy);\n                      } else {\n                        setSelectedTags((prev) => [...prev, item]);\n                      }\n                    }}\n                    key={index}\n                    style={{\n                      padding: \"4px 8px\",\n                      backgroundColor: \"rgba(230,230,230,0.7)\",\n                      marginRight: index === 4 ? 0 : 10,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <span>{item}</span>\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          )}\n          <div className=\"rshi-fb-comment\">\n            <div className=\"rshi-fb-text-area-wrapper\">\n              <textarea\n                className=\"rshi-fb-text-area\"\n                name=\"comment\"\n                value={comment}\n                placeholder=\"Share review about taste, package or each item\"\n                onChange={(e) => setComment(e.target.value)}\n              />\n            </div>\n            <span className=\"rshi-fb-word-counter\">{comment.length}/150</span>\n          </div>\n          <div className=\"homebody-sb-radio-detail-wrapper\">\n            <label className=\"hb-sb-type-wrapper radio\">\n              <input type=\"radio\" name=\"sortType\" value={1} />\n              <span className=\"hb-sb-label-radio\">\n                Make my rating and review anonymous\n              </span>\n            </label>\n          </div>\n          <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={0}>\n            <Button\n              color={\"white\"}\n              bgColor={\"#2c2c2c\"}\n              justifyContent={\"center\"}\n              gap={\"10px\"}\n              width={120}\n              fontSize={14}\n              height={35}\n              onClick={() => handleSubmitRating()}\n              label={`Submit`}\n            />\n          </ButtonGroup>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nRateProvider.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  ratingOrderAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(\n    connect(mapStateToProps, {\n      ratingOrderAPI,\n    })(RateProvider)\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/RateShipper/RateShipper.js",["997","998","999","1000"],"import { useState, useEffect, Fragment } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./RateShipper.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/fontawesome-free-solid\";\n\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport ReactStars from \"react-rating-stars-component\";\nimport {\n  ratingOrderAPI,\n  ratingShipperAPI,\n} from \"store/actions/OrderAction/OrderAction\";\nconst shipper = {\n  name: \"Terry Harrison\",\n  license_plate: \"64B1 - 03663\",\n  rating: 5,\n  profile_image:\n    \"https://pyxis.nymag.com/v1/imgs/231/dd4/b1d43dd12227a68877644b36e1b6c9850e-13-zayn-malik.rsquare.w330.jpg\",\n};\n\nfunction RateShipper(props) {\n  const { orderSummary } = props;\n  const [rating, setRating] = useState(5);\n  const [ratingTitle, setRatingTitle] = useState();\n  const [comment, setComment] = useState(\"\");\n  const [selectedRating, setSelectedRating] = useState(0);\n  const [selectedTags, setSelectedTags] = useState(\"\");\n  const ratingChanged = (newRating) => {\n    const level = [\"Too bad\", \"Bad\", \"Neutral\", \"Delicious\", \"Perfect\"];\n    setRatingTitle(level[newRating - 1]);\n    setRating(newRating);\n  };\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  const handleSubmitRating = async () => {\n    const data = {\n      order_id: orderSummary.order_id,\n      create_at: new Date().toISOString().split(\"T\")[0],\n      content: comment,\n      stars: rating,\n    };\n    const status = await props.ratingShipperAPI(data);\n    if (status) {\n      props.setVisible(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"rate-shipper-feedback-container\">\n        <div className=\"rshi-fb-wrapper\">\n          <img\n            className=\"rshi-fb-image\"\n            src={shipper.profile_image}\n            alt=\"shipper_profile_image\"\n          />\n          <span className=\"rshi-fb-main-text\">\n            How was {shipper.name}'s service?\n          </span>\n          <div className=\"rsh-fb-rating\">\n            <ReactStars\n              count={5}\n              onChange={ratingChanged}\n              value={0}\n              size={48}\n              emptyIcon={<i className=\"far fa-star\"></i>}\n              fullIcon={<i className=\"fa fa-star\"></i>}\n              activeColor={\"#AB2E15\"}\n            />\n          </div>\n          {ratingTitle && <div className=\"rshi-fb-sub-text\">{ratingTitle}</div>}\n          {rating < 3 && (\n            <Fragment>\n              <span className=\"rshi-fb-main-text-medium\">\n                Sincerely sorry for this bad experience.\n                <br />\n                Please report your problems and include evidences to us.\n              </span>\n              <div className=\"rshi-fb-compliments\">\n                {[\n                  \"Bad behavior\",\n                  \"Improper uniform\",\n                  \"Wrong dish\",\n                  \"Late delivery\",\n                  \"Insupportive\",\n                ].map((item, index) => (\n                  <div\n                    className=\"rshi-fb-compliment-tag\"\n                    onClick={() => {\n                      setComment((prev) => prev + \"[\" + item + \"] \");\n                      if (selectedTags.includes(item)) {\n                        let copy = [...selectedTags];\n                        copy.splice(copy.indexOf(item), 1); // remove item\n                        setSelectedTags(copy);\n                      } else {\n                        setSelectedTags((prev) => [...prev, item]);\n                      }\n                    }}\n                    key={index}\n                    style={{\n                      padding: \"4px 8px\",\n                      backgroundColor: \"rgba(230,230,230,0.7)\",\n                      marginRight: index === 4 ? 0 : 10,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <span>{item}</span>\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          )}\n          {rating >= 3 && (\n            <Fragment>\n              <span className=\"rshi-fb-main-text-medium\">\n                Share your compliments:\n              </span>\n              <div className=\"rshi-fb-compliments\">\n                {[\n                  \"Friendly!\",\n                  \"Careful package handling\",\n                  \"Proper uniform\",\n                  \"Fast delivery\",\n                  \"Supportive\",\n                ].map((item, index) => (\n                  <div\n                    className=\"rshi-fb-compliment-tag\"\n                    onClick={() => {\n                      setComment((prev) => prev + \"[\" + item + \"] \");\n                      if (selectedTags.includes(item)) {\n                        let copy = [...selectedTags];\n                        copy.splice(copy.indexOf(item), 1); // remove item\n                        setSelectedTags(copy);\n                      } else {\n                        setSelectedTags((prev) => [...prev, item]);\n                      }\n                    }}\n                    key={index}\n                    style={{\n                      padding: \"4px 8px\",\n                      backgroundColor: \"rgba(230,230,230,0.7)\",\n                      marginRight: index === 4 ? 0 : 10,\n                      marginBottom: 10,\n                    }}\n                  >\n                    <span>{item}</span>\n                  </div>\n                ))}\n              </div>\n            </Fragment>\n          )}\n          <div className=\"rshi-fb-comment\">\n            <div className=\"rshi-fb-text-area-wrapper\">\n              <textarea\n                className=\"rshi-fb-text-area\"\n                name=\"comment\"\n                value={comment}\n                placeholder=\"Share review about taste, package or each item\"\n                onChange={(e) => setComment(e.target.value)}\n              />\n            </div>\n            <span className=\"rshi-fb-word-counter\">{comment.length}/150</span>\n          </div>\n          <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={0}>\n            <Button\n              color={\"white\"}\n              bgColor={\"#2c2c2c\"}\n              justifyContent={\"center\"}\n              gap={\"10px\"}\n              width={120}\n              fontSize={14}\n              height={35}\n              onClick={() => handleSubmitRating()}\n              label={`Submit`}\n            />\n          </ButtonGroup>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nRateShipper.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  ratingOrderAPI: PropTypes.func.isRequired,\n  ratingShipperAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(\n    connect(mapStateToProps, {\n      ratingOrderAPI,\n      ratingShipperAPI,\n    })(RateShipper)\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Toolbar/Toolbar.js",["1001","1002","1003","1004"],"import React, { useState, useEffect } from \"react\";\nimport Fragment from \"react\";\nimport \"./Toolbar.scss\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faFileAlt } from \"@fortawesome/fontawesome-free-solid\";\nimport { faShopify } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction ToolBar(props) {\n  return (\n    <>\n      <div className=\"tool-bar-container\">\n        <div className=\"tool-bar-go-top-wrapper\">\n          <div\n            className=\"go-top-icon-button\"\n            onClick={() => {\n              window.scrollTo({ top: 0, behavior: \"smooth\" });\n            }}\n          >\n            <FontAwesomeIcon icon={faChevronUp} />\n          </div>\n          <div\n            className=\"go-top-icon-button\"\n            onClick={() => {\n              window.scrollTo({ top: 0, behavior: \"smooth\" });\n            }}\n          >\n            <FontAwesomeIcon icon={faFileAlt} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ToolBar;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Footer/Footer.js",["1005","1006","1007","1008","1009","1010"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"assets/logo.png\";\nimport { faMapMarkerAlt } from \"@fortawesome/fontawesome-free-solid\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./Footer.scss\";\n\nfunction Footer(props) {\n  const { t, i18n } = useTranslation();\n  return (\n    <>\n      <div className=\"footer-wrapper\">\n        <div className=\"foooter-detail-wrapper\">\n          <div className=\"footer-detail\">\n            <div className=\"footer-detail-header\">Explore</div>\n            <div className=\"footer-detail-item-wrapper\">Pick for you</div>\n            <div className=\"footer-detail-item-wrapper\">Best-seller</div>\n            <div className=\"footer-detail-item-wrapper\">Today's order</div>\n            <div className=\"footer-detail-item-wrapper\">In a rush</div>\n            <div className=\"footer-detail-item-wrapper\">Orders near you</div>\n          </div>\n          <div className=\"footer-detail\">\n            <div className=\"footer-detail-header\">New Business</div>\n            <div className=\"footer-detail-item-wrapper\">\n              Merchant registration\n            </div>\n            <div className=\"footer-detail-item-wrapper\">Merchant dashboard</div>\n            <div className=\"footer-detail-item-wrapper\">Parnership</div>\n            <div className=\"footer-detail-item-wrapper\">Advertisement</div>\n            <div className=\"footer-detail-item-wrapper\">Sponsorship</div>\n          </div>\n          <div className=\"footer-detail\">\n            <div className=\"footer-detail-header\">Visit</div>\n            <div className=\"footer-detail-item-wrapper\">\n              <FontAwesomeIcon className=\"footer-icon\" icon={faMapMarkerAlt} />\n              <span className=\"footer-item-text\">\n                227 Nguyễn Văn Cừ, Dist. 5, HCMC\n              </span>\n            </div>\n            <div className=\"footer-detail-item-wrapper\">\n              <FontAwesomeIcon className=\"footer-icon\" icon={faMapMarkerAlt} />\n              <span className=\"footer-item-text\">\n                227 Nguyễn Văn Cừ, Dist. 5, HCMC{\" \"}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"footer-detail\">\n            <div className=\"footer-detail-header\">Legals</div>\n            <div className=\"footer-detail-item-wrapper\">Terms of use</div>\n            <div className=\"footer-detail-item-wrapper\">Privacy Policy</div>\n          </div>\n        </div>\n        <div className=\"tail-footer\"></div>\n      </div>\n      <div className=\"sub-footer-wrapper\">\n        <div className=\"head-footer\">\n          Tastie Delivery - Copyright &copy; Ho Chi Minh University of Science\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Footer;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/Favorites/Favorites.js",["1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"assets/avatar.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBookmark,\n  faExchangeAlt,\n  faGlobe,\n  faHeart,\n  faKey,\n  faLanguage,\n  faLock,\n  faQuestionCircle,\n  faSignLanguage,\n  faThumbsUp,\n  faUserCog,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { Formik, Form, Field } from \"formik\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"./Favorites.scss\";\nimport LazyLoad from \"react-lazyload\";\nimport { faHeart as faHeart2 } from \"@fortawesome/fontawesome-free-solid\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport { getFavoriteProvider } from \"store/actions/UserAction/UserAction\";\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons\";\nimport Metric from \"components/MerchantDashboard/DashboardFeatures/Metric/Metric\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport { faGrinHearts } from \"@fortawesome/free-solid-svg-icons\";\nconst LABEL_SIZE = 150;\nconst METRIC_HEIGHT = 140;\nconst initialValues1 = {\n  oldPassword: \"\",\n  newPassword: \"\",\n  recheckPassword: \"\",\n};\n\nfunction Favorites(props) {\n  const [favorites, setFavorites] = useState([]);\n  const { user, getFavoriteProvider } = props;\n  useEffect(() => {\n    async function fetchingDataAPI() {\n      const favorites = await getFavoriteProvider(\n        user.profile?.user_id,\n        user.currentAddress.latitude,\n        user.currentAddress.longitude\n      );\n      console.log(favorites);\n      if (favorites) setFavorites(favorites);\n    }\n    if (user.profile.user_id !== -1) fetchingDataAPI();\n  }, [user.currentAddress]);\n  const [showEditPassword, setShowEditPassword] = useState(true);\n  const handleSubmitForm1 = async (values) => {\n    console.log(values);\n  };\n  return (\n    <Fragment>\n      <div className=\"profile-pd-container\">\n        <div\n          className=\"p-cp-title\"\n          style={{\n            margin: \"10px 0 0 0\",\n            alignSelf: \"flex-start\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginLeft: 10,\n            fontSize: 16,\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            style={{ color: \"#303030\", marginRight: 10 }}\n          />\n          <span>Favorites</span>\n        </div>\n        <div\n          className=\"p-pd-body-wrapper\"\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            gap: 10,\n            width: \"calc(100% - 25px)\",\n            paddingLeft: 25,\n            margin: \"10px 0\",\n          }}\n        >\n          <img src={Avatar} className=\"setting-head-img\" alt=\"avatar\" />\n          <span className=\"setting-head-text\">\n            <span>\n              <b>{props.user.profile?.email}</b>\n            </span>\n            <span\n              onClick={() => props.history.push(\"/profile/edit\")}\n              style={{ fontSize: 12, cursor: \"pointer\", color: \"#610000\" }}\n            >\n              Go to edit profile\n            </span>\n          </span>\n        </div>\n        <div\n          className=\"mkt-key-metrics-wrapper\"\n          style={{ height: 150, width: \"98%\" }}\n        >\n          <div\n            className=\"promotion-progress-wrapper\"\n            style={{ height: METRIC_HEIGHT, border: \"2px solid #eeeeee\" }}\n          >\n            <div className=\"product-stock-quantity\">\n              {favorites.length} Favorite Stores\n            </div>\n            <div className=\"product-stock-quantity-description\">\n              Possible to add more {20 - favorites.length} stores.\n            </div>\n            <div className=\"product-progress-bar\">\n              <ProgressBar\n                bgcolor=\"#940000\"\n                progress={favorites.length || 0}\n                height=\"6px\"\n                length={20}\n                text={\" favorite stores\"}\n              />\n            </div>\n          </div>\n          <Metric\n            width={\"100%\"}\n            height={METRIC_HEIGHT}\n            radius={5}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Frequently place order\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n            <img\n              src={favorites[0]?.profile_pic}\n              height={80}\n              width={80}\n              style={{ borderRadius: 100, margin: \"5px 0\", objectFit: \"cover\" }}\n              alt=\"provider_image\"\n            />\n            <span className=\"apro-p-info-main-text\">\n              {favorites[1]?.provider_name || favorites[0]?.name}\n            </span>\n          </Metric>\n        </div>\n        <div className=\"p-pd-body-wrapper\">\n          <div className=\"p-pd-body-title\">\n            <span className=\"p-pd-title-text\" style={{ width: 300 }}>\n              <FontAwesomeIcon\n                icon={faBookmark}\n                style={{ color: \"#303030\", marginRight: 10 }}\n              />\n              <span>Favorite restaurant ({favorites.length}/20 stores)</span>\n            </span>\n          </div>\n        </div>\n        <div className=\"apro-home-product-slider-all-2\">\n          {favorites.map((item, index) => (\n            <div\n              className=\"apro-home-product-container-2\"\n              key={index}\n              onClick={() =>\n                props.history.push(`/provider-detail/${item.provider_id}`)\n              }\n            >\n              <LazyLoad height={200} style={{ width: \"100%\" }}>\n                <div\n                  className=\"apro-provider-card-container\"\n                  style={{\n                    height: 120,\n                    backgroundImage: `url(${item.profile_pic})`,\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"cover\",\n                  }}\n                ></div>\n              </LazyLoad>\n              <div className=\"apro-product-info-wrapper\">\n                <span className=\"apro-p-info-main-text\">\n                  {item.provider_name || item.name}\n                </span>\n                <div className=\"apro-p-info-rating\">{item.rating || \"5.0\"}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nFavorites.propTypes = {\n  user: PropTypes.object.isRequired,\n  getFavoriteProvider: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, { getFavoriteProvider })(Favorites))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/OrderHistory/OrderHistory.js",["1034","1035","1036","1037","1038","1039","1040","1041"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  useLocation,\n  withRouter,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./OrderHistory.scss\";\nimport { getOrderHistoryAPI } from \"store/actions/OrderAction/OrderAction\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/fontawesome-free-solid\";\n\nfunction OrderHistory(props) {\n  const { user, history, match, getOrderHistoryAPI } = props;\n  const [filterMode, setFilterMode] = useState(1);\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [filterOrderHistory, setFilterOrderHistory] = useState([]);\n  useEffect(() => {\n    async function fetchOrderHistory(id) {\n      const result = await getOrderHistoryAPI(id);\n      console.log(result);\n      if (result) {\n        result.sort(function (a, b) {\n          return (\n            new Date(b.completed_at.split(\", \")[1]) -\n            new Date(a.completed_at.split(\", \")[1])\n          );\n        });\n        setOrderHistory(result);\n        setFilterOrderHistory(result);\n      }\n    }\n    fetchOrderHistory(user.profile?.user_id);\n    return function cleanup() {\n      setOrderHistory([]);\n    };\n  }, [user.profile?.user_id]);\n  const filterItems = (status) => {\n    if (parseInt(status) !== 0) {\n      const result = orderHistory.filter(\n        (element) => element.order_status_nb === parseInt(status)\n      );\n      setFilterOrderHistory(result);\n    } else setFilterOrderHistory(orderHistory);\n  };\n  const directToOrderTracking = (code, status) => {\n    if (status <= 5) history.push(`/order-tracking/${code}`);\n    return;\n  };\n  return (\n    <Fragment>\n      <div className=\"profile-ohis-container\">\n        <div className=\"p-ohis-header-wrapper\">\n          <div className=\"p-ohis-header-main-text\">Order History</div>\n        </div>\n        <div className=\"p-ohis-general-profile-row \">\n          <span className=\"p-ohis-b-gp-label\">Status:</span>\n          <select\n            onChange={(e) => filterItems(e.target.value)}\n            className=\"p-ohis-b-iu-input-general-select\"\n            name=\"status\"\n          >\n            {[\n              \"All\",\n              \"Submitted\",\n              \"Assigned\",\n              \"Confirmed\",\n              \"Picked\",\n              \"Completed\",\n              \"Cancel\",\n            ].map((item, index) => (\n              <option key={index} value={index} label={item} />\n            ))}\n          </select>\n          —<span className=\"p-ohis-b-gp-label\">Date:</span>\n          <input\n            type=\"date\"\n            className=\"p-ohis-b-iu-input-general\"\n            name=\"from\"\n          />\n          —\n          <input\n            type=\"date\"\n            style={{ marginRight: 10 }}\n            className=\"p-ohis-b-iu-input-general\"\n            name=\"to\"\n          />\n          <Button\n            buttonType=\"primary\"\n            width={90}\n            height={30}\n            prefix={\n              <FontAwesomeIcon icon={faSearch} style={{ color: \"white\" }} />\n            }\n            bgColor={\"black\"}\n            color={\"white\"}\n            radius={\"0px\"}\n            label={\"Search\"}\n          />\n        </div>\n\n        <div className=\"p-ohis-body-wrapper\">\n          {filterOrderHistory?.map((item) => (\n            <div className=\"p-ohis-item-wrapper\" key={item.order_id}>\n              <div className=\"p-ohis-item-head\">\n                <span>#{item.order_code}</span>\n                <span>{item.completed_at}</span>\n              </div>\n              <div\n                className=\"p-ohis-item-body\"\n                onClick={() =>\n                  directToOrderTracking(item.order_code, item.order_status_nb)\n                }\n              >\n                <img\n                  className={`p-ohis-item-img ${\n                    item.order_status_nb === 6 && \"p-ohis-grey-scale\"\n                  }`}\n                  src={item.provider_avatar}\n                  alt={\"product_img\"}\n                />\n                <div className=\"p-ohis-item-content\">\n                  <div\n                    className=\"p-ohis-item-main-text\"\n                    style={{ marginBottom: 5 }}\n                  >\n                    {item.provider_name}\n                  </div>\n                  <div className=\"p-ohis-item-sub-text-medium\">\n                    <b>$ {item.total_amount.toFixed(2)} (2 items)</b>\n                  </div>\n                  <div className=\"p-ohis-item-sub-text\">\n                    221 Tran Binh Trong, Ward 3, District 5, Ho Chi Minh City\n                  </div>\n                  <div className=\"p-ohis-item-sub-text\">\n                    Payment method: {item.payment_method}\n                  </div>\n                  <div\n                    className=\"p-ohis-item-sub-text-medium p-ohis-submit-btn\"\n                    style={{ fontWeight: 500, width: \"100%\" }}\n                  >\n                    <span style={{ width: 200 }}>\n                      Status: {item.order_status}\n                    </span>\n                    <ButtonGroup width={100} float={\"flex-end\"} gap={10}>\n                      <Button\n                        bgColor={\"white\"}\n                        color=\"black\"\n                        border={\"2px solid rgb(170, 170, 170)\"}\n                        buttonType=\"secondary\"\n                        width={120}\n                        height={30}\n                        radius={\"0px\"}\n                        label={\"View rating\"}\n                      />\n                      <Button\n                        buttonType=\"primary\"\n                        width={120}\n                        height={30}\n                        bgColor={\"black\"}\n                        color={\"white\"}\n                        radius={\"0px\"}\n                        label={\"Re-order\"}\n                      />\n                    </ButtonGroup>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nOrderHistory.propTypes = {\n  user: PropTypes.object.isRequired,\n  getOrderHistoryAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, { getOrderHistoryAPI })(OrderHistory))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/AccountSetting/AccountSetting.js",["1042","1043","1044","1045","1046","1047","1048","1049","1050","1051"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"assets/avatar.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExchangeAlt,\n  faGlobe,\n  faKey,\n  faLanguage,\n  faLock,\n  faSignLanguage,\n  faUserCog,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { Formik, Form, Field } from \"formik\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"./AccountSetting.scss\";\nconst LABEL_SIZE = 150;\nconst initialValues1 = {\n  oldPassword: \"\",\n  newPassword: \"\",\n  recheckPassword: \"\",\n};\n\nfunction AccountSetting(props) {\n  const [showEditPassword, setShowEditPassword] = useState(true);\n  const handleSubmitForm1 = async (values) => {\n    console.log(values);\n  };\n  return (\n    <Fragment>\n      <div className=\"profile-pd-container\">\n        <div\n          className=\"p-cp-title\"\n          style={{\n            margin: \"10px 0 0 0\",\n            alignSelf: \"flex-start\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginLeft: 10,\n            fontSize: 16,\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faUserCog}\n            style={{ color: \"#303030\", marginRight: 10 }}\n          />\n          <span>Account Settings</span>\n        </div>\n        <div\n          className=\"p-pd-body-wrapper\"\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            gap: 10,\n            width: \"calc(100% - 25px)\",\n            paddingLeft: 25,\n            margin: \"10px 0\",\n          }}\n        >\n          <img src={Avatar} className=\"setting-head-img\" alt=\"avatar\" />\n          <span className=\"setting-head-text\">\n            <span>\n              <b>{props.user.profile?.email}</b>\n            </span>\n            <span\n              onClick={() => props.history.push(\"/profile/edit\")}\n              style={{ fontSize: 12, cursor: \"pointer\", color: \"#610000\" }}\n            >\n              Go to edit profile\n            </span>\n          </span>\n        </div>\n        <div className=\"p-pd-body-wrapper\">\n          <div className=\"p-pd-body-title\">\n            <span className=\"p-pd-title-text\">\n              <FontAwesomeIcon\n                icon={faLock}\n                style={{ color: \"#303030\", marginRight: 10 }}\n              />\n              <span>Account Security</span>\n            </span>\n          </div>\n        </div>\n        <Formik\n          initialValues={initialValues1}\n          validateOnChange={false}\n          onSubmit={(values) => handleSubmitForm1(values)}\n        >\n          {(formikProps) => {\n            const { values, errors, touched } = formikProps;\n            return (\n              <Fragment>\n                <div className=\"p-pd-general-profile-wrapper\">\n                  <div className=\"p-pd-general-profile-row\">\n                    <span\n                      className=\"p-pd-b-gp-label\"\n                      style={{ width: LABEL_SIZE }}\n                    >\n                      Username:\n                    </span>\n                    <Field\n                      type=\"text\"\n                      name=\"username\"\n                      style={{ backgroundColor: \"#F1F1F1\" }}\n                      value={props.user.profile?.email}\n                      placeHolder={\"Current password\"}\n                      className=\"p-pd-b-iu-input-general\"\n                    />\n                  </div>\n                  <div className=\"p-pd-general-profile-row\">\n                    <span\n                      className=\"p-pd-b-gp-label\"\n                      style={{ width: LABEL_SIZE }}\n                    >\n                      Current password:\n                    </span>\n                    <Field\n                      type=\"password\"\n                      nam\n                      e=\"oldPassword\"\n                      placeHolder={\"Current password\"}\n                      className=\"p-pd-b-iu-input-general\"\n                    />\n                  </div>\n                  <div className=\"p-pd-general-profile-row\">\n                    <span\n                      className=\"p-pd-b-gp-label\"\n                      style={{ width: LABEL_SIZE }}\n                    >\n                      New password:\n                    </span>\n                    <Field\n                      type=\"password\"\n                      name=\"newPassword\"\n                      placeHolder={\"New password\"}\n                      className=\"p-pd-b-iu-input-general\"\n                    />\n                  </div>\n                  <div className=\"p-pd-general-profile-row\">\n                    <span\n                      className=\"p-pd-b-gp-label\"\n                      style={{ width: LABEL_SIZE }}\n                    >\n                      Retype new password:\n                    </span>\n                    <Field\n                      type=\"password\"\n                      name=\"recheckPassword\"\n                      placeHolder={\"Confirm new password\"}\n                      className=\"p-pd-b-iu-input-general\"\n                    />\n                  </div>{\" \"}\n                  <span style={{ fontSize: 12 }}>\n                    Make sure it's at least 15 characters OR at least 8\n                    characters including a number and a lowercase letter.\n                  </span>\n                  <ButtonGroup\n                    mgLeft={155}\n                    mgTop={5}\n                    mgBottom={5}\n                    float={\"flex-start\"}\n                  >\n                    <Button\n                      width={140}\n                      height={25}\n                      fontSize={13}\n                      color={\"black\"}\n                      marginTop={20}\n                      bglight={true}\n                      border={\"#5d5d5d 1.5px solid\"}\n                      justifyContent={\"center\"}\n                      label=\"Change Password\"\n                    />\n                  </ButtonGroup>\n                </div>\n              </Fragment>\n            );\n          }}\n        </Formik>\n        <div className=\"p-pd-body-wrapper\">\n          <div className=\"p-pd-body-title\">\n            <span className=\"p-pd-title-text\">\n              <FontAwesomeIcon\n                icon={faKey}\n                style={{ color: \"#303030\", marginRight: 10 }}\n              />\n              <span>Reset password</span>\n            </span>\n          </div>\n        </div>\n        <div className=\"p-pd-general-profile-wrapper\">\n          <span style={{ fontSize: 12 }}>\n            Lost your password? Please enter your email address. You will\n            receive a link to create a new password via email.\n          </span>\n          <div className=\"p-pd-general-profile-row\">\n            <span className=\"p-pd-b-gp-label\" style={{ width: LABEL_SIZE }}>\n              Registered email:\n            </span>\n            <input\n              type=\"text\"\n              name=\"forget_password_email\"\n              placeHolder={\"Enter your email\"}\n              className=\"p-pd-b-iu-input-general\"\n              style={{ width: 500 }}\n            />\n          </div>\n          <ButtonGroup mgLeft={155} mgTop={5} mgBottom={5} float={\"flex-start\"}>\n            <Button\n              width={140}\n              height={25}\n              fontSize={13}\n              color={\"black\"}\n              marginTop={20}\n              bglight={true}\n              border={\"#5d5d5d 1.5px solid\"}\n              justifyContent={\"center\"}\n              label=\"Reset password\"\n            />\n          </ButtonGroup>\n        </div>\n        <div className=\"p-pd-body-wrapper\">\n          <div className=\"p-pd-body-title\">\n            <span className=\"p-pd-title-text\">\n              <FontAwesomeIcon\n                icon={faGlobe}\n                style={{ color: \"#303030\", marginRight: 10 }}\n              />\n              <span>Language Settings</span>\n            </span>\n          </div>\n        </div>\n        <div className=\"p-pd-general-profile-wrapper\">\n          <span style={{ fontSize: 12 }}>\n            Select the language right below to change current web context.\n          </span>\n          <div className=\"p-pd-general-profile-row\">\n            <span className=\"p-pd-b-gp-label\" style={{ width: LABEL_SIZE }}>\n              Language:\n            </span>\n            <select className=\"p-pd-b-iu-input-general-select-3\" name=\"city\">\n              <option value=\"\" disabled hidden>\n                Select a language...\n              </option>\n              <option value={\"en\"} label={\"English\"} />\n              <option value={\"fr\"} label={\"French\"} />\n              <option value={\"vi\"} label={\"Vietnamese\"} />\n            </select>\n          </div>\n          <ButtonGroup mgLeft={155} mgTop={5} mgBottom={5} float={\"flex-start\"}>\n            <Button\n              width={140}\n              height={25}\n              fontSize={13}\n              color={\"black\"}\n              marginTop={20}\n              bglight={true}\n              border={\"#5d5d5d 1.5px solid\"}\n              justifyContent={\"center\"}\n              label=\"Set language\"\n            />\n          </ButtonGroup>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nAccountSetting.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, null)(AccountSetting))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileSidebar/ProfileSidebar.js",["1052","1053","1054","1055","1056","1057","1058","1059"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ProfileSidebar.scss\";\nimport PropTypes from \"prop-types\";\nimport { useLocation, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport IosApp from \"assets/ios_app.png\";\nimport AndroidApp from \"assets/android_app.png\";\nimport Avatar from \"assets/avatar.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAndroid,\n  faApple,\n  faServicestack,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faBell,\n  faCog,\n  faCogs,\n  faCrown,\n  faHeart,\n  faQuestion,\n  faQuestionCircle,\n  faTags,\n  faUser,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faScroll } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileSidebar(props) {\n  const location = useLocation();\n  const sidebarItemSelected = {\n    color: \"#101010\",\n    backgroundColor: \"#f0f0f0\",\n  };\n  const { history, user } = props;\n  return (\n    <div className=\"u-pf-sb-wrapper\">\n      <div className=\"u-pf-sb-items-wrapper\">\n        <div className=\"u-pf-sb-header\">\n          <img\n            src={Avatar}\n            alt=\"profile_image\"\n            className=\"u-pf-sb-profile-img\"\n          />\n          <div className=\"u-pf-sb-profile-text-wrapper\">\n            <span className=\"u-pf-sb-pt-main-text\">\n              {`${user?.profile?.first_name || \"\"} ${\n                user?.profile?.last_name || \"\"\n              }`}\n            </span>\n            <span className=\"u-pf-sb-pt-icon\">\n              <FontAwesomeIcon className=\"vip-customer\" icon={faCrown} />\n              <span className=\"u-pf-sb-pt-sub-text-type\">Gold customer</span>\n            </span>\n            <span className=\"u-pf-sb-pt-sub-text\">27 orders</span>\n          </div>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/edit\" ? sidebarItemSelected : {}\n          }\n          onClick={() => history.push(`/profile/edit`)}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faUser} />\n          <span>Profile</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/favorites\"\n              ? sidebarItemSelected\n              : {}\n          }\n          onClick={() => history.push(`/profile/favorites`)}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faHeart} />\n          <span>Favorites</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/notification\"\n              ? sidebarItemSelected\n              : {}\n          }\n          onClick={() => history.push(\"/profile/notification\")}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faBell} />\n          <span>Notifications</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname.includes(`/profile/order-history`)\n              ? sidebarItemSelected\n              : {}\n          }\n          onClick={() => history.push(`/profile/order-history`)}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faScroll} />\n          <span>Order History</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/promotions\"\n              ? sidebarItemSelected\n              : {}\n          }\n          onClick={() => history.push(\"/profile/promotions\")}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faTags} />\n          <span>Promotions</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/help\" ? sidebarItemSelected : {}\n          }\n          onClick={() => history.push(\"/profile/help\")}\n        >\n          <FontAwesomeIcon\n            className=\"u-pf-sb-row-icon\"\n            icon={faQuestionCircle}\n          />\n          <span>Support Service</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row\"\n          style={\n            location.pathname === \"/profile/account-settings\"\n              ? sidebarItemSelected\n              : {}\n          }\n          onClick={() => history.push(\"/profile/account-settings\")}\n        >\n          <FontAwesomeIcon className=\"u-pf-sb-row-icon\" icon={faCog} />\n          <span>Settings</span>\n        </div>\n        <div\n          className=\"u-pf-sb-row-end\"\n          onClick={() => history.push(\"/profile/account-settings\")}\n        >\n          <span className=\"u-pf-sb-low-text\">Sign out</span>\n        </div>\n      </div>\n      <div className=\"u-pf-sb-body\">\n        <span className=\"u-pf-sb-bd-text\">Order checkout</span>\n        <span className=\"u-pf-sb-bd-text\">Upgrade to a business account</span>\n        <span className=\"u-pf-sb-bd-text\">Sign up for delivery service</span>\n      </div>\n      <div className=\"android-ios-app\">\n        <div className=\"ad-io-app-item\">\n          <FontAwesomeIcon className=\"ad-io-icon\" icon={faApple} />\n          <span>Iphone</span>\n        </div>\n        <div className=\"ad-io-app-item\">\n          <FontAwesomeIcon className=\"ad-io-icon\" icon={faAndroid} />\n          <span>Android</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nProfileSidebar.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, null)(ProfileSidebar))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ErrorHandlers/FormError/FormError.js",["1060"],"import { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport \"./FormError.scss\";\nconst ErrorAlert = styled.div`\n  color: red;\n  font-size: 14px;\n  text-align: left;\n`;\n\nfunction FormError(props) {\n  const ErrorAlertStyling = {\n    textAlign: props.align || \"center\",\n    margin: props.margin || \"0%\",\n    fontSize: `${props.fontSize}px` || \"14px\",\n    fontWeight: `${props.fontWeight}` || \"normal\",\n  };\n\n  const NonErrorAlertStyling = {\n    marginTop: `${props.spaceBetween}%` || \"4%\",\n  };\n  return (\n    <Fragment>\n      {props.err ? (\n        <div className=\"form-error-wrapper\" style={ErrorAlertStyling}>\n          <div className=\"form-error-content\">{props.err}</div>\n        </div>\n      ) : (\n        <div className=\"form-error-wrapper\" style={NonErrorAlertStyling}>\n          <div className=\"form-error-content\"></div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nexport default FormError;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ImageHandlers/ImagePreview/ImagePreview.js",["1061","1062"],"import { Fragment, useState, useEffect, useRef } from \"react\";\nimport \"style/Common.scss\";\nimport DefaultImage from \"assets/image-preview-default.png\";\nconst ImagePreview = ({ file }) => {\n  const [preview, setPreview] = useState();\n  useEffect(() => {\n    if (!file) {\n      setPreview(DefaultImage);\n      return;\n    }\n    const objectUrl = URL.createObjectURL(file);\n    setPreview(objectUrl);\n    // free memory when ever this component is unmounted\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [file]);\n\n  return <img src={preview} className=\"file-image-preview\" alt=\"preview\" />;\n};\n\nexport default ImagePreview;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/FormUtils/MerchantFormValidate.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector.js",["1063","1064","1065","1066"],"import { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faCheck } from \"@fortawesome/fontawesome-free-solid\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport Checkbox from \"react-custom-checkbox\";\n\nimport \"./CategorySelector.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\n\nimport { faCommentsDollar } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CategorySelector(props) {\n  const [categoryList, setCategoryList] = useState(props.list);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const updateSearchTerms = (e) => setSearchTerm(e.target.value);\n\n  useEffect(() => {\n    if (searchTerm) {\n      const results =\n        searchTerm.length > 1\n          ? props.list.filter((item) => item.categoryNsame.includes(searchTerm))\n          : props.list.filter((item) =>\n              item.categoryName.startsWith(searchTerm)\n            );\n\n      if (results.length !== 0) setCategoryList(results);\n      return;\n    }\n    setCategoryList(props.list);\n  }, [searchTerm]);\n  return (\n    <Fragment>\n      <div className=\"category-search-container\">\n        <input\n          name=\"term\"\n          className=\"category-search-term\"\n          type=\"text\"\n          placeholder=\"Search category...\"\n          onChange={(e) => updateSearchTerms(e)}\n        />\n        <FontAwesomeIcon className=\"category-search-icon\" icon={faSearch} />\n      </div>\n      <div className=\"category-selection-wrapper\">\n        <span className=\"category-selection-title\">{props.title}</span>\n        <div className=\"option-container\">\n          {categoryList.map((category) => (\n            <div\n              className=\"option-row\"\n              key={\n                props.menu ? category.menu_category_id : category.category_id\n              }\n            >\n              <Checkbox\n                checked={\n                  props.selectedCategory.indexOf(\n                    props.menu\n                      ? category.menu_category_id\n                      : category.category_id\n                  ) !== -1\n                    ? true\n                    : false\n                }\n                disabled={\n                  props.selectedCategory.length < props.required ||\n                  props.selectedCategory.indexOf(\n                    props.menu\n                      ? category.menu_category_id\n                      : category.category_id\n                  ) !== -1\n                    ? false\n                    : true\n                }\n                icon={\n                  <div className=\"check-icon\">\n                    <FontAwesomeIcon\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"#2c2c2c\",\n                      }}\n                      icon={faCheck}\n                    />\n                  </div>\n                }\n                size={20}\n                borderColor={\"#ffffff\"}\n                borderRadius={5}\n                name=\"category\"\n                onChange={(value) => {\n                  if (value) {\n                    props.setSelectedCategory([\n                      ...props.selectedCategory,\n                      props.menu\n                        ? category.menu_category_id\n                        : category.category_id,\n                    ]);\n                    return;\n                  } else {\n                    let index = props.selectedCategory.indexOf(\n                      props.menu\n                        ? category.menu_category_id\n                        : category.category_id\n                    );\n                    if (index != -1) {\n                      var array = [...props.selectedCategory];\n                      array.splice(index, 1);\n                      props.setSelectedCategory(array);\n                    }\n                  }\n                }}\n                style={{\n                  backgroundColor: \"white\",\n                  cursor: \"pointer\",\n                  border: \"none\",\n                }}\n                labelStyle={{\n                  fontSize: \"13px\",\n                  fontWeight: \"500\",\n                  color: \"#2e2e2e\",\n                  marginLeft: 15,\n                  userSelect: \"none\",\n                }}\n                label={\n                  props.menu\n                    ? category.menu_category_name\n                    : category.category_name\n                }\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <ButtonGroup float={\"flex-end\"} direction={\"row\"} gap={20} mgTop={25}>\n        <Button\n          label=\"Cancel\"\n          buttonType=\"secondary\"\n          onClick={props.close}\n          width={100}\n        />\n        <Button\n          onClick={props.save}\n          label=\"Save\"\n          buttonType=\"primary\"\n          width={100}\n        />\n      </ButtonGroup>\n    </Fragment>\n  );\n}\n\nexport default CategorySelector;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Tag/Tag.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/Toolbar/VoucherToolbar.js",["1067","1068","1069"],"import React, { useState, useEffect } from \"react\";\nimport Fragment from \"react\";\nimport VoucherNotification from \"assets/Voucher.png\";\nimport \"./Toolbar.scss\";\nfunction VoucherToolBar(props) {\n  return (\n    <>\n      <div className=\"voucher-toolbar-container\">\n        <img src={VoucherNotification} />\n      </div>\n    </>\n  );\n}\n\nexport default VoucherToolBar;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDBusinessInsight/BusinessInsightPanel.js",["1070","1071","1072"],"import { Fragment, useEffect, useState } from \"react\";\nimport MDBusinessInsight from \"components/MerchantDashboard/DashboardFeatures/MDBusinessInsight/MDBusinessInsight\";\nimport \"../Panel.scss\";\n\nfunction BusinessInsightPanel(props) {\n  switch (props.match.params.name) {\n    case \"business-insight\":\n      return (\n        <div className=\"panel-content-wrapper\">\n          <MDBusinessInsight />\n        </div>\n      );\n    default:\n      return (\n        <div className=\"panel-container\">\n          <div className=\"panel-center\">Developing</div>\n        </div>\n      );\n  }\n}\n\nexport default BusinessInsightPanel;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDHome/HomePanel.js",["1073","1074"],"import { Fragment, useEffect, useState } from \"react\";\nimport MDHome from \"components/MerchantDashboard/DashboardFeatures/MDHome/MDHome\";\nimport \"../Panel.scss\";\n\nfunction HomePanel(props) {\n  switch (props.match.params.name) {\n    case \"general\":\n      return (\n        <div className=\"panel-content-wrapper\">\n          <MDHome />\n        </div>\n      );\n    case \"my-restaurant\":\n      return (\n        <Fragment>\n          <div className=\"panel-content-wrapper\">Developing</div>\n        </Fragment>\n      );\n    default:\n      return (\n        <div className=\"panel-container\">\n          <div className=\"panel-center\">Developing</div>\n        </div>\n      );\n  }\n}\n\nexport default HomePanel;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Button/Button.js",["1075","1076"],"import { useState, useEffect, Fragment } from \"react\";\nimport \"style/Common.scss\";\nconst Button = ({\n  disabled,\n  buttonType,\n  type,\n  onClick,\n  width,\n  height,\n  radius,\n  color,\n  bgColor,\n  fontSize,\n  prefix,\n  surfix,\n  label,\n  left,\n  right,\n  bglight,\n  border,\n  justifyContent,\n  gap,\n}) => {\n  const buttonStyling = {\n    marginLeft: `${left}px` || \"10px\",\n    marginRight: `${right}px` || \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: justifyContent || \"space-evenly\",\n    alignItems: \"center\",\n    width: width || \"80px\",\n    height: height || \"30px\",\n    borderRadius: radius || \"0px\",\n    backgroundColor:\n      bgColor ||\n      (buttonType === \"primary\" ? \"#940000\" : bglight ? \"#F5F5F5\" : \"#666666\"),\n    cursor: \"pointer\",\n    border: border || \"none\",\n    gap: gap || \"5px\",\n  };\n  const buttonStylingDisabled = {\n    marginLeft: `${left}px` || \"10px\",\n    marginRight: `${right}px` || \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: justifyContent || \"space-evenly\",\n    alignItems: \"center\",\n    width: width || \"80px\",\n    height: height || \"30px\",\n    borderRadius: radius || \"2px\",\n    backgroundColor: \"white\",\n    cursor: \"not-allowed\",\n    border: border || \"none\",\n    gap: gap || \"5px\",\n  };\n  const buttonTextStyling = {\n    color: color || \"white\",\n    fontSize: fontSize || \"13px\",\n  };\n\n  const buttonTextStylingDisabled = {\n    color: \"#B6B6B6\",\n    fontSize: fontSize || \"13px\",\n  };\n  return (\n    <Fragment>\n      {disabled ? (\n        <div\n          className=\"cs-button-wrapper\"\n          style={buttonStylingDisabled}\n          type={type || \"\"}\n        >\n          <span className=\"cs-button-label\" style={buttonTextStylingDisabled}>\n            {label || \"Button\"}\n          </span>\n          {surfix || <></>}\n        </div>\n      ) : (\n        <div\n          className=\"cs-button-wrapper\"\n          onClick={onClick}\n          style={buttonStyling}\n          type={type || \"\"}\n        >\n          {prefix || <></>}\n          <span className=\"cs-button-label\" style={buttonTextStyling}>\n            {label || \"Button\"}\n          </span>\n          {surfix || <></>}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Button;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Button/ButtonGroup/ButtonGroup.js",["1077","1078"],"import { useState, useEffect, Fragment } from \"react\";\n\nconst ButtonGroup = ({\n  width,\n  direction,\n  wrap,\n  gap,\n  float,\n  children,\n  mgTop,\n  mgBottom,\n  mgLeft,\n  mgRight,\n}) => {\n  const buttonGroupStyling = {\n    width: `${width}%` || \"100%\",\n    display: \"flex\",\n    flexDirection: direction || \"row\",\n    flexWrap: wrap || \"nowrap\",\n    marginTop: `${mgTop}px` || \"5px\",\n    marginBottom: `${mgBottom}px` || \"5px\",\n    marginRight: `${mgRight}px` || \"\",\n    marginLeft: `${mgLeft}px` || \"\",\n    justifyContent: float || \"flex-start\",\n    height: \"auto\",\n    gap: `${gap}px` || \"5px\",\n    alignItems: \"center\",\n  };\n  return (\n    <Fragment>\n      <div className=\"cs-button-group-wrapper\" style={buttonGroupStyling}>\n        {children}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ButtonGroup;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/HomeBodySidebar.js",["1079"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  faAddressBook,\n  faAllergies,\n  faChevronDown,\n  faChevronUp,\n  faHeart,\n  faRibbon,\n  faSeedling,\n  faUtensils,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport AddressBookPanel from \"components/Commons/Overlay/Popup/Panel/AddressBookPanel\";\nimport { faCandyCane, faCarrot } from \"@fortawesome/free-solid-svg-icons\";\nconst HOME_RENDER = 1;\nconst SEARCH_RENDER = 2;\nfunction HomeBodySidebar(props) {\n  const { type, totalResult, query } = props;\n  const [checkedOption1, setCheckedOption1] = useState(false);\n  const [checkedOption2, setCheckedOption2] = useState(false);\n  const [showFunction1, setShowFunction1] = useState(true);\n  const [showFunction2, setShowFunction2] = useState(true);\n  const [showFunction3, setShowFunction3] = useState(true);\n  const [showFunction4, setShowFunction4] = useState(true);\n  const [showAddressPanel, setShowAddressPanel] = useState(false);\n  const dietary = [\n    { id: 1, dietary_name: \"Vegetarian\", dietary_icon: faCarrot },\n    { id: 2, dietary_name: \"Vegan\", dietary_icon: faSeedling },\n    { id: 3, dietary_name: \"Gluten-free\", dietary_icon: faCandyCane },\n    { id: 4, dietary_name: \"Good for health\", dietary_icon: faHeart },\n    { id: 5, dietary_name: \"Alergy-friendly\", dietary_icon: faAllergies },\n  ];\n  return (\n    <Fragment>\n      <div\n        className=\"homebody-sb-container\"\n        style={{ overflowY: props.showScrollbar }}\n      >\n        {type === SEARCH_RENDER && query && (\n          <Fragment>\n            <span className=\"homebody-sb-header-for-query-up\">{`\"${query}\"`}</span>\n            <span className=\"homebody-sb-header-for-query-down\">{`Results for \"${query}\"`}</span>\n          </Fragment>\n        )}\n        <span\n          className=\"homebody-sb-header-title\"\n          style={type === SEARCH_RENDER ? { marginTop: 0 } : {}}\n        >\n          All stores\n        </span>\n        {type === SEARCH_RENDER && totalResult ? (\n          <span className=\"homebody-sb-header-for-result\">\n            {totalResult !== 0\n              ? `${totalResult} Result${totalResult > 1 ? \"s\" : \"\"}`\n              : \"Not found\"}\n          </span>\n        ) : (\n          <Fragment></Fragment>\n        )}\n        {type === HOME_RENDER ? (\n          <div className=\"address-list\">\n            <FontAwesomeIcon\n              className=\"address-book-icon\"\n              onClick={() => setShowFunction1((prev) => !prev)}\n              icon={faAddressBook}\n            />\n            <span className=\"address-book-picked\">\n              {props.user?.currentAddress?.address ||\n                \"Please wait for a while...\"}\n            </span>\n            <span\n              className=\"address-book-button\"\n              onClick={() => setShowAddressPanel(true)}\n            >\n              Change\n            </span>\n          </div>\n        ) : (\n          <></>\n        )}\n        <div className=\"homebody-sb-function\">\n          <div className=\"homebody-sb-function-title-wrapper\">\n            <span className=\"homebody-sb-function-title\">Sort</span>\n            <FontAwesomeIcon\n              className=\"homebody-sb-function-title-icon\"\n              onClick={() => setShowFunction1((prev) => !prev)}\n              icon={showFunction1 ? faChevronUp : faChevronDown}\n            />\n          </div>\n          {showFunction1 && (\n            <div className=\"homebody-sb-radio-detail-wrapper\">\n              <label className=\"hb-sb-type-wrapper radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sortType\"\n                  value={1}\n                  onChange={(e) => props.setCurrentSortMode(e.target.value)}\n                />\n                <span className=\"hb-sb-label-radio\">\n                  Picked for you (default)\n                </span>\n              </label>\n              <label className=\"hb-sb-type-wrapper radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sortType\"\n                  value={2}\n                  onChange={(e) => props.setCurrentSortMode(e.target.value)}\n                />\n                <span className=\"hb-sb-label-radio\">Most popular</span>\n              </label>\n              <label className=\"hb-sb-type-wrapper radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sortType\"\n                  value={3}\n                  onChange={(e) => props.setCurrentSortMode(e.target.value)}\n                />\n                <span className=\"hb-sb-label-radio\">Rating</span>\n              </label>\n              <label className=\"hb-sb-type-wrapper radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sortType\"\n                  value={4}\n                  onChange={(e) => props.setCurrentSortMode(e.target.value)}\n                />\n                <span className=\"hb-sb-label-radio\">Delivery time</span>\n              </label>\n            </div>\n          )}\n        </div>\n        <div className=\"homebody-sb-function\">\n          <div className=\"homebody-sb-function-title-wrapper\">\n            <span className=\"homebody-sb-function-title\">Just For You </span>\n            <FontAwesomeIcon\n              className=\"homebody-sb-function-title-icon\"\n              onClick={() => setShowFunction2((prev) => !prev)}\n              icon={showFunction2 ? faChevronUp : faChevronDown}\n            />\n          </div>\n          {showFunction2 && (\n            <>\n              <div className=\"hb-sb-switch-wrapper\">\n                <FontAwesomeIcon icon={faRibbon} className=\"hb-sb-icon-color\" />\n                <span className=\"hb-sb-switch-label\">Deals</span>\n                <Switch\n                  onChange={() => {\n                    setCheckedOption1((prev) => !prev);\n                  }}\n                  checked={checkedOption1}\n                  onColor=\"#E2E2E2\"\n                  offColor=\"#E2E2E2\"\n                  onHandleColor=\"#666666\"\n                  handleDiameter={20}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                  activeBoxShadow=\"0px 0px 1px 5px rgba(0, 0, 0, 0.2)\"\n                  height={15}\n                  width={40}\n                  className=\"react-switch\"\n                  id=\"material-switch\"\n                />\n              </div>\n              <div className=\"hb-sb-switch-wrapper\">\n                <FontAwesomeIcon\n                  icon={faUtensils}\n                  className=\"hb-sb-icon-color\"\n                />\n                <span className=\"hb-sb-switch-label\">Most order</span>\n                <Switch\n                  onChange={() => {\n                    setCheckedOption2((prev) => !prev);\n                  }}\n                  checked={checkedOption2}\n                  onColor=\"#E2E2E2\"\n                  offColor=\"#E2E2E2\"\n                  onHandleColor=\"#666666\"\n                  handleDiameter={20}\n                  uncheckedIcon={false}\n                  checkedIcon={false}\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                  activeBoxShadow=\"0px 0px 1px 5px rgba(0, 0, 0, 0.2)\"\n                  height={15}\n                  width={40}\n                  className=\"react-switch\"\n                  id=\"material-switch\"\n                />\n              </div>\n            </>\n          )}\n        </div>\n        {type === HOME_RENDER ? (\n          <div className=\"homebody-sb-function\">\n            <div className=\"homebody-sb-function-title-wrapper\">\n              <span className=\"homebody-sb-function-title\">Price Range</span>\n              <FontAwesomeIcon\n                className=\"homebody-sb-function-title-icon\"\n                onClick={() => setShowFunction3((prev) => !prev)}\n                icon={showFunction3 ? faChevronUp : faChevronDown}\n              />\n            </div>\n            {showFunction3 && (\n              <div id=\"form-wrapper\">\n                <div className=\"form1\">\n                  <div id=\"radio-slider\">\n                    <input\n                      type=\"radio\"\n                      name=\"debt-amount\"\n                      id=\"1\"\n                      value=\"1\"\n                      required\n                    />\n                    <label\n                      className=\"label-radio-slider\"\n                      htmlFor=\"1\"\n                      data-debt-amount=\"Free\"\n                    ></label>\n                    <input\n                      type=\"radio\"\n                      name=\"debt-amount\"\n                      id=\"2\"\n                      value=\"2\"\n                      required\n                    />\n                    <label htmlFor=\"2\" data-debt-amount=\"$\"></label>\n                    <input\n                      type=\"radio\"\n                      name=\"debt-amount\"\n                      id=\"3\"\n                      value=\"3\"\n                      required\n                    />\n                    <label htmlFor=\"3\" data-debt-amount=\"$$\"></label>\n                    <input\n                      type=\"radio\"\n                      name=\"debt-amount\"\n                      id=\"4\"\n                      value=\"4\"\n                      required\n                    />\n                    <label htmlFor=\"4\" data-debt-amount=\"$$$\"></label>\n                    <input\n                      type=\"radio\"\n                      name=\"debt-amount\"\n                      id=\"5\"\n                      value=\"5\"\n                      required\n                    />\n                    <label htmlFor=\"5\" data-debt-amount=\"$$$$\"></label>\n                    <div id=\"debt-amount-pos\"></div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <></>\n        )}\n        {type === HOME_RENDER ? (\n          <div className=\"homebody-sb-function\">\n            <div className=\"homebody-sb-function-title-wrapper\">\n              <span className=\"homebody-sb-function-title\">Dietary</span>\n              <FontAwesomeIcon\n                className=\"homebody-sb-function-title-icon\"\n                onClick={() => setShowFunction4((prev) => !prev)}\n                icon={showFunction4 ? faChevronUp : faChevronDown}\n              />\n            </div>\n\n            {showFunction4 && (\n              <div className=\"dietary-wrapper\">\n                {dietary.map((item) => (\n                  <div className=\"dietary-item\" key={item.id}>\n                    <FontAwesomeIcon\n                      icon={item.dietary_icon}\n                      className=\"dietary-icon\"\n                    />\n                    <span className=\"dietary-text\">{item.dietary_name}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <AddressBookPanel\n        visible={showAddressPanel}\n        setVisible={setShowAddressPanel}\n      />\n    </Fragment>\n  );\n}\nHomeBodySidebar.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(connect(mapStateToProps, null)(HomeBodySidebar));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/HomeBodyContent.js",["1080","1081","1082"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nimport {\n  getProviderGroup,\n  getAllProvider,\n} from \"store/actions/HomeAction/HomeAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProviderGroup from \"components/HomePage/HomeBody/ProviderGroup\";\nimport ProviderShowAll from \"components/HomePage/HomeBody/ProviderShowAll\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport PickupProvider from \"./PickupProvider\";\nimport CategoryGroup from \"./CategoryGroup\";\nconst providerGroup = [\n  {\n    group_title: \"In a rush?\",\n    group_description: \"Here’s the fastest delivery for you\",\n  },\n  {\n    group_title: \"Orders near you\",\n    group_description: \"Your neighborhood’s latest orders\",\n  },\n  {\n    group_title: \"Today's offers\",\n    group_description: \"\",\n  },\n  {\n    group_title: \"Popular near you\",\n    group_description: \"\",\n  },\n  {\n    group_title: \"Double the Savings\",\n    group_description: \"\",\n  },\n];\nconst glimit = 20;\nconst goffset = 1;\n\nfunction HomeBodyContent(props) {\n  const { user, getProviderGroup, getAllProvider } = props;\n  const [group1, setGroup1] = useState([]);\n  const [group2, setGroup2] = useState([]);\n  const [group3, setGroup3] = useState([]);\n  const [group4, setGroup4] = useState([]);\n  const [group5, setGroup5] = useState([]);\n  const [curLimit, setCurLimit] = useState(30);\n  const [curOffset, setCurOffset] = useState(1);\n  const [allProvider, setAllProvider] = useState([]);\n  useEffect(() => {\n    async function fetchingDataAPI(la, lo) {\n      const result1 = await getProviderGroup(\n        1,\n        glimit,\n        goffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      console.log(result1);\n      setGroup1(result1);\n      const result2 = await getProviderGroup(\n        5,\n        glimit,\n        goffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      setGroup2(result2);\n      const result3 = await getProviderGroup(\n        6,\n        glimit,\n        goffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      setGroup3(result3);\n      const result4 = await getProviderGroup(\n        7,\n        glimit,\n        goffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      setGroup4(result4);\n      const all = await getAllProvider(\n        curLimit,\n        curOffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      setAllProvider(all);\n      const result5 = await getProviderGroup(\n        5,\n        2,\n        goffset,\n        la,\n        lo,\n        user.profile?.user_id\n      );\n      setGroup5(result5);\n    }\n    if (user.currentAddress.loading)\n      fetchingDataAPI(\n        user.currentAddress.latitude,\n        user.currentAddress.longitude\n      );\n  }, [user.currentAddress.loading]);\n\n  const fetchMoreProvider = async () => {\n    if (user.currentAddress.loading) {\n      const result = await getAllProvider(\n        curLimit,\n        curOffset,\n        user.currentAddress.latitude,\n        user.currentAddress.longitude,\n        user.profile.user_id\n      );\n      const newList = allProvider.concat(result);\n      setAllProvider(newList);\n    }\n  };\n  return (\n    <Fragment>\n      <div className=\"home-content-provider\">\n        {props.currentSortMode == 1 && (\n          <Fragment>\n            <ProviderGroup\n              groupTitle={providerGroup[0].group_title}\n              groupDescription={providerGroup[0].group_description}\n              providerList={group1}\n              setProviderList={setGroup1}\n            />\n            <ProviderGroup\n              groupTitle={providerGroup[1].group_title}\n              groupDescription={providerGroup[1].group_description}\n              providerList={group2}\n              setProviderList={setGroup2}\n            />{\" \"}\n            <PickupProvider\n              providerList={group5}\n              setProviderList={setGroup5}\n              providerNearby={allProvider}\n              currentLatitude={\n                user.currentAddress.latitude || 10.773031146281017\n              }\n              currentLongitude={\n                user.currentAddress.longitude || 106.7060806090524\n              }\n            />\n            <CategoryGroup groupTitle={\"Explore by category\"} />\n            <ProviderGroup\n              groupTitle={providerGroup[2].group_title}\n              groupDescription={providerGroup[2].group_description}\n              providerList={group3}\n              setProviderList={setGroup3}\n            />\n            <ProviderGroup\n              groupTitle={providerGroup[3].group_title}\n              groupDescription={providerGroup[3].group_description}\n              providerList={group4}\n              setProviderList={setGroup4}\n            />\n          </Fragment>\n        )}\n        <Fragment>\n          <ProviderShowAll providerList={allProvider} />\n          <ButtonGroup float=\"center\" mgTop={10} mgBottom={30}>\n            <Button\n              onClick={() => {\n                setCurOffset((prev) => prev + 1);\n                fetchMoreProvider();\n              }}\n              color={\"white\"}\n              bgColor={\"black\"}\n              justifyContent={\"center\"}\n              gap={\"10px\"}\n              width={130}\n              fontSize={14}\n              height={40}\n              label={\"Show More\"}\n            />\n          </ButtonGroup>\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n}\n\nHomeBodyContent.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getProviderGroup: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getProviderGroup, getAllProvider })(\n    HomeBodyContent\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBanner/HomeBanner.js",["1083","1084","1085"],"import \"./HomeBanner.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faGlasses } from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport { scroller } from \"react-scroll\";\nfunction HomeBanner(props) {\n  const homeBanner = [\n    {\n      banner_id: 1,\n      banner_title: \"Discover local favorites in your area\",\n      banner_redirect_text: \"Tap to explore\",\n      banner_background:\n        \"https://cn-geo1.uber.com/static/mobile-content/eats/billboard-split-gratis.png\",\n      banner_text_color: \"black\",\n      banner_link: \"\",\n    },\n    {\n      banner_id: 2,\n      banner_title: \"30 days left of $0 Delivery Feesa\",\n      banner_content: \"Enjoy $0 Delivery Fee on orders over $15 until Nov 10\",\n      banner_redirect_text: \"See detail\",\n      banner_background:\n        \"https://d1g1f25tn8m2e6.cloudfront.net/6066cf54-f82f-4a8d-a5b9-f1d39d98757e.jpg\",\n      banner_text_color: \"white\",\n      banner_link: \"\",\n    },\n  ];\n  const scrollToSection = (sectionName) => {\n    scroller.scrollTo(sectionName, {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\",\n      offset: -100,\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"homebody-container\">\n        <div className=\"homebody-wrapper\">\n          <div className=\"hb-title\">\n            <span className=\"hb-main-text\">Crave it? Get it.</span>\n            <span className=\"hb-sub-text\">\n              Search for a favorite restaurant, cuisine, or dish.\n            </span>\n            <Button\n              buttonType=\"primary\"\n              width={130}\n              height={36}\n              radius={\"0px\"}\n              label={\"Explore now\"}\n              surfix={\n                <FontAwesomeIcon\n                  icon={faChevronRight}\n                  style={{ color: \"white\" }}\n                />\n              }\n              onClick={() => {\n                scrollToSection(`provider-on-map`);\n              }}\n            />\n            <span className=\"hb-sub-text-italic\">\n              You got 3 discounts at the moments,{\" \"}\n              <strong style={{ color: \"rgb(148, 0, 0)\", cursor: \"pointer\" }}>\n                check now\n              </strong>\n              .\n            </span>\n          </div>\n          <div className=\"hb-banner-container\">\n            <div className=\"hb-banner-wrapper\">\n              {homeBanner.map((banner) => (\n                <div\n                  className=\"hb-banner-item\"\n                  key={banner.banner_id}\n                  style={{\n                    backgroundImage: `url(${banner.banner_background})`,\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"cover\",\n                  }}\n                >\n                  <span\n                    className=\"hb-banner-item-banner-title\"\n                    style={{ color: `${banner.banner_text_color}` }}\n                  >\n                    {banner.banner_title}{\" \"}\n                  </span>\n                  {banner.banner_content && (\n                    <span className=\"hb-banner-item-banner-content\">\n                      {banner.banner_content}\n                    </span>\n                  )}\n                  <div className=\"hb-banner-item-redirect-text\">\n                    {banner.banner_redirect_text}\n                    <FontAwesomeIcon\n                      className=\"banner-redirect-icon\"\n                      icon={faChevronRight}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default HomeBanner;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeHeader/HomeHeader.js",["1086","1087"],"import \"./HomeHeader.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\n\nfunction HomeHeader(props) {\n  const homeCategory = [\n    {\n      category_id: 1,\n      category_name: \"Deals\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/deals.png\",\n    },\n    {\n      category_id: 2,\n      category_name: \"Alcohol\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/alcohol.png\",\n    },\n    {\n      category_id: 3,\n      category_name: \"Specialty Foods\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/specialty_foods.jpg\",\n    },\n    {\n      category_id: 4,\n      category_name: \"Japanese\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/cuisines/japanese.png\",\n    },\n    {\n      category_id: 5,\n      category_name: \"Sushi\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/cuisines/sushi.png\",\n    },\n    {\n      category_id: 6,\n      category_name: \"Burgers\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/cuisines/burger.png\",\n    },\n    {\n      category_id: 7,\n      category_name: \"Deals\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/deals.png\",\n    },\n    {\n      category_id: 8,\n      category_name: \"Alcohol\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/alcohol.png\",\n    },\n    {\n      category_id: 9,\n      category_name: \"Specialty Foods\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/specialty_foods.jpg\",\n    },\n    {\n      category_id: 10,\n      category_name: \"American\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/cuisines/american.png\",\n    },\n    {\n      category_id: 11,\n      category_name: \"Sandwich\",\n      category_photo:\n        \"https://d4p17acsd5wyj.cloudfront.net/shortcuts/cuisines/sandwich.png\",\n    },\n    {\n      category_id: 12,\n      category_name: \"Healthy\",\n      category_photo:\n        \"https://duyt4h9nfnj50.cloudfront.net/new_search_home_eats_icon/Healthy_BrowseHome@3x.png\",\n    },\n  ];\n  return (\n    <Fragment>\n      <div className=\"homeheader-container\">\n        <div className=\"homeheader-category-wrapper\">\n          {homeCategory.map((category) => (\n            <div\n              className=\"homeheader-category-item\"\n              key={category.category_id}\n            >\n              <img\n                className=\"hh-item-photo\"\n                src={category.category_photo}\n                alt={\"category_image\"}\n              />\n              <span className=\"hh-item-text\">{category.category_name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default HomeHeader;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/MainContent.js",["1088","1089","1090","1091"],"import \"./MainContent.css\";\nimport { Fragment } from \"react\";\nimport CategoryBanner from \"./CategoryBanner\";\nimport CategoryList from \"./CategoryList\";\nimport Banner1 from \"../../../assets/CategoryBanner/Picture1.jpg\";\nimport Banner2 from \"../../../assets/CategoryBanner/Picture2.jpg\";\nimport Banner3 from \"../../../assets/CategoryBanner/Picture3.jpg\";\nimport Banner4 from \"../../../assets/CategoryBanner/Picture4.jpg\";\nimport Banner5 from \"../../../assets/CategoryBanner/Picture5.jpg\";\nimport { Carousel } from \"react-carousel-minimal\";\nimport Discount1 from \"../../../assets/DiscountBanner/Picture1.jpg\";\nimport Discount2 from \"../../../assets/DiscountBanner/Picture2.jpg\";\nimport ProviderList from \"./ProviderList/ProviderList\";\nfunction MainContent(props) {\n  return 1 !== 1 ? (\n    <></>\n  ) : (\n    <Fragment>\n      <div className=\"main-content-wrapper\">\n        <div className=\"category-banner-wrapper\">\n          <CategoryList />\n          <div className=\"category-carousel\">\n            <div className=\"discount-banner-wrapper\">\n              <div className=\"first-discount-banner\">\n                <img src={Discount1} />\n              </div>\n              <div className=\"second-discount-banner\">\n                <img src={Discount2} />\n              </div>\n            </div>\n            <CategoryBanner\n              cat_banner={[Banner1, Banner2, Banner3, Banner4, Banner5]}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"main-content-wrapper\">\n        <span className=\"main-head-title\">Most Popular</span>\n        <div className=\"most-popular-wrapper\">\n          <ProviderList />\n        </div>\n      </div>\n\n      <div className=\"main-content-wrapper\">\n        <span className=\"main-head-title\">Weekly Best-seller</span>\n        <div className=\"most-popular-wrapper\">\n          <ProviderList />\n        </div>\n      </div>\n\n      <div className=\"main-content-wrapper\">\n        <span className=\"main-head-title\">Recommendation For You</span>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default MainContent;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Modal/Modal.js",["1092","1093","1094","1095","1096","1097"],"import ReactDOM from \"react-dom\";\nimport { useState, useEffect, useRef, Fragment } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCartArrowDown,\n  faCartPlus,\n  faTimes,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport \"./Modal.scss\";\n\nconst portalRoot = document.getElementById(\"portal-root\");\n\nfunction useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n\nconst Modal = ({ openModal, closeModal, ...rest }) => {\n  const ref = useRef(null);\n  const disableNextClick = () => {\n    const listener = (evt) => {\n      evt.stopPropagation();\n      document.removeEventListener(\"click\", listener, true);\n    };\n    document.addEventListener(\"click\", listener, true);\n  };\n  useOnClickOutside(ref, () => {\n    closeModal();\n  });\n\n  const ModalContainerStyle = {\n    width: rest.widthPX ? `unset` : `${rest.width}%`,\n    widthPX: `${rest.width}px`,\n    height: rest.heightAuto ? \"auto\" : `${rest.height}px`,\n    marginLeft: rest.widthPX ? `-${rest.widthPX / 2}px` : `-${rest.width / 2}%`,\n    marginTop: `-${rest.height / 2 - 20}px`,\n  };\n  const ModalInnerStyle = {\n    padding: rest.padding || \"2% 2%\",\n  };\n  const ModalOutterBackgroundStyle = {\n    marginTop: rest.transparentUnderNavbar ? 90 : 0,\n    background: `rgba(0, 0, 0, ${rest.transparent || 0.8})`,\n    top: rest.distanceFromTop,\n  };\n  const HeaderStyle = {\n    backgroundColor: rest.headerColor ? rest.headerColor : \"\",\n  };\n  const CartContainerStyle = {\n    opacity: rest.opacity || \"1\",\n    boxShadow: \"rgba(0, 0, 0, 0.16) 0px 1px 6px\",\n    width: `${rest.cartWidth}px`,\n    height: rest.cartHeightAuto ? \"auto\" : `${rest.cartHeight}px`,\n    top: `${rest.cartPositionTop}px`,\n    left: \"unset\",\n    right: `${\n      rest.cartPositionRight +\n      window.innerWidth -\n      document.documentElement.clientWidth\n    }px`,\n    overflowY: \"scroll\",\n  };\n  if (!openModal) return null;\n  return !rest.useCartUI ? (\n    <div\n      className=\"modal-darken-transparent-background\"\n      style={ModalOutterBackgroundStyle}\n    >\n      <div className=\"modal-container\" style={ModalContainerStyle} ref={ref}>\n        <div className=\"modal-header-row\" style={HeaderStyle}>\n          <div className=\"modal-header-title\">{rest.title}</div>\n          <FontAwesomeIcon\n            className=\"modal-header-close-icon\"\n            onClick={closeModal}\n            icon={faTimes}\n          />\n        </div>\n        <div className=\"modal-content\" style={ModalInnerStyle}>\n          {rest.children}\n        </div>\n      </div>\n    </div>\n  ) : (\n    <Fragment>\n      <div\n        className=\"modal-cart modal-darken-transparent-background\"\n        style={ModalOutterBackgroundStyle}\n      >\n        <div className=\"modal-container\" style={CartContainerStyle} ref={ref}>\n          {!rest.hideCloseButton && (\n            <Fragment>\n              <div className=\"modal-cart-header-wrapper\">\n                <FontAwesomeIcon\n                  className=\"modal-cart-header-icon\"\n                  onClick={closeModal}\n                  icon={faTimes}\n                />\n                {rest.showCartTitle && (\n                  <div className=\"modal-cart-header-title\">\n                    <span>Cart items • {rest.cartQuantity || 0} item</span>\n                  </div>\n                )}\n              </div>\n            </Fragment>\n          )}\n          <div className=\"modal-content\" style={ModalInnerStyle}>\n            {rest.children}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Stepper/Stepper.js",["1098"],"import { Link, useLocation } from \"react-router-dom\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport \"./Stepper.scss\";\nimport StepperArrow from \"assets/stepper-arrow.png\";\nconst Stepper = ({ steps }) => {\n  const location = useLocation();\n  const [stepNumber, setStepNumber] = useState(0);\n  useEffect(() => {\n    switch (location.pathname.split(\"/\")[3]) {\n      case \"service\":\n        setStepNumber(1);\n        break;\n      case \"representative\":\n        setStepNumber(2);\n        break;\n      case \"business-unit\":\n        setStepNumber(3);\n        break;\n      case \"product-detail\":\n        setStepNumber(4);\n        break;\n      case \"bank\":\n        setStepNumber(5);\n        break;\n      default:\n        setStepNumber(1);\n    }\n    console.log(location);\n  }, [location]);\n  return (\n    <div className=\"stepper-container\">\n      {steps.map((step, index) => (\n        <Fragment key={index}>\n          <div className=\"stepper-wrapper\">\n            <div className={index < stepNumber ? \"active\" : \"default\"}>\n              {!step.number ? index + 1 : step.number}\n            </div>\n            <span className=\"stepper-description\">{step.description}</span>\n          </div>\n          {index !== steps.length - 1 ? (\n            <img\n              className=\"stepper-arrow\"\n              src={StepperArrow}\n              height={2}\n              width={50}\n              alt=\"arrow\"\n            />\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Stepper;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/OrderAction/OrderAction.js",["1099"],"import axios from \"axios\";\n\nimport { CREATE_ORDER, CLEAR_CART, SET_READ_STATUS } from \"store/actions/types\";\n\nexport const addNotificationAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/tastie/order/add-notification\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data?.status) {\n      return res.data.notification_id;\n    }\n    return -1;\n  } catch (err) {\n    console.log(err);\n    return -1;\n  }\n};\n\nexport const updateReadStatusAPI = (nid) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/update-status-notification/${nid}`;\n    const res = await axios.put(endpoint);\n    if (res.data.status) {\n      dispatch({\n        type: SET_READ_STATUS,\n        payload: { notification_id: nid },\n      });\n      return true;\n    }\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\n//Get order history\nexport const getOrderHistoryAPI = (id) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/get-order-history/${id}`;\n    const res = await axios.get(endpoint);\n    if (res.data) return res.data.response.list_order_history;\n    return {};\n  } catch (err) {\n    console.log(err);\n    return {};\n  }\n};\n//Add product\nexport const submitOrderCheckoutAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  data.total = data.subtotal + data.tips;\n  const body = JSON.stringify(data);\n  var orderCode = \"\";\n  try {\n    const endpoint = \"/v1/api/tastie/order/submit-order-info-delivery\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data?.status) {\n      return res.data.order_code;\n    }\n    return orderCode;\n  } catch (err) {\n    console.log(err);\n    return orderCode;\n  }\n};\n\nexport const submitOrderPickupCheckoutAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  data.total = data.subtotal + data.tips;\n  data.delivery_fee = 0;\n  const body = JSON.stringify(data);\n  var orderCode = \"\";\n  try {\n    console.log(body);\n    const endpoint = \"/v1/api/tastie/order/submit-order-info-pickup\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data?.status) {\n      return res.data.order_code;\n    }\n    return orderCode;\n  } catch (err) {\n    console.log(err);\n    return orderCode;\n  }\n};\n\nexport const submitOrderItemAPI = (id, code) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    customer_id: id,\n    order_code: code,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/order/submit-order-items\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) {\n      dispatch({\n        type: CLEAR_CART,\n        payload: {\n          userCart: {\n            provider_id: -1,\n            user_id: -1,\n            provider_name: -1,\n            date: \"\",\n            status: -1,\n            cart: [],\n          },\n        },\n      });\n    }\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const getPromotionAmountAPI = (code, subtotal) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ code: code, sub_total: subtotal });\n  try {\n    const endpoint = \"/v1/api/tastie/order/get-promos-money\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) {\n      return res.data.promos_value;\n    }\n    return 0;\n  } catch (err) {\n    return 0;\n  }\n};\nexport const getOrderPromotionDetailAPI = (code) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/get-promos-detail/${code}`;\n    const res = await axios.get(endpoint);\n    if (res.data) {\n      return res.data.promotion_detail;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getOrderPromotionAPI = (id) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/checkout/get-all-promos/${id}`;\n    const res = await axios.get(endpoint);\n    if (res.data) {\n      return res.data.response;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAllProductFromOrderAPI = (code) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/get-all-products-from-order/${code}`;\n    const res = await axios.get(endpoint);\n    if (res.data) return res.data.response;\n    return {};\n  } catch (err) {\n    return {};\n  }\n};\n\nexport const getOrderStatusAPI = (code) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/get-order-summary/${code}`;\n    const res = await axios.get(endpoint);\n    if (res.data) return res.data.response;\n    return {};\n  } catch (err) {\n    return {};\n  }\n};\n\nexport const ratingOrderAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/tastie/order/add-order-review\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) {\n      return true;\n    }\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\nexport const ratingShipperAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/tastie/order/add-shipper-review\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n    if (res.data.status) {\n      return true;\n    }\n    return false;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const getProviderScheduleTime = (id) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/checkout/get_schedule_time/${id}`;\n    const res = await axios.get(endpoint);\n    if (res.data) return res.data.response;\n    return {};\n  } catch (err) {\n    return {};\n  }\n};\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/SearchResult/SearchContent/SearchContent.js",["1100","1101","1102","1103","1104","1105"],"import \"./SearchContent.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nimport {\n  getProviderGroup,\n  getAllProvider,\n} from \"store/actions/HomeAction/HomeAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProviderGroup from \"components/HomePage/HomeBody/ProviderGroup\";\nimport ProviderShowAll from \"components/HomePage/HomeBody/ProviderShowAll\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { searchAPI } from \"store/actions/ProductAction/ProductAction\";\nconst long = 106.68250448518744;\nconst lat = 10.763019107348029;\n\nfunction SearchContent(props) {\n  const { setTotalResult, searchAPI, query, type } = props;\n  const [allProvider, setAllProvider] = useState([]);\n  useEffect(() => {\n    async function fetchingSearchAPI() {\n      var searchResult = await searchAPI(\n        props.user.profile.user_id || -1,\n        query,\n        type,\n        long,\n        lat,\n        props.categoryId || \"\",\n        props.categoryType || \"\"\n      );\n      if (searchResult) {\n        setAllProvider(searchResult.items);\n        setTotalResult(searchResult.total_count);\n      }\n    }\n    fetchingSearchAPI();\n  }, [query, type]);\n\n  return (\n    <Fragment>\n      <div className=\"home-content-provider\">\n        <ProviderShowAll providerList={allProvider} />\n      </div>\n    </Fragment>\n  );\n}\n\nSearchContent.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  searchAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { searchAPI })(SearchContent)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/CartAction/CartAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/OrderDetail.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport PDProductDetail from \"components/ProviderDetail/PDBody/PDProductDetail/PDProductDetail\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport { setCurrentLocation } from \"store/actions/UserAction/UserAction\";\nimport {\n  faBook,\n  faCircle,\n  faCreditCard,\n  faMoneyBillAlt,\n  faPencilAlt,\n  faPhone,\n  faSearch,\n  faTimes,\n  faUtensils,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./OrderDetail.scss\";\nimport \"components/OrderCheckout/OrderCheckout.scss\";\nimport \"style/Common.scss\";\nimport PaymentMomo from \"assets/pm_momo.png\";\nimport PaymentZalo from \"assets/pm_zalopay.png\";\nimport {\n  getAddressBookAPI,\n  getDeliveryFee,\n} from \"store/actions/UserAction/UserAction\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport { getOrderPromotionAPI } from \"store/actions/OrderAction/OrderAction\";\nimport SwitchSelector from \"react-switch-selector\";\nimport ScheduleOrder from \"./ScheduleOrder\";\nimport axios from \"axios\";\nimport ApplyPromotion from \"./ApplyPromotion\";\n\nconst optionSwitcher = [\n  {\n    label: \"Delivery\",\n    value: 0,\n    selectedBackgroundColor: \"#890009\",\n  },\n  {\n    label: \"Pickup\",\n    value: 1,\n    selectedBackgroundColor: \"#890009\",\n  },\n];\n\nfunction OrderDetail(props) {\n  const {\n    arrivalCoordinates,\n    setArrivalCoordinate,\n    departureCoordinates,\n    setDepartureCoordinates,\n    deliveryOption,\n    setDeliveryOption,\n  } = props;\n  const initialSelectedIndex = optionSwitcher.findIndex(\n    ({ value }) => value === 0\n  );\n  const [showPromotion, setShowPromotion] = useState(false);\n  const { user, getAddressBookAPI, getDeliveryFee, setOrderForm } = props;\n  const [addressBook, setAddressBook] = useState([]);\n  const [currentPhone, setCurrentPhone] = useState(\"\");\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(1);\n  const [orderScheduleTime, setOrderScheduleTime] = useState(\"\");\n  const [enableAddressEdit, setEnableAddressEdit] = useState(false);\n  const [showProductDetail, setShowProductDetail] = useState(false);\n  const [showScheduleTable, setShowScheduleTable] = useState(false);\n  const [showRemoveCartDialog, setShowRemoveCartDialog] = useState(false);\n  const [selectedProductDetail, setSelectedProductDetail] = useState();\n  const [promotion, setPromotion] = useState({});\n  const [location, setLocation] = useState([\n    106.68057155417674, 10.768685473523648,\n  ]);\n  useEffect(() => {\n    async function fetchPromotion(id) {\n      const result = await props.getOrderPromotionAPI(id);\n      setPromotion(result);\n    }\n    if (props.user.userCart.provider_id !== -1)\n      fetchPromotion(props.user.userCart.provider_id);\n  }, [props.user.userCart.provider_id]);\n\n  useEffect(() => {\n    setOrderForm((prevState) => ({\n      ...prevState,\n      schedule_time: orderScheduleTime,\n    }));\n  }, [orderScheduleTime, setOrderForm]);\n\n  useEffect(() => {\n    setOrderForm((prevState) => ({\n      ...prevState,\n      payment_method: selectedPaymentMethod,\n    }));\n  }, [selectedPaymentMethod, setOrderForm]);\n\n  const selectedPMStyle = {\n    border: \"1px solid #d6d6d6\",\n    backgroundColor: \"#f5f5f5\",\n  };\n\n  useEffect(() => {\n    setLocation([user.currentAddress.longitude, user.currentAddress.latitude]);\n    setDeliveryAddress(user.currentAddress.address);\n    setOrderForm((prevState) => ({\n      ...prevState,\n      delivery_address: user.currentAddress.address,\n    }));\n  }, [user.currentAddress]);\n\n  useEffect(() => {\n    async function fetchingAddressBook() {\n      var addressBook = await getAddressBookAPI(props.match.params.uid);\n      setAddressBook(addressBook.address);\n      setCurrentPhone(addressBook.phone);\n      setOrderForm((prevState) => ({\n        ...prevState,\n        customer_phone: addressBook.phone,\n        delivery_mode: deliveryOption === 0 ? 1 : 2,\n      }));\n    }\n    fetchingAddressBook();\n  }, []);\n\n  useEffect(() => {\n    async function fetchDeliveryFee() {\n      let latitudeDF = location[1];\n      let longitudeDF = location[0];\n      let providerIdDF = user.userCart?.provider_id;\n      var deliveryFee = await getDeliveryFee(\n        providerIdDF,\n        longitudeDF,\n        latitudeDF\n      );\n      setOrderForm((prevState) => ({\n        ...prevState,\n        delivery_fee: deliveryFee,\n      }));\n      props.setDeliveryFee(deliveryFee);\n    }\n    if (user.userCart.provider_id !== -1) fetchDeliveryFee();\n  }, [location, user.userCart.provider_id]);\n\n  const onChange = (newValue) => {\n    setDeliveryOption(parseInt(newValue));\n  }; //map\n  const [routes, setRoutes] = useState([]);\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"300px\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 14,\n  });\n  const dataOne = {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"LineString\",\n      coordinates: routes,\n    },\n  };\n  useEffect(() => {\n    async function fetchingRoutesAndDirections() {\n      const endpoint = `https://api.mapbox.com/directions/v5/mapbox/driving/${location[0]},${location[1]};${arrivalCoordinates[0]},${arrivalCoordinates[1]}?geometries=geojson&access_token=pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g`;\n      const res = await axios.get(endpoint);\n      const points = res.data.routes[0].geometry.coordinates;\n      setViewport({\n        ...viewport,\n        latitude: (location[1] + arrivalCoordinates[1]) / 2,\n        longitude: (location[0] + arrivalCoordinates[0]) / 2,\n      });\n      points.unshift(location);\n      points.push(arrivalCoordinates);\n      setRoutes(points);\n    }\n    fetchingRoutesAndDirections();\n  }, [arrivalCoordinates, location]);\n  return (\n    <Fragment>\n      <div className=\"oc-order-detail\">\n        <div className=\"oc-od-container\">\n          <span\n            className=\"oc-od-main-text-head\"\n            onClick={() =>\n              props.history.push(\n                `/provider-detail/${user.userCart?.provider_id}`\n              )\n            }\n          >\n            {user.userCart?.provider_name !== -1 && user.userCart.provider_name}\n          </span>\n          <div className=\"oc-od-switcher-wrapper\">\n            <SwitchSelector\n              onChange={onChange}\n              options={optionSwitcher}\n              initialSelectedIndex={initialSelectedIndex}\n              backgroundColor={\"#E6E6E6\"}\n              fontColor={\"#2C2C2C\"}\n              selectedFontColor={\"#E6E6E6\"}\n              fontSize={13}\n              wrapperBorderRadius={0}\n              optionBorderRadius={0}\n              width={80}\n            />\n          </div>\n          {deliveryOption === 1 && (\n            <ReactMapGl\n              {...viewport}\n              mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n              onViewportChange={(viewport) => setViewport(viewport)}\n              mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n            >\n              <Source id=\"polylineLayer\" type=\"geojson\" data={dataOne}>\n                <Layer\n                  id=\"lineLayer\"\n                  type=\"line\"\n                  source=\"my-data\"\n                  layout={{\n                    \"line-join\": \"round\",\n                    \"line-cap\": \"round\",\n                  }}\n                  paint={{\n                    \"line-color\": \"rgba(3, 170, 238, 0.5)\",\n                    \"line-width\": 10,\n                  }}\n                />\n              </Source>\n              <Marker\n                latitude={location[1]}\n                longitude={location[0]}\n                offsetLeft={-20}\n                offsetTop={-30}\n              >\n                <FontAwesomeIcon\n                  className=\"provider-marker\"\n                  icon={faCircle}\n                  style={{\n                    background: \"black\",\n                    color: \"white\",\n                    padding: \" 8px 8px\",\n                  }}\n                />\n              </Marker>\n              <Marker\n                alt=\"marker\"\n                latitude={arrivalCoordinates[1]}\n                longitude={arrivalCoordinates[0]}\n                offsetLeft={-20}\n                offsetTop={-30}\n              >\n                <FontAwesomeIcon\n                  className=\"provider-marker\"\n                  icon={faUtensils}\n                  style={{\n                    background: \"black\",\n                    color: \"white\",\n                    padding: \" 7px 8pxư\",\n                  }}\n                />\n              </Marker>\n            </ReactMapGl>\n          )}\n          {deliveryOption === 0 && (\n            <Fragment>\n              <div className=\"oc-od-address-option\">\n                <FontAwesomeIcon className=\"oc-od-small-icon\" icon={faPhone} />\n                <div className=\"oc-od-address-text\" style={{ fontWeight: 700 }}>\n                  Phone Number :\n                </div>\n                <div className=\"oc-od-address-text\">{currentPhone}</div>\n              </div>\n              <div className=\"oc-od-address-option\">\n                <FontAwesomeIcon\n                  className=\"oc-od-small-icon\"\n                  icon={faMapMarkedAlt}\n                />\n                <div className=\"oc-od-address-text\" style={{ fontWeight: 700 }}>\n                  Delivery To :\n                </div>\n                {!enableAddressEdit ? (\n                  <div className=\"oc-od-address-text\">{deliveryAddress}</div>\n                ) : (\n                  <input\n                    className=\"oc-od-edit-address\"\n                    style={{ width: `${deliveryAddress?.length * 7}px` }}\n                    value={deliveryAddress}\n                    onChange={(e) => setDeliveryAddress(e.target.value)}\n                  />\n                )}\n                {enableAddressEdit && (\n                  <div\n                    className=\"oc-od-btn-cancel-address\"\n                    onClick={() => {\n                      setEnableAddressEdit((prev) => !prev);\n                      setDeliveryAddress(addressBook[0]?.address);\n                      setOrderForm((prevState) => ({\n                        ...prevState,\n                        delivery_address: deliveryAddress,\n                      }));\n                    }}\n                  >\n                    Cancel\n                  </div>\n                )}\n                {!enableAddressEdit ? (\n                  <div\n                    className=\"oc-od-btn-edit\"\n                    onClick={() => setEnableAddressEdit((prev) => !prev)}\n                  >\n                    <FontAwesomeIcon icon={faPencilAlt} />\n                    <span className=\"oc-od-edit-text-underline\">Edit</span>\n                  </div>\n                ) : (\n                  <div\n                    className=\"oc-od-btn-submit-address\"\n                    onClick={() => {\n                      setEnableAddressEdit((prev) => !prev);\n                      setOrderForm((prevState) => ({\n                        ...prevState,\n                        delivery_address: deliveryAddress,\n                      }));\n                      props.setCurrentLocation(\n                        location[1],\n                        location[0],\n                        deliveryAddress\n                      );\n                    }}\n                  >\n                    Confirm\n                  </div>\n                )}\n              </div>\n              {enableAddressEdit && (\n                <div className=\"oc-od-address-book\">\n                  <span className=\"oc-od-ab-text\">\n                    <FontAwesomeIcon className=\"oc-od-ab-icon\" icon={faBook} />\n                    Recent address:\n                  </span>\n                  <label className=\"hb-sb-type-wrapper radio\">\n                    <input\n                      className=\"oc-od-ab-selection\"\n                      type=\"radio\"\n                      name=\"addressBook\"\n                      checked={user.currentAddress?.address === deliveryAddress}\n                      value={user.currentAddress?.address}\n                      onChange={() => {\n                        setDeliveryAddress(user.currentAddress?.address);\n                        setLocation([\n                          parseFloat(user.currentAddress?.longitude),\n                          parseFloat(user.currentAddress?.latitude),\n                        ]);\n                      }}\n                    />\n                    <span className=\"hb-sb-label-radio option-box-radio-label\">\n                      {user.currentAddress?.address}\n                    </span>\n                  </label>\n                  {user.location?.map((a, index) => (\n                    <label className=\"hb-sb-type-wrapper radio\" key={index}>\n                      <input\n                        className=\"oc-od-ab-selection\"\n                        type=\"radio\"\n                        name=\"addressBook\"\n                        value={a.address}\n                        checked={a.address === deliveryAddress}\n                        onChange={() => {\n                          setDeliveryAddress(a.address);\n                          setLocation([\n                            parseFloat(a.longitude),\n                            parseFloat(a.latitude),\n                          ]);\n                        }}\n                      />\n                      <span className=\"hb-sb-label-radio option-box-radio-label\">\n                        {a.address}\n                      </span>\n                    </label>\n                  ))}\n                </div>\n              )}\n            </Fragment>\n          )}\n\n          <div className=\"oc-od-address-option\">\n            <div className=\"oc-od-address-text\" style={{ fontWeight: 700 }}>\n              Delivery method:\n            </div>\n          </div>\n          <div className=\"oc-od-radio\">\n            <label className=\"hb-sb-type-wrapper radio\">\n              <input\n                defaultChecked\n                type=\"radio\"\n                name=\"deliveryMethod\"\n                value={1}\n                onChange={(e) => {\n                  setOrderScheduleTime(\"\");\n                  props.setOrderForm((prevState) => ({\n                    ...prevState,\n                    delivery_method: parseInt(e.target.value),\n                  }));\n                }}\n              />\n              <span className=\"hb-sb-label-radio option-box-radio-label\">\n                Standard\n              </span>\n            </label>\n            <label className=\"hb-sb-type-wrapper radio\">\n              <input\n                type=\"radio\"\n                name=\"deliveryMethod\"\n                value={2}\n                onChange={(e) => {\n                  setShowScheduleTable((prev) => !prev);\n                  props.setOrderForm((prevState) => ({\n                    ...prevState,\n                    delivery_method: parseInt(e.target.value),\n                  }));\n                }}\n              />\n              <span className=\"hb-sb-label-radio option-box-radio-label\">\n                Schedule\n              </span>\n              {orderScheduleTime && (\n                <span className=\"oc-od-schedule-time-text\">\n                  {`Your order will be submitted at ${orderScheduleTime}`}\n                </span>\n              )}\n            </label>\n          </div>\n          <div className=\"oc-od-address-option\">\n            <div className=\"oc-od-address-text\" style={{ fontWeight: 700 }}>\n              Payment method:\n            </div>\n          </div>\n          <div className=\"oc-od-payment-method-container\">\n            <div\n              className=\"oc-od-pm-item\"\n              onClick={() => setSelectedPaymentMethod(1)}\n              style={selectedPaymentMethod === 1 ? selectedPMStyle : {}}\n            >\n              <div className=\"oc-od-pm-image-wrapper\">\n                <FontAwesomeIcon\n                  icon={faMoneyBillAlt}\n                  className=\"oc-od-pm-icon\"\n                />\n              </div>\n              <span className=\"oc-od-pm-label-radio\">By Cash</span>\n            </div>\n            <div\n              className=\"oc-od-pm-item\"\n              onClick={() => setSelectedPaymentMethod(2)}\n              style={selectedPaymentMethod === 2 ? selectedPMStyle : {}}\n            >\n              <div className=\"oc-od-pm-image-wrapper\">\n                <img\n                  src={PaymentMomo}\n                  className=\"oc-od-pm-img\"\n                  alt=\"payment_image\"\n                />\n              </div>\n              <span className=\"oc-od-pm-label-radio\">Momo</span>\n            </div>\n            <div\n              className=\"oc-od-pm-item\"\n              onClick={() => setSelectedPaymentMethod(3)}\n              style={selectedPaymentMethod === 3 ? selectedPMStyle : {}}\n            >\n              <div className=\"oc-od-pm-image-wrapper\">\n                <img\n                  src={PaymentZalo}\n                  className=\"oc-od-pm-img\"\n                  alt=\"payment_image\"\n                />\n              </div>\n              <span className=\"oc-od-pm-label-radio\">Zalo Pay</span>\n            </div>\n            <div\n              className=\"oc-od-pm-item\"\n              onClick={() => setSelectedPaymentMethod(4)}\n              style={selectedPaymentMethod === 4 ? selectedPMStyle : {}}\n            >\n              <div className=\"oc-od-pm-image-wrapper\">\n                <FontAwesomeIcon\n                  icon={faCreditCard}\n                  className=\"oc-od-pm-icon-2\"\n                />\n              </div>\n              <span className=\"oc-od-pm-label-radio\">Credit/Debit card</span>\n            </div>\n          </div>\n\n          <div className=\"oc-od-address-option\">\n            <div className=\"oc-od-address-text\" style={{ fontWeight: 700 }}>\n              Add promotion code:\n            </div>\n          </div>\n          <div className=\"oc-od-promotion-wrapper\">\n            <div className=\"oc-od-promotion-input-wrapper\">\n              <div\n                className=\"oc-od-popup-button\"\n                style={{ fontSize: 13, width: 180, gap: 10 }}\n                onClick={() => {\n                  promotion && setShowPromotion(true);\n                }}\n              >\n                <FontAwesomeIcon icon={faSearch} />\n                <span>Apply Promotion</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"oc-od-items-container\">\n            <div\n              className=\"oc-od-address-option\"\n              style={{\n                fontWeight: 700,\n                fontSize: 14,\n                marginTop: 10,\n              }}\n            >\n              <div className=\"oc-od-address-text\">\n                Cart items{\" \"}\n                {user?.userCart?.cart?.length !== 0 &&\n                  `• ${user.userCart.cart.length} items`}{\" \"}\n                :\n              </div>\n            </div>\n            <div className=\"oc-od-item-wrapper\">\n              {user?.userCart?.cart?.map((order) => (\n                <Fragment key={order.product_id}>\n                  <div\n                    className=\"oc-od-item-row\"\n                    onClick={() => {\n                      setShowProductDetail(true);\n                      setSelectedProductDetail(order);\n                    }}\n                  >\n                    <div className=\"oc-od-item-number\">\n                      {\" \"}\n                      <span className=\"oc-od-item-number-inner\">\n                        {order.quantity}\n                      </span>\n                    </div>\n\n                    <img\n                      className=\"oc-od-item-img\"\n                      style={{ objectFit: \"cover\" }}\n                      src={order.product_image}\n                      alt={\"product_img\"}\n                    />\n                    <div className=\"oc-od-item-main-text\">\n                      <span className=\"oc-od-mt-1\" style={{ fontWeight: 700 }}>\n                        {order.product_name}\n                      </span>\n                      <span className=\"oc-od-mt-2\">\n                        € {order.product_price}\n                      </span>\n                      {order.note && (\n                        <span className=\"oc-od-cart-note\">\n                          Special instruction: {order.note}\n                        </span>\n                      )}\n                      {order?.product_options?.map((option, index) => (\n                        <div className=\"oc-od-mt-ao-wrapper\" key={index}>\n                          <span className=\"oc-od-cart-note\">{`+ ${\n                            option.option_name\n                          } ${\n                            parseInt(option.price) === 0\n                              ? \"(FREE)\"\n                              : `($${option.price})`\n                          }:`}</span>\n                          <span className=\"oc-od-cart-note\">\n                            {` ${option.value} `}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"oc-od-item-sub-text\">\n                      ${\" \"}\n                      {(\n                        parseFloat(order.product_price) *\n                        parseFloat(order.quantity)\n                      ).toFixed(2)}\n                    </div>\n                    <span className=\"cart-surfix-pos-wrapper\">\n                      <FontAwesomeIcon\n                        className=\"cart-close-icon\"\n                        icon={faTimes}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                        }}\n                      />\n                    </span>\n                  </div>\n                </Fragment>\n              ))}\n            </div>\n          </div>\n        </div>\n        <Modal\n          openModal={showProductDetail}\n          closeModal={() => {\n            setShowProductDetail(false);\n          }}\n          title={\"Product Detail (Order Checkout)\"}\n          width={35}\n          height={600}\n          heightAuto={true}\n          padding=\"0% 0%\"\n          hideHeader={true}\n        >\n          <PDProductDetail\n            pushReload={true}\n            buttonTitle={\"Update your cart\"}\n            setShowRemoveCartDialog={setShowRemoveCartDialog}\n            setShowProductDetail={setShowProductDetail}\n            productItem={selectedProductDetail}\n          />\n        </Modal>\n\n        <Modal\n          openModal={showScheduleTable}\n          closeModal={() => {\n            setShowScheduleTable(false);\n          }}\n          title={\"Schedule\"}\n          width={25}\n          height={250}\n          padding=\"0% 0%\"\n          transparent=\"30%\"\n          hideHeader={true}\n        >\n          <ScheduleOrder\n            setOrderScheduleTime={setOrderScheduleTime}\n            closeModal={() => {\n              setShowScheduleTable(false);\n            }}\n          />\n        </Modal>\n\n        <Modal\n          openModal={showPromotion}\n          closeModal={() => {\n            setShowPromotion(false);\n          }}\n          title={\"Promotion\"}\n          width={35}\n          height={260}\n          padding=\"0% 0%\"\n          transparent=\"30%\"\n          hideHeader={true}\n        >\n          <ApplyPromotion\n            promotions={promotion}\n            orderForm={props.orderForm}\n            setOrderForm={props.setOrderForm}\n            closeModal={() => {\n              setShowPromotion(false);\n            }}\n          ></ApplyPromotion>\n        </Modal>\n      </div>\n    </Fragment>\n  );\n}\n\nOrderDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  getAddressBookAPI: PropTypes.func.isRequired,\n  getDeliveryFee: PropTypes.func.isRequired,\n  setCurrentLocation: PropTypes.func.isRequired,\n  getOrderPromotionAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getProductListAPI,\n    getAddressBookAPI,\n    getDeliveryFee,\n    setCurrentLocation,\n    getOrderPromotionAPI,\n  })(OrderDetail)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderReview/OrderReview.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/locations.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SubNavBar.js",["1116","1117"],"import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faChevronUp,\n  faChevronDown,\n  faGlobe,\n  faDollarSign,\n  faQuestionCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport CategoryDetail from \"./CategoryDetail\";\nimport \"./SubNavBar.scss\";\n\nfunction SubNavBar(variant = true) {\n  const [showCategoryLevel2, setShowCategoryLevel2] = useState(false);\n  const [categoryContent, setCategoryContent] = useState({\n    content: \"item\",\n    enable: false,\n  });\n  const [dropdownStatus, setDropdownStatus] = useState(\n    variant ? faChevronUp : faChevronDown\n  );\n\n  const useEffect = () => {\n    setCategoryContent({ ...CategoryDetail, content: { clothes: {} } });\n  };\n  return (\n    <>\n      <div className=\"nav-wrapper\">\n        <div className=\"nav-menu-prefix\">\n          <div\n            className=\"nav-category-main\"\n            onMouseEnter={() => {\n              setDropdownStatus(faChevronUp);\n              setCategoryContent({ ...categoryContent, enable: true });\n            }}\n            onMouseLeave={() => {\n              setDropdownStatus(faChevronDown);\n              setCategoryContent({ ...categoryContent, enable: false });\n              setShowCategoryLevel2(false);\n            }}\n          >\n            <CategoryDetail\n              setShowCategoryLevel2={setShowCategoryLevel2}\n              showCategoryLevel2={showCategoryLevel2}\n              categoryContent={categoryContent}\n              setCategoryContent={setCategoryContent}\n            />\n            <div className=\"head-sub-nav-item\">\n              <FontAwesomeIcon className=\"nav-icon-prefix\" icon={faBars} />\n              <div className=\"nav-text\"> Category </div>\n              <FontAwesomeIcon\n                className=\"nav-icon-surfix\"\n                icon={dropdownStatus}\n              />\n            </div>\n          </div>\n          <div className=\"nav-feature-1\">\n            <div className=\"nav-category\" style={{ width: 120 }}>\n              <div className=\"nav-text\"> Today's Deals</div>\n            </div>\n            <div className=\"nav-category\" style={{ width: 120 }}>\n              <div className=\"nav-text\"> Recommend</div>\n            </div>\n            <div className=\"nav-category\" style={{ width: 120 }}>\n              <div className=\"nav-text\"> Pick up </div>\n            </div>\n            <div className=\"nav-category\" style={{ width: 120 }}>\n              <div className=\"nav-text\"> Promotions </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"nav-menu-surfix\">\n          <div className=\"nav-category\">\n            <div className=\"nav-category-item\">\n              <FontAwesomeIcon\n                className=\"nav-icon-prefix\"\n                icon={faQuestionCircle}\n              />\n              <div className=\"nav-text\"> Help</div>\n            </div>\n          </div>\n          <div className=\"nav-category\">\n            <div className=\"nav-category-item\">\n              <FontAwesomeIcon\n                className=\"nav-icon-prefix\"\n                icon={faDollarSign}\n              />\n              <div className=\"nav-text\"> Currency</div>\n            </div>\n          </div>\n          <div className=\"nav-category\">\n            <div className=\"nav-category-item\">\n              <FontAwesomeIcon className=\"nav-icon-prefix\" icon={faGlobe} />\n              <div className=\"nav-text\"> Region</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(SubNavBar);\n\n/*\n<div\n            className=\"nav-category-main\"\n            onMouseOver={() => {\n              setDropdownStatus(faChevronUp);\n              setCategoryContent({ ...categoryContent, enable: true });\n            }}\n            onMouseLeave={() => {\n              setDropdownStatus(faChevronDown);\n              setCategoryContent({ ...categoryContent, enable: false });\n            }}\n          >\n            <div className=\"nav-category-item\">\n              <FontAwesomeIcon\n                className=\"nav-icon-prefix\"\n                icon={faDollarSign}\n              />\n              <div className=\"nav-text\"> Currency</div>\n              <FontAwesomeIcon\n                className=\"nav-icon-surfix\"\n                icon={dropdownStatus}\n              />\n            </div>\n          </div>\n*/\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/MainNavBar.js",["1118","1119","1120"],"import React, { useEffect, useState, Fragment } from \"react\";\nimport ProfilePhoto from \"assets/avatar.jpg\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faCaretDown,\n  faCartArrowDown,\n  faUser,\n  faTimes,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport ENFlag from \"assets/Flags/en_flag.png\";\nimport FRFlag from \"assets/Flags/fr_flag.png\";\nimport VIFlag from \"assets/Flags/vi_flag.png\";\nimport { Link } from \"react-router-dom\";\nimport i18n from \"i18n\";\n//components\nimport \"./MainNavBar.scss\";\nimport SearchBar from \"./SearchBar\";\nimport NavFlyout from \"components/Commons/Overlay/Popup/NavFlyout/NavFlyout\";\nimport Logo from \"assets/sub-logo.png\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport LanguageSettingPanel from \"components/Commons/Overlay/Popup/Panel/LanguageSettingPanel\";\nimport AccountSettingPanel from \"components/Commons/Overlay/Popup/Panel/AccountSettingPanel\";\nimport NotificationPanel from \"components/Commons/Overlay/Popup/Panel/NotificationPanel\";\nimport Cart from \"components/Commons/Cart/Cart\";\nimport { propTypes } from \"react-map-gl-geocoder\";\n\nconst notificationList = [\n  {\n    user_id: 1039129,\n    role: 1, //to check whether a notification belongs to user or provider\n    content: \"Your order #483I1P655085433 has been submitted\",\n    create_at: \"2022-06-12T00:00:00.000+00:00\", //to display datetime that a notification was sent\n    order_code: \"483I1P7-6537131032665508\",\n    read_status: false,\n    type: 1,\n  },\n  {\n    user_id: 1039129,\n    role: 1, //to check whether a notification belongs to user or provider\n    content: \"Your has just received a promotion from The Dirty South\",\n    create_at: \"2022-06-07T00:00:00.000+00:00\", //to display datetime that a notification was sent\n    order_code: \"483I1P7-6537131032665508\",\n    read_status: true,\n    type: 3,\n  },\n  {\n    user_id: 1039129,\n    role: 1, //to check whether a notification belongs to user or provider\n    content: \"The Dirty South has confirmed your order #483I1P655085433\",\n    create_at: \"2022-06-05T00:00:00.000+00:00\", //to display datetime that a notification was sent\n    order_code: \"483I1P7-6537131032665508\",\n    read_status: false,\n    type: 2,\n  },\n  {\n    user_id: 1039129,\n    role: 1, //to check whether a notification belongs to user or provider\n    content: \"Alex Buham has sent you a message you\",\n    create_at: \"2022-04-05T00:00:00.000+00:00\", //to display datetime that a notification was sent\n    order_code: \"483I1P7-6537131032665508\",\n    read_status: false,\n    type: 4,\n  },\n  {\n    user_id: 1039129,\n    role: 1, //to check whether a notification belongs to user or provider\n    content: \"Alex Buham has sent you a message you\",\n    create_at: \"2021-04-05T00:00:00.000+00:00\", //to display datetime that a notification was sent\n    order_code: \"483I1P7-6537131032665508\",\n    read_status: true,\n    type: 4,\n  },\n];\n/*\n<div className=\"nav-logo-wrapper\" onClick={() => history.push(\"/\")}>\n            <img className=\"nav-logo\" alt=\"Logo\" src={Logo} />\n            <span className=\"nav-logo-title\">Tastie!</span>\n          </div>\n*/\nfunction MainNavBar({ user, history, ...rest }) {\n  const [accountPanel, setAccountPanel] = useState(false);\n  const [languagePanel, setLanguagePanel] = useState(false);\n  const [notificationPanel, setNotificationPanel] = useState(false);\n  const [cartModal, setCartModal] = useState(false);\n  const [mobileSidebar, setMobileSidebar] = useState(false);\n  const flag = {\n    en: [ENFlag, \"EN\"],\n    fr: [FRFlag, \"FR\"],\n    vi: [VIFlag, \"VI\"],\n  };\n\n  return (\n    <>\n      <div className=\"main-nav-menu-prefix\">\n        <div className=\"main-nav-prefix-container\">\n          <div className=\"nav-logo-wrapper\" onClick={() => history.push(\"/\")}>\n            <img height={30} alt=\"Logo\" src={Logo} />\n          </div>\n          <div className=\"nav-wrapper-2\">\n            <div className=\"nav-menu-prefix-2\">\n              <div className=\"nav-category-item-2\">\n                <FontAwesomeIcon\n                  onClick={() => setMobileSidebar((prev) => !prev)}\n                  className=\"nav-icon-prefix-2\"\n                  icon={faBars}\n                />\n              </div>\n            </div>\n          </div>\n          <SearchBar />\n        </div>\n        <div className=\"main-nav-surfix-container\">\n          <div\n            className=\"nav-language-container\"\n            onMouseEnter={() => {\n              setLanguagePanel((prev) => !prev);\n            }}\n            onMouseLeave={() => {\n              setLanguagePanel((prev) => !prev);\n            }}\n          >\n            <div className=\"nav-language-icon-wrapper\">\n              <img\n                className=\"nav-icon-img\"\n                src={flag[i18n.language] ? flag[i18n.language][0] : ENFlag}\n                alt=\"language\"\n              />\n            </div>\n            <div className=\"nav-language-text-wrapper\" style={{ width: \"70%\" }}>\n              <div className=\"nav-language-sub-text\">\n                {flag[i18n.language] ? flag[i18n.language][1] : \"EN\"}\n              </div>\n              <div className=\"nav-language-main-text\">\n                <FontAwesomeIcon className=\"nav-sub-icon\" icon={faCaretDown} />\n              </div>\n              {languagePanel ? (\n                <NavFlyout width={\"300px\"} height={\"160px\"}>\n                  <LanguageSettingPanel />\n                </NavFlyout>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n\n          <div\n            className=\"nav-gadget-container\"\n            onMouseEnter={() => {\n              setAccountPanel((prev) => !prev);\n            }}\n            onMouseLeave={() => {\n              setAccountPanel((prev) => !prev);\n            }}\n          >\n            <div className=\"nav-gadget-icon-wrapper\">\n              <FontAwesomeIcon className=\"nav-icon\" icon={faUser} />\n            </div>\n            <div className=\"nav-gadget-text-wrapper\">\n              <div className=\"nav-gadget-sub-text-1\">\n                Welcome,{\" \"}\n                {user.isUserAuthenticated && user.profile\n                  ? user.profile.first_name\n                  : \"Sign In\"}\n              </div>\n              <div className=\"nav-gadget-main-text\">Account & E-Wallet</div>\n            </div>\n            <div className=\"nav-end-gadget-text-wrapper\">\n              <div\n                className=\"nav-gadget-sub-text-2\"\n                style={{ visibility: \"hidden\" }}\n              >\n                US\n              </div>\n              <div className=\"nav-end-gadget-main-text\">\n                <FontAwesomeIcon className=\"nav-sub-icon\" icon={faCaretDown} />\n              </div>\n              {accountPanel ? (\n                <NavFlyout\n                  width={\"360px\"}\n                  height={\"auto\"}\n                  margin={\"0 0 0 -320px\"}\n                  onMouseLeave={() => {\n                    setLanguagePanel((prev) => !prev);\n                  }}\n                >\n                  <AccountSettingPanel />\n                </NavFlyout>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n          {user.isUserAuthenticated ? (\n            <div\n              className=\"nav-notification-container\"\n              onClick={() => {\n                setNotificationPanel((prev) => !prev);\n              }}\n            >\n              <div className=\"nav-notification-icon-wrapper\">\n                <FontAwesomeIcon className=\"nav-icon\" icon={faBell} />\n              </div>\n\n              <div className=\"nav-notification-text-wrapper\">\n                <div className=\"nav-notification-number\">\n                  {user.notifications.filter((d) => !d.read_status).length}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <Fragment></Fragment>\n          )}\n\n          <div\n            className=\"nav-cart-container\"\n            onClick={() => setCartModal((prev) => !prev)}\n          >\n            <div className=\"nav-gadget-icon-wrapper\">\n              <FontAwesomeIcon className=\"nav-icon\" icon={faCartArrowDown} />\n            </div>\n            <div className=\"nav-cart-text-wrapper\">\n              <div\n                className=\"nav-cart-number\"\n                style={{\n                  padding:\n                    user.userCart?.cart?.length < 10 ? \"10% 17%\" : \"10% 10%\",\n                }}\n              >\n                {user.userCart?.cart?.length <= 99\n                  ? user.userCart.cart.length\n                  : \"99+\"}\n              </div>\n              <div className=\"nav-cart-text\">Cart</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {mobileSidebar ? (\n        <>\n          <div className=\"darken-mask-mobile\"></div>\n          <div className=\"sidebar-container\">\n            <div className=\"sidebar-head-mobile\">\n              <FontAwesomeIcon\n                className=\"side-bar-close-icon\"\n                onClick={() => setMobileSidebar(false)}\n                icon={faTimes}\n              />\n              <div className=\"profile-container-mobile\">\n                <img\n                  src={ProfilePhoto}\n                  alt=\"profile_photo\"\n                  className=\"profile-photo-preview-mobile\"\n                />\n                <span className=\"profile-name-mobile\">\n                  {user.profile\n                    ? `${user.profile.first_name} ${user.profile.last_name}`\n                    : \"\"}\n                </span>\n              </div>\n            </div>\n            <div className=\"side-bar-feature-container\">\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Edit Profile</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Merchant Dashboard</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Merchant Registration</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Cart Detail</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Give feedbacks</div>\n              </div>\n\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Change Password</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Order History</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Settings & Privacy</div>\n              </div>\n              <div className=\"category-feature-wrapper\">\n                <div className=\"nav-text\">Log Out</div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <></>\n      )}\n      <Modal\n        distanceFromTop={rest.hideSubNavbar ? \"-35px\" : 0}\n        cartQuantity={user.userCart?.cart?.length}\n        openModal={cartModal}\n        title={\"Add Additional Options\"}\n        position=\"right\"\n        cartWidth={450}\n        cartHeight={\"320\"}\n        cartHeightAuto={true}\n        cartPositionTop={0}\n        cartPositionRight={0}\n        useCartUI={true}\n        transparentUnderNavbar={true}\n        transparent={\"0.3\"}\n        showCartTitle={true}\n        closeModal={() => {\n          setCartModal(false);\n        }}\n      >\n        <Cart />\n      </Modal>\n      <Modal\n        distanceFromTop={rest.hideSubNavbar ? \"-35px\" : 0}\n        cartQuantity={user.userCart?.cart?.length}\n        hideCloseButton={true}\n        openModal={notificationPanel}\n        title={\"Add Additional Options\"}\n        position=\"right\"\n        cartWidth={420}\n        cartHeight={\"1200\"}\n        cartHeightAuto={false}\n        cartPositionTop={0}\n        cartPositionRight={0}\n        useCartUI={true}\n        transparentUnderNavbar={true}\n        transparent={\"0.3\"}\n        showCartTitle={false}\n        closeModal={() => {\n          setNotificationPanel(false);\n        }}\n      >\n        <NotificationPanel notifications={notificationList} />\n      </Modal>\n    </>\n  );\n}\n\nMainNavBar.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, null)(MainNavBar));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileDetail/ProfileDetail.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142"],"import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"assets/avatar.jpg\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Formik, Form, Field } from \"formik\";\nimport locations from \"assets/json_location/locations\";\nimport {\n  faMars,\n  faVenus,\n  faCrown,\n  faPlusSquare,\n  faMinusSquare,\n  faUpload,\n  faUndo,\n  faLink,\n  faSave,\n  faHome,\n  faBuilding,\n  faAddressBook,\n  faDotCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport axios from \"axios\";\nimport \"./ProfileDetail.scss\";\nimport { faHouseUser, faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport city from \"assets/json_location/city\";\nimport {\n  addAddressAPI,\n  getAddressBookAPI,\n} from \"store/actions/UserAction/UserAction\";\n\nconst initialValues1 = {\n  firstname: \"\",\n  lastname: \"\",\n  birthday: \"2000/03/28\",\n  gender: 1,\n};\nconst initialValues2 = {\n  address: \"\",\n  longitude: \"\",\n  latitude: \"\",\n  city: \"\",\n  district: \"\",\n  ward: \"\",\n  road: \"\",\n  type: 1,\n};\n\nfunction ProfileDetail(props) {\n  const { user, addAddressAPI, getAddressBookAPI } = props;\n  const [imageURL, setImageURL] = useState();\n  const [showEditBI, setShowEditBI] = useState(true);\n  const [showEditPI, setShowEditPI] = useState(false);\n  const [showEditCI, setShowEditCI] = useState(true);\n  const preference = [\"Vegetarian\", \"Vegan\", \"Fastfood\"];\n  //Dialog\n  const [showValidateDialog, setShowValidateDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({\n    header: \"\",\n    text1: \"\",\n    text2: \"\",\n  });\n  //Map\n  const selectedAddressType = {\n    border: \"1px solid #101010\",\n    backgroundColor: \"#f6f6f6\",\n  };\n  const [loading, setLoading] = useState(false);\n  const [addressType, setAddressType] = useState(1);\n  const [latitude, setLatitude] = useState(10.768685473523648);\n  const [longitude, setLongitude] = useState(106.68057155417674);\n  const [viewport, setViewport] = useState({\n    width: \"calc(80% - 14px)\",\n    height: \"300px\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 16,\n  });\n  const [contact, setContact] = useState([]);\n  async function fetchAddressBook() {\n    var result = await getAddressBookAPI(user.profile.user_id);\n    setContact(result);\n  }\n  useEffect(() => {\n    fetchAddressBook();\n  }, [user.profile]);\n  const inputFile = useRef(null);\n  const uploadProfileImage = (e) => {\n    inputFile.current.click();\n  };\n  useEffect(() => {\n    if (user.profile.length !== 0) setLoading(true);\n  }, [user.profile]);\n  const getFullAddress = (road, city_id, district_id, ward_id) => {\n    const address = [];\n    locations\n      .filter((city) => city.code == city_id)\n      .map((selectedCity) => {\n        address.unshift(selectedCity.name);\n        selectedCity.districts\n          .filter((district) => district.code == district_id)\n          .map((selectedDistrict) => {\n            address.unshift(selectedDistrict.name);\n            selectedDistrict.wards\n              .filter((ward) => ward.code == ward_id)\n              .map((selectedWard) => {\n                address.unshift(selectedWard.name);\n              });\n          });\n      });\n    if (road) address.unshift(road);\n    return address.join(\", \");\n  };\n  const uploadFile = (e) => {\n    let file = e.target.files[0];\n  };\n  const handleSubmitForm1 = async (values) => {\n    console.log(values);\n  };\n  const handleSubmitForm2 = async (values) => {\n    const data = {\n      customer_id: user.profile.user_id,\n      address: getFullAddress(\n        values.road,\n        values.city,\n        values.district,\n        values.ward\n      ),\n      city: values.city,\n      longtitude: longitude,\n      latitude: latitude,\n      type: addressType,\n    };\n    console.log(data);\n    await addAddressAPI(data);\n    fetchAddressBook();\n    setShowValidateDialog(true);\n    setDialogContent({\n      ...dialogContent,\n      header: \"Success\",\n      text1: `Successfully adding a new address`,\n      text2: `Address \"${data.address}\" has been added to your address book`,\n    });\n  };\n\n  return (\n    loading && (\n      <Fragment>\n        <div className=\"profile-pd-container\">\n          <div className=\"p-pd-header-wrapper\">\n            <div className=\"p-pd-header-profile-summary\">\n              <div className=\"p-pd-hp-s-profile-image\">\n                <img\n                  className=\"p-pd-hd-ps-image\"\n                  alt=\"profile_image\"\n                  src={Avatar}\n                />\n              </div>\n              <div className=\"p-pd-hp-s-profile-info\">\n                <span className=\"p-pd-hp-s-pi-main-text\">\n                  {`${user?.profile?.first_name} ${user?.profile?.last_name}`}\n                </span>\n                <span className=\"u-pf-sb-pt-icon\">\n                  <FontAwesomeIcon className=\"vip-customer\" icon={faCrown} />\n                  <span className=\"u-pf-sb-pt-sub-text-type\">\n                    Gold customer\n                  </span>\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text\">\n                  <b>Birthday:</b> {user.profile?.birthday?.split(\"T\")[0]}\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text-medium\">\n                  <b>Gender:</b> Male\n                  <FontAwesomeIcon className=\"mars-icon\" icon={faMars} />\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text\">\n                  <b>Delivery address:</b>{\" \"}\n                  {user.location\n                    ? user.currentAddress?.address\n                    : user.location.address[0]}\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text-medium\">\n                  <b>Preference:</b>\n                  {preference.map((tag, index) => (\n                    <Tag\n                      key={index}\n                      margin={\"0 0\"}\n                      tFontSize={\"11px\"}\n                      height={\"18px\"}\n                      text={tag}\n                    />\n                  ))}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-pd-body-wrapper\">\n            <div className=\"p-pd-body-title\">\n              <FontAwesomeIcon\n                className=\"p-pd-bt-icon\"\n                icon={showEditPI ? faMinusSquare : faPlusSquare}\n                onClick={() => setShowEditPI((prev) => !prev)}\n              />\n              <span className=\"p-pd-title-text\">Profile picture</span>\n            </div>\n            {showEditPI && (\n              <Fragment>\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  id=\"profileImageInput\"\n                  onChange={(e) => uploadFile(e)}\n                  ref={inputFile}\n                  style={{ display: \"none\" }}\n                />\n                <div className=\"p-pd-body-avatar-uploader-wrapper\">\n                  <div className=\"p-pd-body-image-preview\">\n                    <img\n                      className=\"p-pd-body-profile-photo-preview\"\n                      src={Avatar}\n                      alt=\"profile_pic\"\n                    />\n                  </div>\n                  <div className=\"p-pd-body-image-upload-wrapper\">\n                    <span className=\"p-pd-b-iu-label\">Upload by URL:</span>\n                    <input\n                      type=\"text\"\n                      name=\"imageURL\"\n                      value={imageURL}\n                      className=\"p-pd-b-iu-link-upload\"\n                      onChange={(e) => setImageURL(e.target.value)}\n                    />\n                    <ButtonGroup\n                      gap={10}\n                      float=\"center\"\n                      mgTop={10}\n                      mgBottom={5}\n                    >\n                      <Button\n                        width={120}\n                        height={30}\n                        color={\"black\"}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label={imageURL ? \"URL Submit\" : \"Upload\"}\n                        prefix={\n                          imageURL ? (\n                            <FontAwesomeIcon\n                              className=\"button-icon\"\n                              icon={faLink}\n                            />\n                          ) : (\n                            <FontAwesomeIcon\n                              className=\"button-icon\"\n                              icon={faUpload}\n                            />\n                          )\n                        }\n                        onClick={uploadProfileImage}\n                      />\n                      <Button\n                        width={100}\n                        height={30}\n                        color={\"black\"}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label=\"Revert\"\n                        prefix={\n                          <FontAwesomeIcon\n                            className=\"button-icon\"\n                            icon={faUndo}\n                          />\n                        }\n                        onClick={() => {}}\n                      />\n                    </ButtonGroup>\n                    <span className=\"p-pd-b-iu-guideline\">\n                      Acceptable file formats: PDF, PNG, GIF, JPG\n                    </span>\n                    <span className=\"p-pd-b-iu-guideline\">\n                      Acceptable file sizes: File sizes are limited by the\n                      upload timeout, so we recommend files that are less than\n                      25 MB per file uploaded (either individually or in a zip\n                      file). Tastie will resize each image file down to 1 MB.\n                    </span>\n                  </div>\n                </div>\n              </Fragment>\n            )}\n          </div>\n          <Formik\n            initialValues={initialValues1}\n            validateOnChange={false}\n            onSubmit={(values) => handleSubmitForm1(values)}\n          >\n            {(formikProps) => {\n              const { values, errors, touched } = formikProps;\n\n              return (\n                <Fragment>\n                  <Form className=\"p-pd-body-wrapper\">\n                    <div className=\"p-pd-body-title\">\n                      <FontAwesomeIcon\n                        className=\"p-pd-bt-icon\"\n                        icon={showEditBI ? faMinusSquare : faPlusSquare}\n                        onClick={() => setShowEditBI((prev) => !prev)}\n                      />\n                      <span className=\"p-pd-title-text\">General profile</span>\n                      {showEditBI && (\n                        <div className=\"p-pd-submit-button\">\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Revert\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faUndo}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Save\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faSave}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                        </div>\n                      )}\n                    </div>\n                    {showEditBI && (\n                      <div className=\"p-pd-general-profile-wrapper\">\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Full name:</span>\n                          <input\n                            type=\"text\"\n                            name=\"firstname\"\n                            className=\"p-pd-b-iu-input-general\"\n                            defaultValue={user.profile?.first_name}\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"First name\"}\n                          />\n                          —\n                          <input\n                            type=\"text\"\n                            name=\"lastname\"\n                            placeholder={\"Last name\"}\n                            defaultValue={user.profile?.last_name}\n                            className=\"p-pd-b-iu-input-general\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Phone:</span>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"p-pd-b-iu-input-general\"\n                            defaultValue={user.profile?.phone}\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"Phone number\"}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Email:</span>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"p-pd-b-iu-input-general p-pd-disable\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                            defaultValue={user.profile?.email}\n                            placeholder={\"Email\"}\n                            disabled\n                            style={{ width: \"526px\" }}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">\n                            Date of birth:\n                          </span>\n                          <input\n                            type=\"date\"\n                            name=\"birthday\"\n                            defaultValue={user.profile?.birthday?.split(\"T\")[0]}\n                            className=\"p-pd-b-iu-input-general\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"Date of birth\"}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Gender:</span>\n                          <label className=\"p-pd-b-iu-input-general-radio radio\">\n                            <input type=\"radio\" name=\"gender\" value={1} />\n                            <span className=\"p-pd-label-radio\">\n                              Male{\" \"}\n                              <FontAwesomeIcon\n                                className=\"mars-icon\"\n                                icon={faMars}\n                              />\n                            </span>\n                          </label>\n                          <label className=\"p-pd-b-iu-input-general-radio radio\">\n                            <input type=\"radio\" name=\"gender\" value={2} />\n                            <span className=\"p-pd-label-radio\">\n                              Female{\" \"}\n                              <FontAwesomeIcon\n                                className=\"venus-icon\"\n                                icon={faVenus}\n                              />\n                            </span>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n                  </Form>\n                </Fragment>\n              );\n            }}\n          </Formik>\n          <Formik initialValues={initialValues2} validateOnChange={false}>\n            {(formikProps) => {\n              const { values, errors, touched } = formikProps;\n              const handleGeoCoding = (values) => {\n                const { road, city, district, ward } = values;\n                const address = getFullAddress(road, city, district, ward);\n                if (!address) return;\n                const endpoint = `https://api.geoapify.com/v1/geocode/search?text=${address}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n                async function fetchCoordinates(url) {\n                  const result = await axios.get(url);\n                  if (result.data?.features?.length !== 0) {\n                    setLongitude(\n                      result.data.features[0]?.geometry?.coordinates[0]\n                    );\n                    setLatitude(\n                      result.data.features[0]?.geometry?.coordinates[1]\n                    );\n                    setViewport({\n                      ...viewport,\n                      latitude:\n                        result.data.features[0]?.geometry?.coordinates[1],\n                      longitude:\n                        result.data.features[0]?.geometry?.coordinates[0],\n                    });\n                    return;\n                  }\n                  setShowValidateDialog(true);\n                  setDialogContent({\n                    ...dialogContent,\n                    header: \"No result found\",\n                    text1:\n                      \"Sorry, we couldn't find any locations for your search\",\n                    text2:\n                      \"In that case, we would recommend you to input a coordinates (latitude, longitude) instead.\",\n                  });\n                }\n                fetchCoordinates(endpoint);\n              };\n              return (\n                <Fragment>\n                  <Form className=\"p-pd-body-wrapper\">\n                    <div className=\"p-pd-body-title\">\n                      <FontAwesomeIcon\n                        className=\"p-pd-bt-icon\"\n                        icon={showEditCI ? faMinusSquare : faPlusSquare}\n                        onClick={() => setShowEditCI((prev) => !prev)}\n                      />\n                      <span className=\"p-pd-title-text\">Delivery address</span>\n                      {showEditBI && (\n                        <div className=\"p-pd-submit-button\">\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Revert\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faUndo}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Save\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faSave}\n                              />\n                            }\n                            onClick={() => {\n                              handleSubmitForm2(values);\n                            }}\n                          />\n                        </div>\n                      )}\n                    </div>\n\n                    {showEditCI && (\n                      <Fragment>\n                        <div className=\"p-pd-general-profile-wrapper\">\n                          <div className=\"p-pd-general-profile-row\">\n                            <div className=\"p-pd-text-secondary\">\n                              <FontAwesomeIcon\n                                className=\"p-pd-address-icon\"\n                                icon={faDotCircle}\n                              />\n                              <span>{user.currentAddress.address}</span>\n                            </div>\n                          </div>\n                          {user.location.map((address) => (\n                            <div className=\"p-pd-general-profile-row \">\n                              <div className=\"p-pd-text-secondary\">\n                                <FontAwesomeIcon\n                                  className=\"p-pd-address-icon\"\n                                  icon={\n                                    address.type === 1\n                                      ? faHome\n                                      : address.type === 2\n                                      ? faBuilding\n                                      : faAddressBook\n                                  }\n                                />\n                                <span>{address.address}</span>\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Location:</span>\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              as=\"select\"\n                              name=\"city\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a city...\n                              </option>\n                              {locations.map((city) => (\n                                <option\n                                  key={city.code}\n                                  value={city.code}\n                                  label={city.name}\n                                />\n                              ))}\n                            </Field>\n                            —\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              as=\"select\"\n                              name=\"district\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a district...\n                              </option>\n                              {locations\n                                .filter((city) => city.code == values.city)\n                                .map((selectedCity) =>\n                                  selectedCity.districts.map((district) => (\n                                    <option\n                                      key={district.code}\n                                      value={district.code}\n                                      label={district.name}\n                                    />\n                                  ))\n                                )}\n                            </Field>\n                            —\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              style={{ width: \"100%\", height: \"35px\" }}\n                              as=\"select\"\n                              name=\"ward\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a ward...\n                              </option>\n                              {locations\n                                .filter((city) => city.code == values.city)\n                                .map((selectedCity) =>\n                                  selectedCity.districts\n                                    .filter(\n                                      (district) =>\n                                        district.code == values.district\n                                    )\n                                    .map((selectedDistrict) =>\n                                      selectedDistrict.wards.map((ward) => (\n                                        <option\n                                          key={ward.code}\n                                          value={ward.code}\n                                          label={ward.name}\n                                        />\n                                      ))\n                                    )\n                                )}\n                            </Field>\n                          </div>\n\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Address:</span>\n                            <Field\n                              type=\"text\"\n                              name=\"road\"\n                              className=\"p-pd-b-iu-input-general\"\n                              placeholder={\"Road. Eg. 100A, St. Laurant Street\"}\n                              style={{ width: \"526px\" }}\n                            />\n                          </div>\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Type:</span>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(1)}\n                              style={\n                                addressType === 1 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faHome}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">House</span>\n                            </div>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(2)}\n                              style={\n                                addressType === 2 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faBuilding}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">\n                                Workplace\n                              </span>\n                            </div>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(3)}\n                              style={\n                                addressType === 3 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faAddressBook}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">Other</span>\n                            </div>\n                          </div>\n                          <ButtonGroup gap={5} mgTop={5} mgBottom={5}>\n                            <Button\n                              width={140}\n                              height={25}\n                              fontSize={12}\n                              color={\"black\"}\n                              marginTop={20}\n                              bglight={true}\n                              border={\"#5d5d5d 1.5px solid\"}\n                              justifyContent={\"center\"}\n                              label=\"Check on map\"\n                              prefix={\n                                <FontAwesomeIcon\n                                  className=\"button-icon\"\n                                  icon={faMapMarkedAlt}\n                                />\n                              }\n                              onClick={() => {\n                                handleGeoCoding(values);\n                              }}\n                            />\n                          </ButtonGroup>\n                          <div className=\"p-pd-general-profile-row\">\n                            <ReactMapGl\n                              transitionDuration={1000}\n                              {...viewport}\n                              mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                              onViewportChange={(viewport) =>\n                                setViewport(viewport)\n                              }\n                              mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n                            >\n                              <Marker\n                                latitude={latitude}\n                                longitude={longitude}\n                                offsetLeft={-20}\n                                offsetTop={-30}\n                              >\n                                <img\n                                  alt=\"marker\"\n                                  style={{ height: 30, width: 30 }}\n                                  src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n                                />\n                              </Marker>\n                            </ReactMapGl>\n                          </div>\n                        </div>\n                      </Fragment>\n                    )}\n                  </Form>\n                </Fragment>\n              );\n            }}\n          </Formik>\n          <div className=\"p-pd-footer-wrapper\"></div>\n        </div>\n        <DialogBox\n          visibility={showValidateDialog}\n          headerText={dialogContent.header}\n          close={() => setShowValidateDialog(false)}\n        >\n          <div className=\"dialog-detail-wrapper\">\n            <div className=\"dialogbox-content\">\n              <span className=\"dialogbox-content-detail-main\">\n                {dialogContent.text1}\n              </span>\n              <span className=\"dialogbox-content-detail-sub\">\n                {dialogContent.text2}\n              </span>\n            </div>\n            <div className=\"dialogbox-action\">\n              <ButtonGroup gap={5} mgRight={5}>\n                <Button\n                  color={\"white\"}\n                  bgColor={\"#800000\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={80}\n                  height={30}\n                  label={\"OK\"}\n                  onClick={() => setShowValidateDialog(false)}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </DialogBox>\n      </Fragment>\n    )\n  );\n}\n\nProfileDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  addAddressAPI: PropTypes.func.isRequired,\n  getAddressBookAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addAddressAPI, getAddressBookAPI })(ProfileDetail)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/GuideBanner.js",["1143"],"import \"./GuideBanner.scss\";\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport MerchantBanner from \"assets/Banner/merchant-ads.jpg\";\n\nconst backgroundStyling = {\n  background: `url(${MerchantBanner})`,\n  backgroundPosition: \"center\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nfunction GuideBanner(props) {\n  const [bannerContent, setBannerContent] = useState({\n    subTitle: \"Create your own business\",\n    title: \"Grow your business on Tastie\",\n    description:\n      \"Tasite is an order and delivery management platform that instantly connects customers with your storefront. Built on the power of Tastie's network, we help merchants grow sales, reach more customers, and build their online brand.\",\n  });\n\n  const redirectToMerchantRegistration = () => {\n    const { user } = props;\n    console.log(user);\n    if (user.profile?.role === 2) {\n      props.history.push(\"/\");\n      return;\n    }\n    if (user.provider_id !== -1 && user.provider_id !== null) {\n      props.history.push(`/merchant-registration/${user.provider_id}/service`);\n      return;\n    }\n    props.history.push(\"/merchant-sign-contract\");\n  };\n\n  return (\n    <div className=\"guide-banner\" style={backgroundStyling}>\n      <div className=\"guide-banner-container\">\n        <div className=\"guide-banner-content\">\n          <span className=\"guide-sub-title\">{bannerContent.subTitle}</span>\n          <h1 className=\"guide-title\">\n            Grow your\n            <br /> business on Tastie\n          </h1>\n          <p className=\"guide-description\">{bannerContent.description}</p>\n          <div className=\"btn-guide-wrapper\">\n            <button\n              onClick={() => redirectToMerchantRegistration()}\n              className=\"btn-guide-get-started\"\n            >\n              Get started\n            </button>\n            <button\n              className=\"btn-guide-more-details\"\n              onClick={() => {\n                window.scrollTo({ top: 550, behavior: \"smooth\" });\n              }}\n            >\n              More Details\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nGuideBanner.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, null)(GuideBanner));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/dummy/ShipperLocations.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/Tutorials/Tutorial.js",["1144"],"import \"./Tutorial.scss\";\nimport TutorialCard from \"components/MerchantRegistration/GuidePage/Tutorials/TutorialCard\";\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport RegistrationProcedureIcon1 from \"assets/Banner/merchant-registration-step1.png\";\nimport RegistrationProcedureIcon2 from \"assets/Banner/merchant-registration-step2.png\";\nimport RegistrationProcedureIcon3 from \"assets/Banner/merchant-registration-step3.png\";\n\nfunction Tutorial(props) {\n  const [cardDetails, setCardDetail] = useState([\n    {\n      id: 0,\n      image: RegistrationProcedureIcon1,\n      title: \"Provide restaurant info\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque tincidunt mi nulla, sit amet porta metus feugiat vel.\",\n    },\n    {\n      id: 1,\n      image: RegistrationProcedureIcon2,\n      title: \"Sign business contract\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque tincidunt mi nulla, sit amet porta metus feugiat vel. \",\n    },\n    {\n      id: 2,\n      image: RegistrationProcedureIcon3,\n      title: \"Start online business\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque tincidunt mi nulla, sit amet porta metus feugiat vel. \",\n    },\n  ]);\n  return (\n    <div className=\"tutorial-section\">\n      <span className=\"tutorial-title\">Take your business further</span>\n\n      <span className=\"tutorial-sub-title\">Online registration</span>\n      <div className=\"card-details-wrapper\">\n        {cardDetails.map((cardDetail) => (\n          <TutorialCard key={cardDetail.id} card={cardDetail} />\n        ))}\n      </div>\n      <button className=\"btn-guide-register-now\">Register Now</button>\n    </div>\n  );\n}\n\nexport default withRouter(Tutorial);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OTOrderDetail/OTOrderDetail.js",["1145"],"import { useState, useEffect, Fragment } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./OTOrderDetail.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDotCircle, faTimes } from \"@fortawesome/fontawesome-free-solid\";\nimport { faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction OTOrderDetail(props) {\n  const [orderDetail, setOrderDetail] = useState([]);\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  useEffect(() => {\n    console.log(props.orderItems, props.orderSummary);\n  }, [props.orderItems, props.orderSummary]);\n\n  return (\n    <Fragment>\n      {props.showOrderDetail && (\n        <div className=\"ot-order-detail-container\">\n          <div className=\"ot-order-detail-top\">\n            <span\n              className=\"ot-order-detail-title\"\n              style={{ fontSize: 14, color: \"#810000\" }}\n            >\n              {props.orderSummary.order_code}:\n            </span>\n            <FontAwesomeIcon\n              icon={faTimes}\n              className=\"close-tab-button\"\n              onClick={() => props.setShowOrderDetail(false)}\n            />\n          </div>\n          <div className=\"ot-od-items-container\">\n            {props.orderItems?.items?.map((order, index) => (\n              <div key={index} className=\"oc-od-item-row\">\n                <div className=\"oc-od-item-number\">\n                  <span className=\"oc-od-item-number-inner\">\n                    {order.quantity}\n                  </span>\n                </div>\n\n                <img\n                  className=\"oc-od-item-img\"\n                  src={order.image}\n                  alt={\"product_img\"}\n                />\n                <div className=\"oc-od-item-main-text\">\n                  <span className=\"oc-od-mt-1\" style={{ fontWeight: 700 }}>\n                    {order.product_name}\n                  </span>\n                  <span className=\"oc-od-mt-2\">\n                    € {order.price?.toFixed(2)}\n                  </span>\n                  {order.special_instruction && (\n                    <span className=\"oc-od-cart-note\">\n                      Special instruction: {order.special_instruction}\n                    </span>\n                  )}\n                  {order?.product_options?.map((option) => (\n                    <div className=\"oc-od-mt-ao-wrapper\">\n                      <span className=\"oc-od-cart-note\">{`+ ${\n                        option.option_name\n                      } ${\n                        parseInt(option.price) === 0\n                          ? \"(FREE)\"\n                          : `($${option.price})`\n                      }:`}</span>\n                      <span className=\"oc-od-cart-note\">\n                        {` ${option.value} `}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"oc-od-item-sub-text\">\n                  ${\" \"}\n                  {(\n                    parseFloat(order.price) * parseFloat(order.quantity)\n                  ).toFixed(2)}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"ot-od-head\">\n            {orderDetail?.cart?.map((order) => (\n              <div className=\"ot-od-head-item\">\n                <div className=\"ot-od-item-number\">\n                  <span className=\"ot-od-item-number-inner\">\n                    &#xd7; {order?.quantity}\n                  </span>\n                </div>\n                <img\n                  className=\"ot-od-item-img\"\n                  alt=\"product_image\"\n                  src={order?.product_image}\n                />\n                <div className=\"ot-od-item-main-text\">\n                  <span className=\"ot-od-main\">{order?.product_name}</span>\n                  <div className=\"oc-od-item-row-underline ot-od-sub\">\n                    <div>\n                      {order?.product_options?.map((option) => (\n                        <Fragment>\n                          •{\" \"}\n                          <span className=\"oc-od-cart-note\">{`${\n                            option.option_name\n                          } ${\n                            parseInt(option.price?.toFixed(2)) === 0\n                              ? \"(FREE)\"\n                              : `($${option.price?.toFixed(2)})`\n                          }:`}</span>\n                          <span className=\"oc-od-cart-note\">\n                            {` ${option.value} `}\n                          </span>\n                        </Fragment>\n                      ))}\n                    </div>\n                  </div>\n                  {order.note && (\n                    <span className=\"oc-od-cart-note\">\n                      • NOTE: {order.note}\n                    </span>\n                  )}\n                </div>\n                <div className=\"ot-od-item-sub-text\">\n                  € {order?.product_price?.toFixed(2)}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"ot-od-body\">\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">\n                <FontAwesomeIcon\n                  icon={faDotCircle}\n                  style={{ marginRight: 10 }}\n                />\n                <b>Delivery address:</b> {props.orderSummary.customer_address}\n              </span>\n            </div>\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">\n                <FontAwesomeIcon icon={faPhone} style={{ marginRight: 10 }} />\n                <b>Contact:</b> {props.orderSummary.customer_phone}\n              </span>\n            </div>\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">\n                Subtotal ({orderDetail?.cart?.length} items)\n              </span>\n              <span className=\"ot-od-body-item-right-text\">\n                $ {props.orderSummary.subtotal?.toFixed(2) || 0?.toFixed(2)}\n              </span>\n            </div>\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">Delivery fee</span>\n              <span className=\"ot-od-body-item-right-text\">\n                $ {props.orderSummary.delivery_fee?.toFixed(2) || 0?.toFixed(2)}\n              </span>\n            </div>\n            <div\n              className=\"ot-od-body-item\"\n              style={{ color: \"rgb(145, 0, 0)\" }}\n            >\n              <span className=\"ot-od-body-item-left-text\">Coupon</span>\n              <span className=\"ot-od-body-item-right-text\">\n                <span className=\"ot-od-minus\">-</span>$ 1.50\n              </span>\n            </div>\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">Tip</span>\n              <span className=\"ot-od-body-item-right-text\">\n                $ {props.orderSummary.tip?.toFixed(2) || 0?.toFixed(2)}\n              </span>\n            </div>\n            <div className=\"ot-od-body-item\">\n              <span className=\"ot-od-body-item-left-text\">Payment method</span>\n              <span className=\"ot-od-body-item-right-text\">Cash</span>\n            </div>\n          </div>\n          <div className=\"ot-od-foot\">\n            <div className=\"ot-od-foot-item\">\n              <span\n                className=\"ot-od-body-item-left-text\"\n                style={{ fontSize: 15, fontWeight: 700 }}\n              >\n                Total\n              </span>\n              <span\n                className=\"ot-od-body-item-right-text\"\n                style={{ fontSize: 15, fontWeight: 700 }}\n              >\n                ${\" \"}\n                {(\n                  props.orderSummary.subtotal +\n                  props.orderSummary.tip +\n                  props.orderSummary.delivery_fee\n                )?.toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nOTOrderDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, null)(OTOrderDetail))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderStatus/OrderStatus.js",["1146","1147","1148","1149"],"import { useState, useEffect, useRef, Fragment } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport { css } from \"@emotion/react\";\nimport Loader from \"react-spinners/BeatLoader\";\nimport PropTypes from \"prop-types\";\nimport \"./OrderStatus.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ChatBox from \"./ChatBox\";\nimport {\n  faExclamationCircle,\n  faTimes,\n  faCommentDots,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Step1Image from \"assets/order_progress/step1.gif\";\nimport Step3Image from \"assets/order_progress/step3.gif\";\nimport Step4Image from \"assets/order_progress/step4.gif\";\nimport Step5Image from \"assets/order_progress/step5.gif\";\nimport axios from \"axios\";\nconst shipper = {\n  name: \"Terry Harrison\",\n  license_plate: \"64B1 - 03663\",\n  rating: 5,\n  profile_image:\n    \"https://pyxis.nymag.com/v1/imgs/231/dd4/b1d43dd12227a68877644b36e1b6c9850e-13-zayn-malik.rsquare.w330.jpg\",\n};\n\nfunction OrderStatus(props) {\n  const { user } = props;\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const { status } = props;\n  const [showShipperChat, setShowShipperChat] = useState(false);\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#910000\");\n  \n  const completePickUp = async () => {\n    try {\n      const res = await axios.post(\"/v1/api/tastie/order/update_order_status\", {\n        order_code: props.match.params.order_code,\n        status: 5, // completed\n        shipper_id: null,\n        update_at: new Date().toISOString(),\n      });\n      if (res.status) {\n        props.setCompletedStatus(true);\n        props.setCurrentStatus(5);\n      }\n    } catch (error) {\n      console.error(\"Cannot update order status\", error);\n    }\n  };\n  const override = css`\n    display: block;\n    border-color: #910000;\n    font-size: 14px;\n    color: red;\n  `;\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  const stepImage = [\n    Step1Image,\n    Step1Image,\n    Step3Image,\n    Step4Image,\n    Step5Image,\n  ];\n  const waitingMessage = [\n    \"Order received. Working on it right now...\",\n    \"Shipper assigned. Waiting for the restaurant order's confirmation.\",\n    \"Restaurant confirmed. Shipper is on the way to the restaurant\",\n    \"Shipper's on the way to pick up your order. Please wait for a while.\",\n    \"Order completed\",\n    \"Order canceled\",\n  ];\n\n  const statusMainText = [\n    \"Order submitted\",\n    \"Shipper assigned\",\n    \"Restaurant confirmed\",\n    \"Delivering\",\n    \"Order delivered\",\n    \"Order canceled\",\n  ];\n  const statusSubText = [\n    \"Your order has been placed.\",\n    \"Shipper is taking care of your order.\",\n    \"Restaurant has confirmed your order and preparing for your dishes.\",\n    \"Shipper has your order. You'll get an alert when it's at your door.\",\n    \"Your order has been completed. Enjoy your meal.\",\n    \"Order canceled\",\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"or-st-container\" style={{ marginBottom: 20 }}>\n        <Fragment>\n          <div className=\"or-st-head-bar\">\n            <span className=\"or-st-waiting\">{waitingMessage[status - 1]}</span>\n            <div className=\"or-st-spinner\">\n              <Loader\n                color={color}\n                loading={loading}\n                css={override}\n                size={10}\n                margin={2}\n                speedMultiplier={0.8}\n              />\n            </div>\n          </div>\n          {status >= 2 && props.orderSummary.delivery_mode === 1 && (\n            <div className=\"or-st-shipper\">\n              <img\n                className=\"or-st-shipper-image\"\n                src={shipper.profile_image}\n                width={300}\n                alt=\"shipper_profile_image\"\n              />\n              <div className=\"or-st-shipper-text-wrapper\">\n                <span className=\"or-st-sh-main-text\">{shipper.name}</span>\n                <span className=\"or-st-sh-sub-text\">\n                  {shipper.license_plate}\n                </span>\n              </div>\n              <div className=\"or-st-shipper-communication\">\n                <FontAwesomeIcon\n                  className=\"shipper-chat-icon\"\n                  icon={showShipperChat ? faTimes : faCommentDots}\n                  onClick={() => setShowShipperChat((prev) => !prev)}\n                />\n              </div>\n            </div>\n          )}\n          {showShipperChat && props.orderSummary?.delivery_mode === 1 ? (\n            <ChatBox\n              shipper={shipper}\n              message={message}\n              setMessage={setMessage}\n              messages={messages}\n              setMessages={setMessages}\n              socket={user.socket}\n            />\n          ) : (\n            <Fragment>\n              <span className=\"or-st-pre-body\">\n                Latest arrival by 10:55am\n                <FontAwesomeIcon\n                  className=\"or-st-icon\"\n                  icon={faExclamationCircle}\n                />\n              </span>\n              <img\n                style={status === 1 ? { marginTop: 67 } : {}}\n                className=\"or-st-image\"\n                src={stepImage[status - 1]}\n                width={300}\n                alt=\"step_1\"\n              />\n              <div className=\"or-st-head-wrapper\">\n                {statusMainText[status - 1]}\n              </div>\n              <div className=\"or-st-body-wrapper\">\n                {props.orderSummary.delivery_mode !== 2\n                  ? statusSubText[status - 1]\n                  : \"Check and come to the restaurant to pick up your order.\"}\n              </div>{\" \"}\n              {props.orderSummary.delivery_mode === 2 &&\n                props.currentStatus === 3 && (\n                  <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={0}>\n                    <Button\n                      color={\"white\"}\n                      bgColor={\"#810000\"}\n                      justifyContent={\"center\"}\n                      gap={\"10px\"}\n                      width={180}\n                      fontSize={14}\n                      height={40}\n                      label={`Complete order`}\n                      onClick={() => completePickUp()}\n                    />\n                  </ButtonGroup>\n                )}\n              {props.orderSummary?.delivery_mode !== 2 ? (\n                <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={0}>\n                  <Button\n                    color={\"white\"}\n                    bgColor={\"#2c2c2c\"}\n                    justifyContent={\"center\"}\n                    gap={\"10px\"}\n                    width={120}\n                    fontSize={14}\n                    height={35}\n                    label={`Delivery detail`}\n                    onClick={() => props.setShowOrderDetail(true)}\n                  />\n                </ButtonGroup>\n              ) : (\n                <span\n                  style={{\n                    marginTop: 15,\n                    fontSize: 13,\n                    fontStyle: \"italic\",\n                    color: \"#810000\",\n                    textDecoration: \"underline\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => props.setShowOrderDetail(true)}\n                >\n                  Order detail\n                </span>\n              )}\n            </Fragment>\n          )}\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n}\n\nOrderStatus.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  withAuth(connect(mapStateToProps, null)(OrderStatus))\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/MarketingPanel.js",["1150","1151","1152"],"import { Fragment, useEffect, useState } from \"react\";\nimport MDMarketing from \"components/MerchantDashboard/DashboardFeatures/MDMarketing/MDMarketing\";\nimport \"../Panel.scss\";\n\nfunction MarketingPanel(props) {\n  switch (props.match.params.name) {\n    case \"promotion\":\n      return (\n        <div className=\"panel-content-wrapper\">\n          <MDMarketing />\n        </div>\n      );\n    default:\n      return (\n        <div className=\"panel-container\">\n          <div className=\"panel-center\">Developing</div>\n        </div>\n      );\n  }\n}\n\nexport default MarketingPanel;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderPanel.js",["1153","1154","1155"],"import { Fragment, useEffect, useState } from \"react\";\nimport { Redirect, useSearchParams } from \"react-router-dom\";\nimport OrderDetail from \"components/MerchantDashboard/DashboardFeatures/MDOrder/OrderDetail\";\nimport \"../Panel.scss\";\nimport Tabs from \"components/MerchantDashboard/DashboardFeatures/Tabs\";\nimport OrderHistory from \"./OrderHistory\";\nfunction OrderPanel(props) {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [type, setType] = useState(\"All\");\n  useEffect(() => {\n    setType(TabList.tab1[currentTab].name);\n  }, [currentTab]);\n  const TabList = {\n    tab1: [\n      { id: 0, name: \"All\" },\n      { id: 1, name: \"Pending\" },\n      { id: 2, name: \"In progress\" },\n      { id: 3, name: \"Picked-up\" },\n      { id: 4, name: \"Completed\" },\n      { id: 5, name: \"Canceled\" },\n    ],\n  };\n  const handleSelectTab = (value) => {\n    setCurrentTab(value);\n  };\n  switch (props.match.params.name) {\n    case \"my-order\":\n      return (\n        <Fragment>\n          <div className=\"panel-content-wrapper\">\n            <Tabs\n              boxWidth={\"10%\"}\n              tabs={TabList.tab1}\n              current={currentTab}\n              selectItem={handleSelectTab}\n              fixed={true}\n            />\n            <OrderDetail type={type} />\n          </div>\n        </Fragment>\n      );\n    case \"order-history\":\n      return (\n        <Fragment>\n          <div className=\"panel-content-wrapper\">\n            <OrderHistory />\n          </div>\n        </Fragment>\n      );\n    default:\n      return (\n        <div className=\"panel-container\">\n          <div className=\"panel-center\">ABC</div>\n        </div>\n      );\n  }\n}\n\nexport default OrderPanel;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductPanel.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/Sidebar/Sidebar.js",["1156","1157","1158","1159"],"import \"./Sidebar.scss\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  faShoppingBag,\n  faUtensils,\n  faChartLine,\n  faDollarSign,\n  faCaretDown,\n  faCaretUp,\n  faStore,\n  faBullhorn,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { useLocation, withRouter } from \"react-router-dom\";\nimport { faSpeakerDeck } from \"@fortawesome/free-brands-svg-icons\";\n\nconst sidebarFeatures = [\n  {\n    id: 0,\n    icon: faStore,\n    title: \"Store\",\n    name: \"provider\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"general\",\n        title: \"My restaurant\",\n        link: \"provider/general\",\n      },\n    ],\n  },\n  {\n    id: 1,\n    icon: faShoppingBag,\n    name: \"order\",\n    title: \"Orders\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"my-order\",\n        title: \"My Order\",\n        link: \"order/my-order\",\n      },\n      {\n        id: 2,\n        name: \"order-history\",\n        title: \"Order History\",\n        link: \"order/order-history\",\n      },\n    ],\n  },\n  {\n    id: 2,\n    icon: faUtensils,\n    name: \"product\",\n    title: \"Products\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"my-product\",\n        title: \"My Products\",\n        link: \"product/my-product\",\n      },\n    ],\n  },\n  {\n    id: 3,\n    icon: faDollarSign,\n    name: \"revenue\",\n    title: \"Revenue\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"business-revenue\",\n        title: \"Revenue Management\",\n        link: \"revenue/business-revenue\",\n      },\n    ],\n  },\n  {\n    id: 4,\n    icon: faBullhorn,\n    name: \"marketing\",\n    title: \"Marketing\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"promotion\",\n        title: \"Promotions & Vouchers\",\n        link: \"marketing/promotion\",\n      },\n    ],\n  },\n  {\n    id: 5,\n    icon: faChartLine,\n    name: \"business-insight\",\n    title: \"Insights\",\n    subFeatures: [\n      {\n        id: 1,\n        name: \"business-insight\",\n        title: \"Business Insight\",\n        link: \"insights/business-insight\",\n      },\n      // Orders trend is a line chart showing the performance of your show over time (real-time, yesterday, 7 days, 30 days)\n      //{ id: 3, title: \"Product Rankings\", link: \"businessInsight?type=3\" },\n      // Product rankings including Sales, Units Sold and Page Views\n      // Sales: Top 10 products according to total sales value of confirmed orders\n      // Units Sold: Top 10 products according to total number of units sold in confirmed orders\n      // Page Views: Top 10 products according to total number of product views\n    ],\n  },\n];\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const [selectedFeature, setSelectedFeature] = useState([0, 1]);\n  const [showFeatures, setShowFeatures] = useState({\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n  });\n\n  const handleSelectFeature = (id) => (e) => {\n    e.preventDefault();\n    setShowFeatures((state) => ({\n      ...state,\n      [id]: !state[id],\n    }));\n  };\n\n  const { match, user, provider } = props;\n  const mappingDashboard = (destination) => {\n    props.history.push(`${match.path}/${destination}`);\n  };\n  return (\n    <div className=\"sb-wrapper\">\n      <div className=\"u-pf-sb-header\">\n        <img\n          src={provider.provider.avatar}\n          alt=\"provider_profile_image\"\n          className=\"pro-sb-profile-image\"\n        />\n        <div className=\"u-pf-sb-profile-text-wrapper\">\n          <span className=\"u-pf-sb-pt-main-text\">\n            {provider.provider.merchant_name}\n          </span>\n          <span className=\"u-pf-sb-pt-sub-text\">\n            $ {provider.provider.price_range}\n          </span>\n          <span className=\"u-pf-sb-pt-sub-text\">\n            {provider.provider.order_totals} orders\n          </span>\n        </div>\n      </div>\n      {sidebarFeatures.map((feature) => (\n        <div className=\"sb-detail-wrapper\" key={feature.id}>\n          <div\n            className=\"sb-feature-row\"\n            style={\n              location.pathname.split(\"/\")[2] === feature.name &&\n              showFeatures[feature.id]\n                ? { backgroundColor: \"#E6E6E6\" }\n                : {}\n            }\n          >\n            <FontAwesomeIcon className=\"sb-icon\" icon={feature.icon} />\n            <span className=\"sb-feature-text\">{feature.title}</span>\n            <FontAwesomeIcon\n              className=\"sb-dropdown-icon\"\n              onClick={handleSelectFeature(feature.id)}\n              icon={showFeatures[feature.id] ? faCaretDown : faCaretUp}\n            />\n          </div>\n          {showFeatures[feature.id] ? (\n            feature.subFeatures.map((item) => (\n              <div\n                className=\"sb-sub-feature-row\"\n                onClick={() => {\n                  setSelectedFeature([feature.id, item.id]);\n                  mappingDashboard(`${item.link}`);\n                }}\n                style={\n                  location.pathname.split(\"/\")[3] === item.name\n                    ? {\n                        backgroundColor: \"#F4F4F4\",\n                      }\n                    : {}\n                }\n                key={item.id}\n              >\n                <span className=\"sidebar-feature-text\" key={item.id}>\n                  {item.title}\n                </span>\n              </div>\n            ))\n          ) : (\n            <></>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Sidebar));\n\n/*\n\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faUtensils} />\n        <span className=\"sb-feature-text\">My Products</span>\n      </div>\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faShippingFast} />\n        <span className=\"sb-feature-text\">Shipment</span>\n      </div>\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faChartLine} />\n        <span className=\"sb-feature-text\">Business Insights</span>\n      </div>\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faStarHalfAlt} />\n        <span className=\"sb-feature-text\">Ratings</span>\n      </div>\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faBullhorn} />\n        <span className=\"sb-feature-text\">Marketing</span>\n      </div>\n      <div className=\"sb-feature-row\">\n        <FontAwesomeIcon className=\"sb-icon\" icon={faFunnelDollar} />\n        <span className=\"sb-feature-text\">Revenue</span>\n      </div>\n\n      <div className=\"sb-feature-row\" style={{ marginTop: \"150px\" }}>\n        <FontAwesomeIcon className=\"sb-icon\" icon={faUserCog} />\n        <span className=\"sb-feature-text\">Settings</span>\n      </div>\n*/\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/ProductAction/ProductAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDHeader/PDHeader.js",["1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172"],"import { withRouter } from \"react-router-dom\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport NavBar from \"../../Commons/Layout/NavBar/NavBar\";\nimport Footer from \"../../Commons/Layout/Footer/Footer\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport ToolBar from \"../../Commons/Layout/Toolbar/Toolbar\";\nimport VoucherToolBar from \"../../Commons/Layout/Toolbar/VoucherToolbar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport {\n  faClock,\n  faHeart as faHeart2,\n  faMapMarkerAlt,\n  faStar,\n  faCalendarPlus,\n  faComment,\n  faClipboard,\n  faCopy,\n  faSearch,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport Background from \"assets/home_banner.png\";\nimport \"../ProviderDetail.scss\";\nimport ProviderDetail from \"../ProviderDetail\";\nimport PropTypes from \"prop-types\";\nimport { getProviderByIdAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport { connect } from \"react-redux\";\n\nconst promotions = [\n  {\n    type: 1,\n    promotion_id: 100001,\n    promotion_code: \"FESTIVE10\",\n    promotion_name: \"FESTIVE10\",\n    promotion_value: 10,\n    promotion_description: \"Discount 10% product's price\",\n    min_order_value: 5,\n    max_discount_value: 5,\n    start_at: \"2022, March 21\",\n    expire_at: \"2022, April 12\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 10,\n    delivery_mode: 1,\n  },\n  {\n    type: 2,\n    promotion_id: 100002,\n    promotion_code: \"FREESHIP\",\n    promotion_name: \"FREESHIP\",\n    promotion_value: 10,\n    promotion_description: \"Discount €2.99 delivery free\",\n    min_order_value: 5,\n    max_discount_value: 3,\n    start_at: \"2022 March 21\",\n    expire_at: \"2022-April 13\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 5,\n    delivery_mode: 1,\n  },\n  {\n    type: 1,\n    promotion_id: 100003,\n    promotion_code: \"FESTIVE15\",\n    promotion_name: \"FESTIVE15\",\n    promotion_value: 10,\n    promotion_description: \"Discount 10% product's price\",\n    min_order_value: 5,\n    max_discount_value: 3,\n    start_at: \"2022 March-21\",\n    expire_at: \"2022-April-13\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 5,\n    delivery_mode: 1,\n  },\n  {\n    type: 1,\n    promotion_id: 100004,\n    promotion_code: \"FESTIVE20\",\n    promotion_name: \"FESTIVE20\",\n    promotion_value: 10,\n    promotion_description: \"Discount 20% product's price\",\n    min_order_value: 5,\n    max_discount_value: 3,\n    start_at: \"2022 March-21\",\n    expire_at: \"2022-April-13\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 5,\n    delivery_mode: 1,\n  },\n  {\n    type: 1,\n    promotion_id: 100005,\n    promotion_code: \"FESTIVE20\",\n    promotion_name: \"FESTIVE20\",\n    promotion_value: 10,\n    promotion_description: \"Discount 20% product's price\",\n    min_order_value: 10,\n    max_discount_value: 20,\n    start_at: \"2022 March-21\",\n    expire_at: \"2022-April-13\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 5,\n    delivery_mode: 1,\n  },\n  {\n    type: 1,\n    promotion_id: 100006,\n    promotion_code: \"FESTIVE25\",\n    promotion_name: \"FESTIVE25\",\n    promotion_value: 10,\n    promotion_description: \"Discount 25% product's price\",\n    min_order_value: 25,\n    max_discount_value: 5,\n    start_at: \"2022 March-21\",\n    expire_at: \"2022-April-13\",\n    limited_offer: 1,\n    weekly_usage_limit_per_user: 5,\n    delivery_mode: 1,\n  },\n];\n\nfunction PDHeader(props) {\n  const [providerDetail, setProviderDetail] = useState();\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  useEffect(() => {\n    async function fetchingDataAPI() {\n      const result = await props.getProviderByIdAPI(\n        props.match.params?.id,\n        1,\n        -1\n      ); //type = 1\n      setProviderDetail(result?.data);\n    }\n    fetchingDataAPI();\n  }, []);\n  return (\n    <Fragment>\n      {providerDetail && (\n        <Fragment>\n          <div className=\"p-d-header-container\">\n            <div className=\"p-d-provider-image\">\n              <img src={`${providerDetail.avatar}`} alt=\"provider_avatar\" />\n              <div className=\"p-d-provider-interaction-wrapper\">\n                <FontAwesomeIcon\n                  className=\"p-d-icon-for-liking\"\n                  style={{ zIndex: 1 }}\n                  icon={faHeart1}\n                />\n              </div>\n            </div>\n            <div className=\"p-d-provider-info\">\n              <div className=\"p-d-sub-head-title\">Restaurant</div>\n              <div className=\"p-d-title\">{providerDetail.merchant_name}</div>\n              <div className=\"p-d-note\">\n                € 0.49 Delivery Fee&nbsp;•&nbsp;Delivered in 35 to 45 min\n              </div>\n              <div className=\"p-d-sub-title-1\">\n                <div className=\"p-d-sub-title-content\">\n                  <FontAwesomeIcon className=\"p-d-icon\" icon={faMapMarkerAlt} />\n                  &nbsp;\n                  <span>{providerDetail.address}</span>\n                </div>\n              </div>\n              <div className=\"p-d-sub-title-1\">\n                <div className=\"p-d-sub-title-content\">\n                  <FontAwesomeIcon className=\"p-d-icon\" icon={faStar} />\n                  &nbsp;\n                  <span>\n                    {providerDetail.rating || 5}/5 (\n                    {providerDetail.rating_total || \"250\"} ratings)\n                  </span>\n                </div>\n                &nbsp;•&nbsp;\n                <span className=\"p-d-sub-title-content\">\n                  {providerDetail.dietary || \"Alergy-friendly\"}\n                </span>\n                &nbsp;•&nbsp;\n                <span className=\"p-d-sub-title-content\">\n                  {providerDetail.price_range}\n                </span>\n              </div>\n              <div className=\"p-d-sub-title-2\">\n                <FontAwesomeIcon className=\"p-d-icon\" icon={faClock} />\n                &nbsp;\n                <span className=\"p-d-sub-title-content\">\n                  Open until 17:00 PM\n                  <br />\n                  <span style={{ fontSize: \"12px\" }}>\n                    Every day: 10:00 AM - 17:00 PM\n                  </span>\n                </span>\n              </div>\n              <ButtonGroup\n                float=\"flex-end\"\n                gap={10}\n                mgRight={5}\n                mgTop={10}\n                mgBottom={10}\n              >\n                <Button\n                  prefix={<FontAwesomeIcon icon={faComment} />}\n                  color={\"black\"}\n                  bgColor={\"#ECECEC\"}\n                  justifyContent={\"center\"}\n                  label={\"Feedback\"}\n                  width={100}\n                  height={30}\n                />\n                <Button\n                  color={\"black\"}\n                  bgColor={\"#ECECEC\"}\n                  justifyContent={\"center\"}\n                  label={\"Schedule\"}\n                  prefix={<FontAwesomeIcon icon={faCalendarPlus} />}\n                  width={100}\n                  height={30}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nPDHeader.propTypes = {\n  getProviderByIdAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(connect(null, { getProviderByIdAPI })(PDHeader));\n\n/*\n<div className=\"p-d-promotion\">\n              <div className=\"p-d-promotion-container\">\n                {promotions?.map((promotion) => (\n                  <div className=\"promotion-items-wrapper\">\n                    <div className=\"promotion-icon\">\n                      <svg\n                        width=\"27px\"\n                        height=\"18px\"\n                        viewBox=\"0 0 26 19\"\n                        className=\"icon\"\n                        style={{\n                          fill: \"#9c1818\",\n                        }}\n                      >\n                        <g transform=\"translate(-18 -22)\" fillRule=\"evenodd\">\n                          <path\n                            d=\"M42.632 29.207c.591 0 1.07-.461 1.07-1.03V23.03c0-.569-.479-1.03-1.07-1.03H19.07C18.48 22 18 22.461 18 23.03v5.147c0 .569.48 1.03 1.071 1.03 1.22 0 2.142.885 2.142 2.059 0 1.174-.921 2.06-2.142 2.06-.591 0-1.071.46-1.071 1.029v5.147c0 .569.48 1.03 1.071 1.03h23.56c.592 0 1.072-.461 1.072-1.03v-5.147c0-.569-.48-1.03-1.071-1.03-1.221 0-2.142-.885-2.142-2.059 0-1.174.921-2.06 2.142-2.06zm-15.529-3.089c.887 0 1.607.692 1.607 1.545 0 .852-.72 1.544-1.607 1.544s-1.606-.692-1.606-1.544c0-.853.72-1.545 1.606-1.545zM34.6 36.414c-.887 0-1.607-.692-1.607-1.545 0-.852.72-1.544 1.607-1.544s1.606.692 1.606 1.544c0 .853-.72 1.545-1.606 1.545zm-8.032.426l-1.515-1.456 10.082-9.692 1.515 1.456-10.082 9.692z\"\n                            fillRule=\"nonzero\"\n                          ></path>\n                        </g>\n                      </svg>\n                    </div>\n                    <div className=\"promotion-separator\"></div>\n                    <div className=\"promotion-content-wrapper\">\n                      <span className=\"promotion-head-text\">\n                        {promotion.promotion_code}\n                      </span>\n                      <span className=\"promotion-main-text\">\n                        {promotion.promotion_description}\n                      </span>\n                      <span className=\"promotion-sub-text\">\n                        Expire at {promotion.expire_at}\n                      </span>\n                    </div>\n                    <div\n                      className=\"promotion-icon\"\n                      style={{ backgroundColor: \"unset\" }}\n                    >\n                      <FontAwesomeIcon\n                        className=\"promotion-tail-icon\"\n                        icon={faCopy}\n                        onClick={() => {\n                          navigator.clipboard.writeText(\n                            promotion.promotion_code\n                          );\n                        }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"p-d-promotion-footer\">\n                <input className=\"p-d-promotion-search-box\" />\n                <Button\n                  prefix={\n                    <FontAwesomeIcon\n                      icon={faSearch}\n                      style={{ color: \"white\" }}\n                    />\n                  }\n                  color={\"white\"}\n                  bgColor={\"#3c3c3c\"}\n                  buttonType=\"primary\"\n                  justifyContent={\"center\"}\n                  gap={10}\n                  width={80}\n                  height={34}\n                  radius={\"0px\"}\n                  label={\"Find\"}\n                  fontSize={13}\n                />\n              </div>\n            </div>\n\n*/\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDBody.js",["1173","1174"],"import { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart as faHeart2,\n  faBars,\n  faPlus,\n  faChevronDown,\n  faChevronUp,\n  faCartPlus,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport moment from \"moment\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport PDProductDetail from \"components/ProviderDetail/PDBody/PDProductDetail/PDProductDetail\";\nimport PDUpcomingProduct from \"components/ProviderDetail/PDBody/PDUpcomingProduct/PDUpcomingProduct\";\nimport { clearCart } from \"store/actions/CartAction/CartAction\";\nimport { scroller } from \"react-scroll\";\nimport { faStar } from \"@fortawesome/fontawesome-free-solid\";\nimport Avatar from \"assets/avatar.jpg\";\nimport \"../ProviderDetail.scss\";\n\nfunction PDBody({\n  products,\n  upcomingProducts,\n  customerReviews,\n  getUpcomingProductAPI,\n  user,\n  ...rest\n}) {\n  const getDifference = (date1, date2) => {\n    var a = moment([date1.getFullYear(), date1.getMonth(), date1.getDate()]);\n    var b = moment([date2.getFullYear(), date2.getMonth(), date2.getDate()]);\n    return a.from(b);\n  };\n  const [showProductDetail, setShowProductDetail] = useState(false);\n  const [selectedMenu, setSelectedMenu] = useState(-1);\n  const [showUpcomingProductDetail, setShowUpcomingProductDetail] =\n    useState(false);\n  const [selectedProductDetail, setSelectedProductDetail] = useState();\n  const [selectedUpcomingProductDetail, setSelectedUpcomingProductDetail] =\n    useState();\n  const [showCustomerReview, setShowCustomerReview] = useState(false);\n  const [showRemoveCartDialog, setShowRemoveCartDialog] = useState(false);\n\n  const scrollToSection = (sectionName) => {\n    scroller.scrollTo(sectionName, {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\",\n      offset: -100,\n    });\n  };\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n\n  const clearCartItem = (id) => {\n    async function clearCartItem(id) {\n      await rest.clearCart(\n        id,\n        parseInt(rest.match.params.id),\n        user?.currentProvider?.data?.merchant_name\n      );\n    }\n    clearCartItem(user.profile?.user_id);\n    setShowRemoveCartDialog(false);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"p-d-body-container\">\n        <div className=\"pd-sb-menu-category-container\">\n          <span className=\"pd-sb-cart-info-wrapper\">\n            <span className=\"pd-sb-cart-info-main-text\">\n              <FontAwesomeIcon className=\"pd-sb-icon\" icon={faCartPlus} />\n              <span>3 items in your cart</span>\n            </span>\n          </span>\n          <span className=\"pd-sb-menu-title\">\n            <FontAwesomeIcon className=\"pd-sb-icon\" icon={faBars} />\n            <span>Menu</span>\n          </span>\n          <div className=\"pd-sb-menu-category\">\n            {upcomingProducts.length !== 0 && (\n              <span\n                className={`pd-sb-menu-item  ${\n                  selectedMenu === -1 ? \"selected-menu\" : \"\"\n                }`}\n                onClick={() => {\n                  setSelectedMenu(-1);\n                  scrollToSection(`product-group-upcoming`);\n                }}\n              >\n                Upcoming\n              </span>\n            )}\n            {products?.length !== 0 &&\n              products.map((product, index) => (\n                <Fragment key={index}>\n                  <span\n                    className={`pd-sb-menu-item ${\n                      selectedMenu === product.menu_category_id\n                        ? \"selected-menu\"\n                        : \"\"\n                    }`}\n                    onClick={() => {\n                      setSelectedMenu(product.menu_category_id);\n                      scrollToSection(\n                        `product-group-${product.menu_category_id}`\n                      );\n                    }}\n                  >\n                    {product.menu_category_name}\n                  </span>\n                </Fragment>\n              ))}\n          </div>\n        </div>\n        <div className=\"pd-pl-product-list\">\n          <div className=\"pd-pl-feedback-container\">\n            <div className=\"pd-pl-title-wrapper\">\n              <div\n                className=\"pd-fb-counter\"\n                style={{\n                  padding: `3px ${\n                    customerReviews.length < 10 ? \"10px\" : \"0px\"\n                  }`,\n                }}\n              >\n                {customerReviews?.length}\n              </div>\n              <span className=\"pd-pl-title\">Customer Review</span>\n              <FontAwesomeIcon\n                icon={!showCustomerReview ? faChevronDown : faChevronUp}\n                className=\"pd-sb-icon-extent\"\n                onClick={() => {\n                  setShowCustomerReview((prev) => !prev);\n                }}\n              />{\" \"}\n            </div>\n            {showCustomerReview ? (\n              <div className=\"customer-review-container\">\n                {customerReviews?.map((review) => (\n                  <div className=\"customer-review-wrapper\">\n                    <img\n                      src={\n                        \"https://cdn2.iconfinder.com/data/icons/flatfaces-everyday-people-square/128/beard_male_man_face_avatar-512.png\"\n                      }\n                      alt=\"avatar\"\n                      className=\"cr-customer-avatar\"\n                      width={50}\n                      height={50}\n                    />\n                    <div className=\"cr-content-container\">\n                      <div className=\"cr-text-wrapper\">\n                        <span className=\"cr-main-text-wrapper\">\n                          {review.customer_info?.username}\n                        </span>\n                        <span className=\"cr-sub-text-wrapper\">\n                          {[...Array(review.stars || 5)].map((e, index) => (\n                            <FontAwesomeIcon\n                              key={index}\n                              icon={faStar}\n                              className=\"md-text-icon\"\n                              style={{\n                                color: \"rgb(255, 221, 0)\",\n                                fontSize: 16,\n                              }}\n                            />\n                          ))}\n                          {[...Array(5 - (review.stars || 5))].map(\n                            (e, index) => (\n                              <FontAwesomeIcon\n                                key={index}\n                                icon={faStar}\n                                className=\"md-text-icon\"\n                                style={{\n                                  color: \"rgb(200, 200, 200)\",\n                                  fontSize: 16,\n                                }}\n                              />\n                            )\n                          )}\n                          {`(${review.stars?.toFixed(1)} / 5.0)`}\n                        </span>\n                        <span className=\"cr-sub-text-wrapper\">\n                          {getDifference(\n                            new Date(review.create_at.split(\"T\")[0]),\n                            new Date()\n                          )}\n                        </span>\n                      </div>\n                      <span className=\"cr-comment\">{review.content}</span>\n                      {review.image && (\n                        <img\n                          className=\"cr-image-review\"\n                          src={review?.image}\n                          alt=\"image_review\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <span className=\"pd-fb-sub-text\">\n                {customerReviews?.length} customer reviews for this restaurant\n              </span>\n            )}\n          </div>\n          {upcomingProducts.length !== 0 && (\n            <div className={`pd-pl-title product-group-upcoming`}>Upcoming</div>\n          )}\n\n          <div className=\"pd-pl-upcoming-product-group\">\n            {upcomingProducts?.map((up) => (\n              <Fragment>\n                <div\n                  className=\"pd-pl-upcoming-product-item\"\n                  onClick={() => {\n                    setShowUpcomingProductDetail(true);\n                    setSelectedUpcomingProductDetail(up);\n                  }}\n                >\n                  <div className=\"pd-pl-up-img-wrapper\">\n                    <img\n                      className=\"pd-pl-up-product-img\"\n                      src={up.product_image}\n                      alt=\"product_photo\"\n                    />\n                  </div>\n                  <div\n                    className=\"pd-pl-up-tag-btn\"\n                    style={{\n                      width: \"auto\",\n                      marginRight: 5,\n                      marginTop: 0,\n                      backgroundColor: \"unset\",\n                      alignSelf: \"flex-end\",\n                    }}\n                  >\n                    <Tag text=\"New\" />\n                  </div>\n                  <div className=\"pd-pl-up-tag-btn\">\n                    <span className=\"pd-pl-up-main-text\">Coming soon</span>\n                  </div>\n                </div>\n              </Fragment>\n            ))}\n          </div>\n          {products?.length !== 0 &&\n            products.map((menu, index) => (\n              <Fragment key={index}>\n                <div\n                  className={`pd-pl-title product-group-${menu.menu_category_id}`}\n                >\n                  {menu.menu_category_name}\n                </div>\n                {menu.products.length > 3 ? (\n                  <div className=\"pd-pl-product-group\">\n                    {menu.products.map((product) => (\n                      <div\n                        className=\"pd-pl-product-item\"\n                        onClick={() => {\n                          setShowProductDetail(true);\n                          setSelectedProductDetail(product);\n                        }}\n                        key={product.product_id}\n                      >\n                        <div className=\"pd-pl-img-wrapper\">\n                          <img\n                            className=\"pd-pl-product-img\"\n                            src={\n                              product.product_image ||\n                              \"https://www.lyon-ortho-clinic.com/files/cto_layout/img/placeholder/camera.jpg\"\n                            }\n                            alt=\"product_photo\"\n                          />\n                        </div>\n                        <div className=\"pd-pl-quantity-btn\">\n                          {!user?.userCart?.cart?.filter(\n                            (item) =>\n                              item.product_id === parseInt(product.product_id)\n                          )[0]?.quantity ? (\n                            <FontAwesomeIcon\n                              icon={faPlus}\n                              className=\"inc-des-button\"\n                              onClick={() => {\n                                setShowProductDetail(true);\n                                setSelectedProductDetail(product);\n                              }}\n                            />\n                          ) : (\n                            <span className=\"inc-des-button-2\">\n                              {\n                                user.userCart?.cart.filter(\n                                  (item) =>\n                                    item.product_id ===\n                                    parseInt(product.product_id)\n                                )[0]?.quantity\n                              }\n                            </span>\n                          )}\n                        </div>\n                        <span className=\"pd-pl-text\">\n                          {product.product_name}\n                        </span>\n                        <span className=\"pd-pl-sub-text\">\n                          € {product.price?.toFixed(2)}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"pd-pl-product-group-2\">\n                    {menu.products.map((product) => (\n                      <div\n                        className=\"pd-pl-product-item-2\"\n                        onClick={() => {\n                          setShowProductDetail(true);\n                          setSelectedProductDetail(product);\n                        }}\n                        key={product.product_id}\n                      >\n                        <div className=\"pd-pl-img-wrapper\">\n                          <img\n                            className=\"pd-pl-product-img\"\n                            src={\n                              product.product_image ||\n                              \"https://www.lyon-ortho-clinic.com/files/cto_layout/img/placeholder/camera.jpg\"\n                            }\n                            alt=\"product_photo\"\n                          />\n                        </div>\n                        <div className=\"pd-pl-content-wrapper\">\n                          <span className=\"pd-pl-text\">\n                            {product.product_name}\n                          </span>\n                          <span className=\"pd-pl-sub-text\">\n                            € {product.price?.toFixed(2)}\n                          </span>\n                          <span\n                            className=\"pd-pl-sub-text\"\n                            style={{ height: 70 }}\n                          >\n                            {product.description?.length > 5\n                              ? product.description\n                              : `Have you tried ${product.product_name} with the taste from this restaurant? If not, why don't you order now?`}\n                          </span>\n                          <div className=\"pd-pl-quantity-btn-horizontal\">\n                            {!user?.userCart?.cart?.filter(\n                              (item) =>\n                                item.product_id === parseInt(product.product_id)\n                            )[0]?.quantity ? (\n                              <FontAwesomeIcon\n                                icon={faPlus}\n                                className=\"inc-des-button-horizontal\"\n                                onClick={() => {\n                                  setShowProductDetail(true);\n                                  setSelectedProductDetail(product);\n                                }}\n                              />\n                            ) : (\n                              <span className=\"inc-des-button-2-horizontal\">\n                                {\n                                  user.userCart?.cart.filter(\n                                    (item) =>\n                                      item.product_id ===\n                                      parseInt(product.product_id)\n                                  )[0]?.quantity\n                                }\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </Fragment>\n            ))}\n        </div>\n        <Modal\n          openModal={showProductDetail}\n          closeModal={() => {\n            setShowProductDetail(false);\n          }}\n          title={\"Product Detail\"}\n          width={35}\n          height={600}\n          heightAuto={true}\n          padding=\"0% 0%\"\n          hideHeader={true}\n        >\n          <PDProductDetail\n            setShowProductDetail={setShowProductDetail}\n            setShowRemoveCartDialog={setShowRemoveCartDialog}\n            productItem={selectedProductDetail}\n          />\n        </Modal>\n        <DialogBox\n          visibility={showRemoveCartDialog}\n          headerText={\"Remove\"}\n          close={() => setShowRemoveCartDialog(false)}\n        >\n          <div className=\"dialog-detail-wrapper\">\n            <div className=\"dialogbox-content\">\n              <span className=\"dialogbox-content-detail-main\">\n                Are you sure you want to change to another restaurant?\n              </span>\n              <span className=\"dialogbox-content-detail-sub\">\n                All your previous cart items will be cleared. You can't undo\n                this action.\n              </span>\n            </div>\n            <div className=\"dialogbox-action\">\n              <ButtonGroup gap={5} mgRight={5}>\n                <Button\n                  color={\"black\"}\n                  bgColor={\"#ECECEC\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={80}\n                  height={30}\n                  label={\"Cancel\"}\n                  onClick={() => {\n                    setShowRemoveCartDialog(false);\n                  }}\n                />\n                <Button\n                  color={\"white\"}\n                  bgColor={\"#800000\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={80}\n                  height={30}\n                  label={\"OK\"}\n                  onClick={clearCartItem}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </DialogBox>\n        <Modal\n          openModal={showUpcomingProductDetail}\n          closeModal={() => {\n            setShowUpcomingProductDetail(false);\n          }}\n          title={\"Coming soon\"}\n          width={35}\n          height={670}\n          padding=\"0% 0%\"\n          headerColor=\"#900d09\"\n          headerFontWeight={700}\n          header\n          hideHeader={true}\n        >\n          <PDUpcomingProduct\n            setShowProductDetail={setShowUpcomingProductDetail}\n            upcomingProduct={selectedUpcomingProductDetail}\n          />\n        </Modal>\n      </div>\n    </Fragment>\n  );\n}\n\nPDBody.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  clearCart: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, { clearCart })(PDBody));\n\n/*\n {!isButtonExpanded ? (\n                      <div className=\"pd-pl-quantity-btn\">\n                        <FontAwesomeIcon\n                          icon={faPlus}\n                          className=\"inc-des-button\"\n                          onClick={() => setIsButtonExpanded((prev) => !prev)}\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"pd-pl-quantity-btn-open\" ref={ref}>\n                        <FontAwesomeIcon\n                          icon={faMinus}\n                          className=\"inc-des-button-open-left\"\n                        />\n                        <input\n                          className=\"inc-des-value\"\n                          type=\"number\"\n                          id=\"number\"\n                          value=\"1\"\n                        />\n                        <FontAwesomeIcon\n                          icon={faPlus}\n                          className=\"inc-des-button-open-right\"\n                        />\n                      </div>\n                    )}*/\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/ProviderList/ProviderList.js",["1175","1176","1177","1178","1179","1180"],"import { Fragment } from \"react\";\nimport \"./ProviderList.css\";\nimport ProviderImage1 from \"../../../../assets/ProviderImage/ProviderImage1.jpg\";\nimport ProviderImage2 from \"../../../../assets/ProviderImage/ProviderImage2.jpg\";\nimport ProviderImage3 from \"../../../../assets/ProviderImage/ProviderImage3.jpg\";\nimport ProviderImage4 from \"../../../../assets/ProviderImage/ProviderImage4.jpg\";\nimport ProviderImage5 from \"../../../../assets/ProviderImage/ProviderImage5.jpg\";\nimport ProviderImage6 from \"../../../../assets/ProviderImage/ProviderImage6.jpg\";\n\nfunction ProviderList(props) {\n  return (\n    <Fragment>\n      <div className=\"provider-list-wrapper\">\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage1} />\n          </div>\n          <span className=\"provider-name\">\n            Pizza Hut - For the love of Pizza\n          </span>\n          <span className=\"provider-address\">\n            543/65 Nguyen Dinh Chieu, district 3, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage2} />\n          </div>\n          <span className=\"provider-name\">\n            Kentucky Fried Chicken - Tasty Til The Last Drop\n          </span>\n          <span className=\"provider-address\">\n            12 Bui Thi Xuan, district 1, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage3} />\n          </div>\n          <span className=\"provider-name\">\n            Thai Express - Best HotPot In The World\n          </span>\n          <span className=\"provider-address\">\n            76 Nguyen Thi Minh Khai, district 3, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage4} />\n          </div>\n          <span className=\"provider-name\">\n            Baskin Robin - Freeze The Summer\n          </span>\n          <span className=\"provider-address\">\n            65 Nguyen Thien Thuat, district 3, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage5} />\n          </div>\n          <span className=\"provider-name\">\n            Phuc Long - For The Happiness and Smile\n          </span>\n          <span className=\"provider-address\">\n            150 Vo Van Tan, district 3, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n\n        <div className=\"provider-card\">\n          <div className=\"provider-photo\">\n            <img src={ProviderImage6} />\n          </div>\n          <span className=\"provider-name\">\n            Burger King - Real Beef and Nice Bun\n          </span>\n          <span className=\"provider-address\">\n            24 Nguyen Tri Phuong, district 5, Ho Chi Minh City\n          </span>\n          <div className=\"provider-rate\"></div>\n          <div className=\"further-more\">More Details</div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ProviderList;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Breadcrumbs/Breadcrumbs.js",["1181"],"import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport useBreadcrumbs from \"use-react-router-breadcrumbs\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleRight,\n  faAngleDoubleLeft,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport \"./Breadcrumbs.scss\";\nimport { routes } from \"config/routes\";\nconst Breadcrumbs = (props) => {\n  const breadcrumbs = useBreadcrumbs(routes);\n  const isLast = (ci) => {\n    return ci === breadcrumbs.length - 1;\n  };\n  const [breadcrumbVisibility, setBreadcrumbVisibility] = useState(false);\n  return (\n    <>\n      <FontAwesomeIcon\n        className=\"breadcrumb-icon\"\n        icon={!breadcrumbVisibility ? faAngleDoubleRight : faAngleDoubleLeft}\n        onClick={() => {\n          setBreadcrumbVisibility((prev) => !prev);\n        }}\n      />\n      {breadcrumbVisibility ? (\n        <div className=\"breadcrumb\">\n          {breadcrumbs.map(({ match, breadcrumb }, index) =>\n            breadcrumbs.length > 0 && breadcrumbs.length <= 6 ? (\n              <li key={match.url}>\n                <Link className=\"prev-crumbs\" to={match.url}>\n                  <span>{breadcrumb}</span>\n                </Link>\n              </li>\n            ) : (\n              <></>\n            )\n          )}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Breadcrumbs;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/ApplyPromotion.js",["1182","1183","1184"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ApplyPromotion.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getScheduleTime } from \"store/actions/ProviderAction/ProviderAction\";\nimport { getOrderPromotionDetailAPI } from \"store/actions/OrderAction/OrderAction\";\n\nfunction ApplyPromotion(props) {\n  const { user, promotions } = props;\n  const [promotionType, setPromotionType] = useState(0);\n  const [promotionInvalid, setPromotionInvalid] = useState(false);\n  const [promotionSelected, setPromotionSelected] = useState(\n    promotions[0]?.code || \"\"\n  );\n  return (\n    <Fragment>\n      <div className=\"schedule-order-container\">\n        <span className=\"sch-o-head-text\">Pick a promotion</span>\n        <div className=\"sch-o-dropdown-date-container\">\n          <div className=\"sch-o-select-label\" style={{ width: 100 }}>\n            Promotion:\n          </div>\n          <select\n            className=\"sch-o-select-container\"\n            onChange={(e) => {\n              setPromotionInvalid(false);\n              if (e.target.value[0] === \"P\") setPromotionType(1);\n              else setPromotionType(2);\n              setPromotionSelected(e.target.value);\n            }}\n          >\n            <option value=\"\" disabled defaultChecked={true}>\n              Select a promotion...\n            </option>\n            {promotions?.promotion?.map((p, index) => (\n              <option\n                value={p.code}\n                key={index}\n              >{`${p.code} - ${p.description}`}</option>\n            ))}\n            {promotions?.ecoupon?.map((p, index) => (\n              <option\n                value={p.code}\n                key={index}\n              >{`${p.code} - ${p.description}`}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"order-detail-promotion\">\n          <span>\n            Order subtotal: <b>$ {props.orderForm.subtotal}</b>\n          </span>\n          <span>\n            Delivery fee: <b>$ {props.orderForm.delivery_fee.toFixed(2)}</b>\n          </span>\n          {promotionSelected && (\n            <Fragment>\n              <span style={{ color: \"red\" }}>\n                Promotion code: {promotionSelected}\n              </span>\n            </Fragment>\n          )}\n          {promotionInvalid && (\n            <span style={{ color: \"red\" }}>\n              Unable to apply this promotion code\n            </span>\n          )}\n        </div>\n        <ButtonGroup\n          width={90}\n          float={\"flex-end\"}\n          mgTop={20}\n          gap={30}\n          mgBottom={10}\n        >\n          <Button\n            color={\"white\"}\n            bgColor={\"black\"}\n            justifyContent={\"center\"}\n            gap={\"10px\"}\n            width={140}\n            fontSize={13}\n            height={30}\n            label={\"Select promotion\"}\n            onClick={() => {\n              if (promotionType === 1) {\n                let promo = promotions.promotion.filter(\n                  (item) => item.code === promotionSelected\n                )[0];\n                if (\n                  props.orderForm.subtotal < promo.min_order_value ||\n                  props.orderForm.subtotal > promo.max_discount_value\n                ) {\n                  setPromotionInvalid(true);\n                  return;\n                }\n                props.setOrderForm((prevState) => ({\n                  ...prevState,\n                  promotion_code: promotionSelected,\n                  ecoupon_code: \"\",\n                }));\n              } else if (promotionType === 2) {\n                let promo = promotions.ecoupon.filter(\n                  (item) => item.code === promotionSelected\n                )[0];\n                if (\n                  props.orderForm.subtotal < promo.min_order_value ||\n                  props.orderForm.subtotal > promo.max_discount_value\n                ) {\n                  setPromotionInvalid(true);\n                  return;\n                }\n                props.setOrderForm((prevState) => ({\n                  ...prevState,\n                  promotion_code: \"\",\n                  ecoupon_code: promotionSelected,\n                }));\n              } else {\n                return;\n              }\n              props.closeModal();\n            }}\n          />\n        </ButtonGroup>\n      </div>\n    </Fragment>\n  );\n}\n\nApplyPromotion.propTypes = {\n  user: PropTypes.object.isRequired,\n  getOrderPromotionDetailAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { getOrderPromotionDetailAPI })(ApplyPromotion)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderCheckout/OrderDetail/ScheduleOrder.js",["1185","1186"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ScheduleOrder.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getProviderScheduleTime } from \"store/actions/OrderAction/OrderAction\";\n\nfunction ScheduleOrder(props) {\n  const { user, getProviderScheduleTime } = props;\n  const [schedule, setSchedule] = useState([]);\n  const [scheduleDate, setScheduleDate] = useState([]);\n  const [scheduleTime, setScheduleTime] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchScheduleDateTime(id) {\n      const result = await getProviderScheduleTime(id);\n      console.log(result);\n      if (result) setSchedule(result);\n      setScheduleDate(result[0]?.day);\n      setScheduleTime(result[0]?.schedule_time[0]);\n    }\n    fetchScheduleDateTime(user?.userCart?.provider_id);\n  }, []);\n\n  const submitScheduleTime = () => {\n    var dateFormatted = `${scheduleDate} ${scheduleTime}`;\n    /*\n    var dateFormatted = `${pickedDay.getFullYear()}-${(\n      \"0\" +\n      (pickedDay.getMonth() + 1)\n    ).slice(-2)}-${(\"0\" + pickedDay.getDate()).slice(-2)} ${scheduleTime}`;\n    const sameDate = pickedDay.getDate() === current.getDate();\n    if (sameDate) {\n      var startTime = scheduleTime?.split(\" - \")[0];\n      var currentTime = `${current.getHours()}:${current.getMinutes()}`;\n\n      if (\n        startTime.split(\":\")[0] < current.getHours &&\n        startTime.split(\":\")[1] < current.getMinutes\n      ) {\n        setErrorMessage(\n          \"Picked schedule time cannot be lesser or equal to the current date time\"\n        );\n        return;\n      }\n    } else setErrorMessage(\"\");\n    const scheduleOnFormat = `${pickedDay.getFullYear()}-${pickedDay.getMonth()}-${pickedDay.getDate()} ${scheduleTime?.replace(\n      /\\s/g,\n      \"\"\n    )}`;\n    */\n    props.setOrderScheduleTime(dateFormatted);\n    props.closeModal();\n  };\n  return (\n    <Fragment>\n      <div className=\"schedule-order-container\">\n        <span className=\"sch-o-head-text\">Pick a time</span>\n        <div className=\"sch-o-dropdown-date-container\">\n          <div className=\"sch-o-select-label\">Date:</div>\n          <select\n            className=\"sch-o-select-container\"\n            onChange={(e) => {\n              setScheduleDate(e.target.value);\n            }}\n          >\n            <option value=\"\" disabled hidden>\n              Select a date...\n            </option>\n            {schedule.map((sch) => (\n              <option key={sch.day} value={sch.day}>\n                {sch.day}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"sch-o-dropdown-date-container\">\n          <div className=\"sch-o-select-label\">Time:</div>\n          <select\n            className=\"sch-o-select-container\"\n            disabled={!scheduleDate}\n            onChange={(e) => setScheduleTime(e.target.value)}\n          >\n            <option value=\"\" disabled hidden>\n              Select a time...\n            </option>\n            {schedule\n              .filter((sch) => sch.day === scheduleDate)\n              .map((time) =>\n                time?.schedule_time?.map((t) => (\n                  <option key={t} value={t}>\n                    {t}\n                  </option>\n                ))\n              )}\n          </select>\n        </div>\n        <span className=\"validate-schedule-time\">{errorMessage}</span>\n        <ButtonGroup\n          width={90}\n          float={\"flex-end\"}\n          mgTop={20}\n          gap={30}\n          mgBottom={10}\n        >\n          <Button\n            color={\"white\"}\n            bgColor={\"black\"}\n            justifyContent={\"center\"}\n            gap={\"10px\"}\n            width={100}\n            fontSize={13}\n            height={30}\n            label={\"Schedule\"}\n            onClick={() => submitScheduleTime()}\n          />\n        </ButtonGroup>\n      </div>\n    </Fragment>\n  );\n}\n\nScheduleOrder.propTypes = {\n  user: PropTypes.object.isRequired,\n  getProviderScheduleTime: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { getProviderScheduleTime })(ScheduleOrder)\n);\n/*\nconst SCHEDULE_DATE = 10;\nconst SCHEDULE_TIME = 48;\nconst day = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst month = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n*/\n/*useEffect(() => {\n    let scheduleDate = [];\n    let scheduleTime = [];\n    for (let i = 0; i < SCHEDULE_DATE; i++) {\n      var current = new Date();\n      current.setDate(new Date().getDate() + i);\n      scheduleDate.push(\n        `${i === 0 ? \"Today, \" : \"\"}${day[current.getDay()]}, ${\n          month[current.getMonth()]\n        } ${current.getDate()}`\n      );\n    }\n    setScheduleDate(scheduleDate);\n    for (let i = 1; i < SCHEDULE_TIME; i++) {\n      let time1 = `${(\"0\" + current.getHours()).slice(-2)}:${(\n        \"0\" + current.getMinutes()\n      ).slice(-2)} ${current.getHours >= 12 ? \"PM\" : \"AM\"}`;\n      var current = new Date();\n      current.setTime(i * 1800000);\n      let time2 = `${(\"0\" + current.getHours()).slice(-2)}:${(\n        \"0\" + current.getMinutes()\n      ).slice(-2)} ${current.getHours >= 12 ? \"PM\" : \"AM\"}`;\n      scheduleTime.push(time1 + \" - \" + time2);\n    }\n    setScheduleTime(scheduleTime);\n  }, []);*/\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/CategoryDetail.js",["1187","1188","1189","1190","1191","1192","1193"],"import React, { useEffect, useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faCaretRight,\n  faChevronRight,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { Link } from \"react-router-dom\";\nimport CategoryLevelOne from \"./CategoryLevelOne\";\nimport { getAllCategoryAPI } from \"store/actions/CategoryAction/CategoryAction\";\nimport \"./CategoryDetail.scss\";\n\nfunction CategoryDetail({\n  categoryContent,\n  setCategoryContent,\n  getAllCategoryAPI,\n  setShowCategoryLevel2,\n  showCategoryLevel2,\n}) {\n  const [categories, setCategories] = useState([]);\n  const [categoryLevel2, setCategoryLevel2] = useState([]);\n  const [featureIndex, setFeatureIndex] = useState(1);\n  useEffect(() => {\n    async function fetchAllCategory() {\n      const result = await getAllCategoryAPI();\n      setCategories(result);\n    }\n    fetchAllCategory();\n  }, []);\n  const [categoryLevelOneContent, setCategoryLevelOneContent] = useState({\n    content: \"item\",\n    enable: false,\n  });\n\n  if (categoryContent.enable) {\n    return (\n      <Fragment>\n        <div className=\"category-display\">\n          <div className=\"left-category-dropdown\">\n            {Object.keys(categories).map((key, index) => (\n              <Fragment key={index}>\n                <div\n                  className=\"category-level-one\"\n                  onClick={() => {\n                    setFeatureIndex(index);\n                    setCategoryLevel2(categories[key]);\n                    setShowCategoryLevel2(true);\n                  }}\n                  style={\n                    featureIndex === index\n                      ? {\n                          backgroundColor: \"#300000\",\n                          fontWeight: 700,\n                          color: \"#c59700\",\n                        }\n                      : {}\n                  }\n                >\n                  <span className=\"category-name\">\n                    {key.replaceAll(\"_\", \" \")}\n                  </span>\n                  <FontAwesomeIcon\n                    className={`${\n                      featureIndex === index\n                        ? \"nav-icon-surfix-selected\"\n                        : \"nav-icon-surfix\"\n                    }`}\n                    icon={faCaretRight}\n                  />\n                </div>\n              </Fragment>\n            ))}\n          </div>\n          {showCategoryLevel2 && (\n            <div className=\"left-category-dropdown-level-2\">\n              {categoryLevel2.map((item) => (\n                <div className=\"category-level-two\">\n                  <span className=\"category-name\">\n                    {item.category_name.replaceAll(\"_\", \" \")}\n                  </span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </Fragment>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nCategoryDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  getAllCategoryAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getAllCategoryAPI })(CategoryDetail)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ProgressBar/ProgressBar.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/Metric/Metric.js",["1194","1195"],"import { useState, useEffect, Fragment } from \"react\";\n\nconst Metric = ({\n  type,\n  onClick,\n  width,\n  height,\n  radius,\n  color,\n  bgColor,\n  fontSize,\n  children,\n  left,\n  right,\n  border,\n  ...rest\n}) => {\n  const metricStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flexStart\",\n    alignItems: \"center\",\n    width: width || \"20%\",\n    height: height || \"120px\",\n    backgroundColor: \"#FCFCFC\",\n    cursor: \"pointer\",\n    borderTop: \"4px solid #940000\",\n    color: color || \"black\",\n    fontSize: fontSize || \"13px\",\n    border: border || \"unset\",\n  };\n  const metricContentStyle = {\n    margin: \"20px 0\",\n    fontSize: rest.numericFontSize || 50,\n    fontWeight: 500,\n    color: rest.textColor || \"rgb(148, 0, 0)\",\n  };\n  const descriptionStyle = {\n    width: \"90%\",\n    fontSize: 12,\n  };\n  return (\n    <Fragment>\n      <div className=\"metric-wrapper\" onClick={onClick} style={metricStyle}>\n        {children}\n        {rest.numeric_data && (\n          <span style={metricContentStyle} className=\"metric-content\">\n            {rest.numeric_data}\n          </span>\n        )}\n        {rest.text && <span style={descriptionStyle}>{rest.text}</span>}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Metric;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SearchBar.js",["1196","1197","1198","1199","1200","1201"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faChevronDown } from \"@fortawesome/fontawesome-free-solid\";\nimport { useLocation, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./SearchBar.scss\";\n\nfunction NavBar(props) {\n  const [search, setSearch] = useState(\"\");\n  const [typeSearch, setTypeSearch] = useState(1);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [categoryType, setCategoryType] = useState(1);\n  const [categoryId, setCategoryId] = useState(1000001);\n  const typeText = [\"All\", \"Provider\", \"Product\", \"Category\"];\n  const executeSearch = () => {\n    //if type search is not category search\n    if (typeSearch !== 3) {\n      props.history.push(`/search?q=${search}&type=${typeSearch}`);\n      return;\n    }\n    props.history.push(\n      `/search?q=${search}&type=${typeSearch}&ctype=${categoryType}&cid=${categoryId}`\n    );\n  };\n  return (\n    <div className=\"search-bar-wrapper\">\n      <div\n        className=\"search-bar-type\"\n        onClick={() => setShowDropdown((prev) => !prev)}\n      >\n        <div className=\"search-type-dropdown\">\n          <span className=\"search-type-text\">{typeText[typeSearch]}</span>\n          <FontAwesomeIcon className=\"nav-icon-prefix\" icon={faChevronDown} />\n        </div>\n      </div>\n      {showDropdown && (\n        <div className=\"search-type-dropdown-show\">\n          <span\n            className=\"search-type-drop-down-text\"\n            onClick={(e) => {\n              setShowDropdown(false);\n              setTypeSearch(1);\n            }}\n          >\n            Provider\n          </span>\n          <span\n            className=\"search-type-drop-down-text\"\n            onClick={(e) => {\n              setShowDropdown(false);\n              setTypeSearch(2);\n            }}\n          >\n            Product\n          </span>\n        </div>\n      )}\n\n      <input\n        type=\"text\"\n        className=\"search-term\"\n        placeholder=\"What are you looking for?\"\n        onChange={(e) => setSearch(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            executeSearch();\n          }\n        }}\n      />\n      <div className=\"btn-search-wrapper\" onClick={() => executeSearch()}>\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n        <span className=\"btn-search-text\">Search</span>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(NavBar);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/OrderTracking/OrderStatus/ChatBox.js",["1202","1203","1204","1205"],"import withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"../OrderTracking.scss\";\nimport Avatar from \"assets/avatar.jpg\";\nimport io from \"socket.io-client\";\n\nfunction ChatBox(props) {\n  const { message, setMessage, messages, setMessages, socket } = props;\n  const { shipper } = props;\n  const { order_code } = props.match.params;\n\n  useEffect(() => {\n    socket.emit(\"join-room\", order_code);\n    socket.on(\"receive-shipper-inbox\", (message, order_code) => {\n      setMessages((prev) => [\n        ...prev,\n        { sender: \"shipper\", message: message.content },\n      ]);\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"or-st-pre-body\">\n        <div className=\"or-st-ship-conversation\">\n          {messages?.map((item, index) => (\n            <div key={index} className={`or-st-chat-item-${item.sender}`}>\n              <img\n                className=\"or-st-chat-avatar\"\n                src={item.sender === \"shipper\" ? shipper.profile_image : Avatar}\n                alt=\"shipper_image\"\n              />\n              <span className=\"or-st-chat-item-content\">{item.message}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"or-st-ship-chat-bar\">\n          <input\n            className=\"or-st-chat-content\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            name=\"chat\"\n          />\n          <div\n            className=\"or-st-chat-submit\"\n            onClick={() => {\n              if (message !== \"\") {\n                setMessages((prev) => [\n                  ...prev,\n                  { sender: \"customer\", message: message },\n                ]);\n                socket.emit(\"customer-inbox\", message, order_code);\n                setMessage(\"\");\n              }\n            }}\n          >\n            Send\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nChatBox.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(withAuth(connect(mapStateToProps, null)(ChatBox)));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/MenuCategoryDetail.js",["1206","1207","1208","1209","1210","1211","1212"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faSave,\n  faPlus,\n  faEye,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport { addMenuCategoryAPI } from \"store/actions/ProviderAction/ProviderAction\";\nfunction MenuCategoryDetail(props) {\n  const { user, getProductListAPI, addMenuCategoryAPI } = props;\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [menuCategory, setMenuCategory] = useState();\n  const [showAddDialog, setShowAddDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({\n    header: \"Add menu category\",\n    text1: \" Are you sure you want to add this menu category?\",\n    text2:\n      \"This menu category will be appended at the end of the menu. You can't undo this action.\",\n  });\n  useEffect(() => {\n    async function fetchMenuCategory(id) {\n      if (id !== -1) {\n        var result = await getProductListAPI(id);\n        setMenuCategory(result);\n      }\n    }\n    fetchMenuCategory(user.provider_id);\n  }, [user.provider_id]);\n\n  const addMenuCategory = async (name) => {\n    await addMenuCategoryAPI(user.provider_id, categoryName);\n  };\n  return (\n    <Fragment>\n      <div className=\"panel-detail-wrapper\">\n        <div className=\"panel-detail-title\">Menu category</div>\n        <div className=\"search-product-container\">\n          <input\n            className=\"search-product-term\"\n            type=\"text\"\n            name=\"search\"\n            onChange={(e) => setCategoryName(e.target.value)}\n            placeholder=\"Menu category name\"\n          />\n\n          <Button\n            left={10}\n            buttonType=\"primary\"\n            width={100}\n            height={36}\n            radius={\"0px\"}\n            label={\"Add\"}\n            prefix={\n              <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n            }\n            onClick={() => setShowAddDialog(true)}\n          />\n        </div>\n        {menuCategory && (\n          <table border={2} className=\"table table-wrapper\">\n            <tbody>\n              <tr className=\"table-row-wrapper\">\n                <th>Menu category name</th>\n                <th>Number of products</th>\n                <th>Visible</th>\n              </tr>\n              {menuCategory?.map((item, index) => (\n                <tr className=\"table-row-wrapper\" key={index}>\n                  <td\n                    className=\"product-name\"\n                    style={{\n                      textAlign: \"left\",\n                      width: \"70%\",\n                    }}\n                  >\n                    {item.menu_category_name}\n                  </td>\n                  <td\n                    className=\"product-name\"\n                    style={{\n                      textAlign: \"center\",\n                      width: \"15%\",\n                    }}\n                  >\n                    {item.products.length}\n                  </td>\n                  <td\n                    className=\"product-name\"\n                    style={{\n                      textAlign: \"center\",\n                      width: \"15%\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={faEye}\n                      style={{ color: \"#CCCCCC\", fontSize: 16, marginRight: 5 }}\n                    />\n                    Show\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n      <DialogBox\n        visibility={showAddDialog}\n        headerText={dialogContent.header}\n        close={() => setShowAddDialog(false)}\n      >\n        <div className=\"dialog-detail-wrapper\">\n          <div className=\"dialogbox-content\">\n            <span className=\"dialogbox-content-detail-main\">\n              {dialogContent.text1}\n            </span>\n            <span className=\"dialogbox-content-detail-sub\">\n              {dialogContent.text2}\n            </span>\n          </div>\n          <div className=\"dialogbox-action\">\n            <ButtonGroup gap={5} mgRight={5}>\n              <Button\n                color={\"white\"}\n                bgColor={\"#800000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={80}\n                height={30}\n                label={\"Cancel\"}\n                onClick={() => setShowAddDialog(false)}\n              />\n              <Button\n                color={\"white\"}\n                bgColor={\"#800000\"}\n                justifyContent={\"center\"}\n                gap={\"10px\"}\n                width={80}\n                height={30}\n                label={\"OK\"}\n                onClick={() => {\n                  addMenuCategory();\n                  setShowAddDialog(false);\n                }}\n              />\n            </ButtonGroup>\n          </div>\n        </div>\n      </DialogBox>\n    </Fragment>\n  );\n}\n\nMenuCategoryDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  addMenuCategoryAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getProductListAPI, addMenuCategoryAPI })(\n    MenuCategoryDetail\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDHome/MDHome.js",["1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAsterisk, faImage } from \"@fortawesome/fontawesome-free-solid\";\nimport Switch from \"react-switch\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport \"./MDHome.scss\";\nimport { faSearch } from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport Metric from \"../Metric/Metric\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport Tabs from \"../Tabs\";\nimport MDHeader from \"components/MerchantDashboard/MDHeader/MDHeader\";\n\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MDHome(props) {\n  const { user, provider } = props;\n  const [mapView, setMapView] = useState(false);\n  const [viewport, setViewport] = useState({\n    height: \"350px\",\n    zoom: 16,\n  });\n  const [restaurantStatus, setRestaurantStatus] = useState(1);\n  const [checkedSunday, setCheckedSunday] = useState(true);\n  const [checkedMonday, setCheckedMonday] = useState(true);\n  const [checkedTuesday, setCheckedTuesday] = useState(true);\n  const [checkedWednesday, setCheckedWednesday] = useState(true);\n  const [checkedThursday, setCheckedThursday] = useState(true);\n  const [checkedFriday, setCheckedFriday] = useState(true);\n  const [checkedSaturday, setCheckedSaturday] = useState(true);\n\n  const handleSubmitForm = (values) => {\n    console.log(values);\n    console.log(restaurantStatus);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"panel-detail-wrapper\"\n        style={{ height: \"auto\", marginTop: \"0px\" }}\n      >\n        <MDHeader visible={true} setMapView={setMapView} />\n\n        {provider.operation.length !== 0 && (\n          <Formik\n            initialValues={{\n              operating: {\n                sunday: {\n                  openTime:\n                    provider?.operation?.sunday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.sunday?.close_time || \"23:59:59\",\n                },\n                monday: {\n                  openTime:\n                    provider?.operation?.monday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.monday?.close_time || \"23:59:59\",\n                },\n                tuesday: {\n                  openTime:\n                    provider?.operation?.tuesday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.tuesday?.close_time || \"23:59:59\",\n                },\n                wednesday: {\n                  openTime:\n                    provider?.operation?.wednesday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.wednesday?.close_time || \"23:59:59\",\n                },\n                thursday: {\n                  openTime:\n                    provider?.operation?.thursday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.thursday?.close_time || \"23:59:59\",\n                },\n                friday: {\n                  openTime:\n                    provider?.operation?.friday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.friday?.close_time || \"23:59:59\",\n                },\n                saturday: {\n                  openTime:\n                    provider?.operation?.saturday?.open_time || \"00:00:00\",\n                  closeTime:\n                    provider?.operation?.saturday?.close_time || \"23:59:59\",\n                },\n              },\n              ect: provider.provider.estimated_cooking_time,\n            }}\n            validateOnChange={false}\n          >\n            {(formikProps) => {\n              const { values, errors, touched } = formikProps;\n              return (\n                <Form className=\"pro-gen-container-body\">\n                  <div\n                    className=\"pro-gen-body-row\"\n                    style={{ margin: \"0px 0 0px 0\" }}\n                  >\n                    <div className=\"pro-gen-label-input\" style={{ width: 180 }}>\n                      Restaurant status:{\" \"}\n                    </div>\n                  </div>\n                  <div className=\"mkt-section-sub-text\">\n                    Restaurant status will be changed by these options or\n                    automatically changed depending on restaurant's operation\n                    time.\n                  </div>\n                  <div\n                    className=\"pro-gen-body-row\"\n                    style={{ margin: \"0px 0 0px 0\" }}\n                  >\n                    <label className=\"pro-gen-radio-wrapper radio\">\n                      <input\n                        type=\"radio\"\n                        name=\"status\"\n                        defaultChecked={provider.provider?.status === 1}\n                        value={1}\n                        onChange={(e) => setRestaurantStatus(e.target.value)}\n                      />\n                      <span className=\"hb-sb-label-radio\">Open</span>\n                    </label>\n                    <label className=\"pro-gen-radio-wrapper radio\">\n                      <input\n                        type=\"radio\"\n                        name=\"status\"\n                        defaultChecked={provider.provider?.status == 2}\n                        value={2}\n                        onChange={(e) => setRestaurantStatus(e.target.value)}\n                      />\n                      <span className=\"hb-sb-label-radio\">Closed</span>\n                    </label>\n                    <label className=\"pro-gen-radio-wrapper radio\">\n                      <input\n                        type=\"radio\"\n                        name=\"status\"\n                        defaultChecked={provider.provider?.status == 3}\n                        value={3}\n                        onChange={(e) => setRestaurantStatus(e.target.value)}\n                      />\n                      <span className=\"hb-sb-label-radio\">\n                        Busy (stop receiving orders)\n                      </span>\n                    </label>\n                  </div>\n\n                  <div\n                    className=\"pro-gen-body-row\"\n                    style={{ margin: \"0px 0 0px 0\" }}\n                  >\n                    <div className=\"pro-gen-label-input\" style={{ width: 180 }}>\n                      Estimated cooking time:{\" \"}\n                    </div>\n                  </div>\n                  <Field\n                    type=\"text\"\n                    name=\"ect\"\n                    className=\"p-pd-b-iu-input-general\"\n                    style={{ height: 28, textIndent: 10, width: \"300px\" }}\n                    placeholder={\"Cooking time\"}\n                  />\n\n                  <div\n                    className=\"pro-gen-body-row\"\n                    style={{ margin: \"0px 0 0px 0\" }}\n                  >\n                    <div className=\"pro-gen-label-input\" style={{ width: 180 }}>\n                      Operation time\n                    </div>\n                  </div>\n                  <div\n                    className=\"merchant-form-container\"\n                    style={{ width: \"80%\" }}\n                  >\n                    <div\n                      className=\"merchant-form-switch-wrapper\"\n                      style={{ width: \"90%\" }}\n                    >\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedSunday((prev) => !prev);\n                          }}\n                          checked={checkedSunday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Sunday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedSunday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedSunday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.sunday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.sunday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedMonday((prev) => !prev);\n                          }}\n                          checked={checkedMonday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Monday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedMonday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedMonday === true ? (\n                          <Fragment>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.monday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.monday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </Fragment>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedTuesday((prev) => !prev);\n                          }}\n                          checked={checkedTuesday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Tuesday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedTuesday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedTuesday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.tuesday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.tuesday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedWednesday((prev) => !prev);\n                          }}\n                          checked={checkedWednesday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Wednesday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedWednesday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedWednesday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.wednesday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.wednesday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedThursday((prev) => !prev);\n                          }}\n                          checked={checkedThursday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Thursday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedThursday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedThursday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.thursday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.thursday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedFriday((prev) => !prev);\n                          }}\n                          checked={checkedFriday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Friday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedFriday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedFriday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.friday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.friday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n\n                      <div className=\"operation-time-wrapper\">\n                        <Switch\n                          onChange={() => {\n                            setCheckedSaturday((prev) => !prev);\n                          }}\n                          checked={checkedSaturday}\n                          onColor={\"#9C1818\"}\n                        />\n                        <span className=\"weekday-label\">Saturday</span>\n                        <span className=\"weekday-status-label\">\n                          {checkedSaturday ? \"Open\" : \"Closed\"}\n                        </span>\n                        {checkedSaturday === true ? (\n                          <>\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.saturday.openTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                            —\n                            <Field\n                              className=\"form-text-field form-field-styling-1\"\n                              type=\"text\"\n                              name=\"operating.saturday.closeTime\"\n                              placeholder=\"00:00\"\n                              maxLength={50}\n                              autoComplete=\"on\"\n                            />\n                          </>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                  <ButtonGroup\n                    width={100}\n                    mgTop={10}\n                    float=\"center\"\n                    mgBottom={15}\n                  >\n                    <Button\n                      color={\"white\"}\n                      bgColor={\"#101010\"}\n                      justifyContent={\"center\"}\n                      gap={\"10px\"}\n                      width={120}\n                      height={35}\n                      label={\"Save\"}\n                      onClick={() => handleSubmitForm(values)}\n                    />\n                  </ButtonGroup>\n                </Form>\n              );\n            }}\n          </Formik>\n        )}\n      </div>\n      <Modal\n        openModal={mapView}\n        title={\"Restaurant Location\"}\n        width={50}\n        height={480}\n        transparent={0.2}\n        closeModal={() => {\n          setMapView(false);\n        }}\n      >\n        <ReactMapGl\n          transitionDuration={1000}\n          {...viewport}\n          latitude={parseFloat(provider.provider.latitude)}\n          longitude={parseFloat(provider.provider.longitude)}\n          width={\"100%\"}\n          onViewportChange={(viewport) => setViewport(viewport)}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n        >\n          <Marker\n            latitude={parseFloat(provider.provider.latitude)}\n            longitude={parseFloat(provider.provider.longitude)}\n            offsetLeft={-20}\n            offsetTop={-30}\n          >\n            <img\n              alt=\"marker\"\n              style={{ height: 30, width: 30 }}\n              src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n            />\n          </Marker>\n        </ReactMapGl>\n        <span className=\"md-head-sub-text-large\" style={{ margin: \"30px 0\" }}>\n          <FontAwesomeIcon icon={faMapMarkedAlt} className=\"md-text-icon\" />\n          277, Nguyen Van Cu, ward Nguyen Cu Trinh, district 5, Ho Chi Minh city\n        </span>\n        <ButtonGroup mgTop={5} float=\"center\" mgBottom={15}>\n          <Button\n            color={\"white\"}\n            bgColor={\"#101010\"}\n            justifyContent={\"center\"}\n            gap={\"10px\"}\n            width={120}\n            height={35}\n            label={\"OK\"}\n          />\n        </ButtonGroup>\n      </Modal>\n    </Fragment>\n  );\n}\n\nMDHome.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getProductListAPI,\n  })(MDHome)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDBusinessInsight/MDBusinessInsight.js",["1232","1233","1234","1235","1236","1237","1238","1239","1240"],"import { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./MDBusinessInsight.scss\";\nimport PropTypes from \"prop-types\";\nimport MDHeader from \"components/MerchantDashboard/MDHeader/MDHeader\";\nimport Metric from \"../Metric/Metric\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\n\nimport {\n  getProviderTopProductBySalesAPI,\n  getProviderTopProductByUnitAPI,\n  getProviderTopCategoryByUnitAPI,\n  getProviderRevenueByTime,\n  getProviderOrderByTime,\n} from \"store/actions/ProviderAction/ProviderAction\";\nimport Tabs from \"../Tabs\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarPlus,\n  faPlus,\n  faQuestionCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Chart from \"react-apexcharts\";\n\nconst monthLabel = [\n  \"\",\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\nconst xAxisLabel = [];\nconst today = new Date();\nlet month = today.getMonth() + 1;\nlet year = today.getFullYear();\nlet count = 12;\nwhile (count > 0) {\n  if (month === 0) {\n    year -= 1;\n    month += 12;\n  }\n  xAxisLabel.unshift(year + \"-\" + monthLabel[month]);\n  month -= 1;\n  count -= 1;\n}\nconst DummyData = {\n  options: {\n    colors: [\"#E11A22\", \"#F8A825\"],\n    chart: {\n      height: 350,\n      type: \"line\",\n      fontFamily: \"Poppins, sans-serif\",\n    },\n    title: {\n      text: \"Store monthly revenue by number of orders\",\n    },\n    dataLabels: {\n      enabled: true,\n      enabledOnSeries: [1],\n    },\n    labels: xAxisLabel,\n    yaxis: [\n      {\n        labels: {\n          formatter: function (val) {\n            return val?.toFixed(2);\n          },\n        },\n        title: {\n          text: \"Sales\",\n        },\n      },\n      {\n        labels: {\n          formatter: function (val) {\n            return val?.toFixed(0);\n          },\n        },\n        opposite: true,\n        title: {\n          text: \"Order\",\n        },\n      },\n    ],\n  },\n};\nconst StatisticsType = {\n  filterTabs: [\n    { id: 0, name: \"By Sales\" },\n    { id: 1, name: \"By Units\" },\n  ],\n};\nfunction MDBusinessInsight(props) {\n  const {\n    user,\n    provider,\n    getProviderTopProductBySalesAPI,\n    getProviderTopProductByUnitAPI,\n    getProviderTopCategoryByUnitAPI,\n    getProviderRevenueByTime,\n    getProviderOrderByTime,\n  } = props;\n  const [currentTab, setCurrentTab] = useState(0);\n  const handleSelectTab = (value) => {\n    setCurrentTab(value);\n  };\n  const [series, setSeries] = useState([\n    {\n      name: \"Revenue\",\n      type: \"column\",\n      data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    {\n      name: \"Order\",\n      type: \"column\",\n      data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n  ]);\n  const [revenueByTime, setRevenueByTime] = useState([]);\n  const [orderByTime, setOrderByTime] = useState([]);\n  useEffect(() => {\n    async function fetchStatisticsData(id) {\n      const revenue = await getProviderRevenueByTime(id, 1, 6, 2022);\n      setRevenueByTime(revenue);\n      const order = await getProviderOrderByTime(id, 1, 6, 2022);\n      setOrderByTime(order);\n      setSeries([\n        {\n          name: \"Revenue\",\n          type: \"column\",\n          data: revenue,\n        },\n        {\n          name: \"Order\",\n          type: \"column\",\n          data: order,\n        },\n      ]);\n      const result1 = await getProviderTopProductBySalesAPI(id, 1, 6, 2022);\n      const result2 = await getProviderTopProductByUnitAPI(id, 1, 6, 2022);\n      const result3 = await getProviderTopCategoryByUnitAPI(id, 1, 6, 2022);\n    }\n    if (user.provider_id !== -1) fetchStatisticsData(user.provider_id);\n  }, [user.provider_id]);\n\n  return (\n    <Fragment>\n      <div\n        className=\"panel-detail-wrapper\"\n        style={{ height: \"auto\", marginTop: \"0px\" }}\n      >\n        <MDHeader visible={false} />\n        <div className=\"panel-detail-title\">Business Insights</div>\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 0, fontWeight: 700 }}\n        >\n          Key metrics\n        </div>\n\n        <div className=\"mkt-key-metrics-wrapper\" style={{ height: 180 }}>\n          <div\n            className=\"promotion-progress-wrapper\"\n            style={{\n              height: 180,\n              border: \"2px solid #eeeeee\",\n              backgroundColor: \"#fcfcfc\",\n            }}\n          >\n            <div className=\"product-stock-quantity\">Sales Overview</div>\n            {revenueByTime.length !== 0 && (\n              <div className=\"product-stock-quantity-description\">\n                Your profit has been{\" \"}\n                <b>\n                  {revenueByTime[11] < revenueByTime[10]\n                    ? \"descreased \"\n                    : \"increased \"}\n                </b>\n                <b>\n                  {((revenueByTime[11] / revenueByTime[10]) * 100).toFixed(2)}%\n                </b>{\" \"}\n                comparing to last month data.\n              </div>\n            )}\n            <div className=\"product-stock-quantity-description\">\n              Sales: {revenueByTime?.reduce((a, b) => a + b, 0) || \"0.00\"}\n            </div>\n            <div className=\"product-stock-quantity-description\">\n              Total Order: {orderByTime?.reduce((a, b) => a + b, 0) || \"0 \"}{\" \"}\n              orders\n            </div>\n          </div>\n          <Metric\n            text={`Revenue demonstrates the total amount your store has received from ${\n              xAxisLabel[0]\n            } to ${xAxisLabel[xAxisLabel.length - 1]}`}\n            width={\"100%\"}\n            height={180}\n            radius={5}\n            textColor={\"black\"}\n            numeric_data={`$ ${revenueByTime\n              ?.reduce((a, b) => a + b, 0)\n              ?.toFixed(2)}`}\n            numericFontSize={30}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Sales\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n          <Metric\n            subText={`Average: `}\n            text={`Order by time demonstrates the total number of orders your store has received from ${\n              xAxisLabel[0]\n            } to ${xAxisLabel[xAxisLabel.length - 1]}`}\n            width={\"100%\"}\n            height={180}\n            radius={5}\n            textColor={\"black\"}\n            numeric_data={`${orderByTime?.reduce((a, b) => a + b, 0)}`}\n            numericFontSize={30}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Orders\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n          <Metric\n            text={\"The revenue amount per order.\"}\n            width={\"100%\"}\n            height={180}\n            radius={5}\n            textColor={\"black\"}\n            numeric_data={`$ ${\n              revenueByTime?.reduce((a, b) => a + b, 0) &&\n              orderByTime?.reduce((a, b) => a + b, 0)\n                ? (\n                    revenueByTime?.reduce((a, b) => a + b, 0) /\n                    orderByTime?.reduce((a, b) => a + b, 0)\n                  ).toFixed(2)\n                : \"0.00\"\n            }`}\n            numericFontSize={30}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Sales per Order\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n        </div>\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 30, fontWeight: 700 }}\n        >\n          Trend chart\n        </div>\n\n        <Chart\n          options={DummyData.options}\n          series={series}\n          type=\"bar\"\n          width=\"1100\"\n          height=\"320\"\n        />\n\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 30, fontWeight: 700 }}\n        >\n          Product Ranking\n        </div>\n        <div className=\"product-table-container\">\n          <Tabs\n            tabs={StatisticsType.filterTabs}\n            boxWidth={\"15%\"}\n            secondaryTabGroup={true}\n            borderTop={true}\n            fixed={false}\n            current={currentTab}\n            selectItem={handleSelectTab}\n          />\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                <tr className=\"table-row-wrapper\">\n                  <th>Ranking</th>\n                  <th>Product</th>\n                  <th>By Sales</th>\n                </tr>\n                {currentTab === 0\n                  ? provider?.topBySales?.map(\n                      (item, index) =>\n                        index < 10 && (\n                          <tr className=\"table-row-wrapper\" key={index}>\n                            <td\n                              className=\"product-name\"\n                              style={{\n                                textAlign: \"left\",\n                                width: \"20%\",\n                              }}\n                            >\n                              #{index + 1}\n                            </td>\n                            <td\n                              className=\"field-hidden\"\n                              style={{\n                                textAlign: \"left\",\n                                width: \"60%\",\n                              }}\n                            >\n                              {item.product_name || \"—\"}\n                            </td>\n                            <td\n                              className=\"field-hidden\"\n                              style={{\n                                textAlign: \"center\",\n                                width: \"20%\",\n                              }}\n                            >\n                              $ {item.total_sales?.toFixed(2) || \"—\"}\n                            </td>\n                          </tr>\n                        )\n                    )\n                  : provider?.topByUnit?.map(\n                      (item, index) =>\n                        index < 10 && (\n                          <tr className=\"table-row-wrapper\" key={index}>\n                            <td\n                              className=\"product-name\"\n                              style={{\n                                textAlign: \"left\",\n                                width: \"20%\",\n                              }}\n                            >\n                              #{index + 1}\n                            </td>\n                            <td\n                              className=\"field-hidden\"\n                              style={{\n                                textAlign: \"left\",\n                                width: \"60%\",\n                              }}\n                            >\n                              {item.product_name || \"—\"}\n                            </td>\n                            <td\n                              className=\"field-hidden\"\n                              style={{\n                                textAlign: \"center\",\n                                width: \"20%\",\n                              }}\n                            >\n                              {item.total_quantity || \"—\"}\n                            </td>\n                          </tr>\n                        )\n                    )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 30, fontWeight: 700 }}\n        >\n          Category Ranking\n        </div>\n        <div className=\"product-table-container\">\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                <tr className=\"table-row-wrapper\">\n                  <th>Ranking</th>\n                  <th>Product name</th>\n                  <th>Category name</th>\n                  <th>By Units</th>\n                </tr>\n                {props.provider?.topCategory?.map(\n                  (item, index) =>\n                    index < 5 && (\n                      <tr className=\"table-row-wrapper\" key={index}>\n                        <td\n                          className=\"product-name\"\n                          style={{\n                            textAlign: \"left\",\n                            width: \"20%\",\n                          }}\n                        >\n                          #{index + 1}\n                        </td>\n                        <td\n                          className=\"field-hidden\"\n                          style={{\n                            textAlign: \"left\",\n                            width: \"50%\",\n                          }}\n                        >\n                          {item.product_name || \"—\"}\n                        </td>\n                        <td\n                          className=\"field-hidden\"\n                          style={{\n                            textAlign: \"left\",\n                            width: \"20%\",\n                          }}\n                        >\n                          {item.food_category_name || \"—\"}\n                        </td>\n                        <td\n                          className=\"field-hidden\"\n                          style={{\n                            textAlign: \"center\",\n                            width: \"10%\",\n                          }}\n                        >\n                          $ {item.total_quantity || \"—\"}\n                        </td>\n                      </tr>\n                    )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nMDBusinessInsight.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getProviderTopProductBySalesAPI: PropTypes.func.isRequired,\n  getProviderTopProductByUnitAPI: PropTypes.func.isRequired,\n  getProviderTopCategoryByUnitAPI: PropTypes.func.isRequired,\n  getProviderRevenueByTime: PropTypes.func.isRequired,\n  getProviderOrderByTime: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getProviderTopProductBySalesAPI,\n    getProviderTopProductByUnitAPI,\n    getProviderTopCategoryByUnitAPI,\n    getProviderRevenueByTime,\n    getProviderOrderByTime,\n  })(MDBusinessInsight)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/BusinessUtils.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/ProviderShowAll.js",["1241","1242","1243","1244","1245","1246","1247"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CustomButtonGroup } from \"./CustomButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarPlus,\n  faInfoCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nimport { withRouter } from \"react-router-dom\";\nimport { faHeart as faHeart2 } from \"@fortawesome/fontawesome-free-solid\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons\";\nimport LazyLoad from \"react-lazyload\";\nimport Skeleton from \"react-loading-skeleton\";\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n    slidesToSlide: 4, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 2, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n\nfunction ProviderShowAll({ providerList, history }) {\n  const openTime = \"23:00:00\";\n  const closeTime = \"22:00:00\";\n  const [currentTime, setCurrentTime] = useState(\n    new Date().toLocaleTimeString()\n  );\n  const handleOnClickProvider = (id) => {\n    history.push(`/provider-detail/${id}`);\n  };\n  return (\n    <Fragment>\n      <div className=\"home-product-row-container\">\n        <div className=\"apro-home-product-slider-all\">\n          {providerList?.map((item, index) => (\n            <div className=\"apro-home-product-container\" key={index}>\n              <LazyLoad height={200} style={{ width: \"100%\" }}>\n                <div\n                  className=\"apro-provider-card-container\"\n                  onClick={() => handleOnClickProvider(item.provider_id)}\n                  style={{\n                    backgroundImage: `url(${item.profile_pic})`,\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"cover\",\n                  }}\n                >\n                  <div className=\"apro-provider-interaction-wrapper\">\n                    <FontAwesomeIcon\n                      className=\"icon-for-liking\"\n                      style={{ zIndex: 1, marginTop: 5 }}\n                      icon={item.isFavorite ? faHeart2 : faHeart1}\n                    />\n                  </div>\n                  {currentTime < closeTime && currentTime > openTime ? (\n                    <figcaption className=\"figcaption-wrapper\">\n                      <div className=\"btn-schedule-wrapper\">\n                        <FontAwesomeIcon\n                          icon={faCalendarPlus}\n                          className=\"icon-btn\"\n                        />\n                        <span>Schedule order</span>\n                      </div>\n                      <span className=\"a1-description\">\n                        Opens Saturday 2:15 PM\n                      </span>\n                    </figcaption>\n                  ) : (\n                    <Fragment></Fragment>\n                  )}\n                </div>\n              </LazyLoad>\n              <div className=\"apro-product-info-wrapper\">\n                <span className=\"apro-p-info-main-text\">\n                  {item.provider_name || item.name}\n                </span>\n                <div className=\"apro-p-info-rating\">{item.rating || \"5.0\"}</div>\n              </div>\n              <div\n                className=\"product-sub-info-wrapper\"\n                style={{ width: \"100%\" }}\n              >\n                <FontAwesomeIcon icon={faGetPocket} className=\"sub-info-icon\" />\n                &nbsp;•&nbsp;\n                <span className=\"p-sub-info-main-text\">\n                  $ {item.price_range}\n                </span>\n                &nbsp;•&nbsp;\n                <div className=\"p-sub-info-cooking-time\">\n                  {item.mean_estimated_cooking_time || \"30 mins\"}\n                </div>\n                &nbsp;•&nbsp;\n                <span className=\"p-sub-info-main-text\">\n                  {(item.distance / 1000).toFixed(2)} km\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default withRouter(ProviderShowAll);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/ProviderGroup.js",["1248","1249"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CustomButtonGroup } from \"./CustomButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  faCalendarPlus,\n  faInfoCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { faHeart as faHeart2 } from \"@fortawesome/fontawesome-free-solid\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons\";\n// skeleton\nimport ProviderGroupSkeleton from \"components/Skeleton/ProviderGroupSkeleton\";\n// favorite\nimport {\n  addFavoriteProvider,\n  removeFavoriteProvider,\n} from \"store/actions/UserAction/UserAction\";\nimport { propTypes } from \"react-map-gl-geocoder\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 4,\n    slidesToSlide: 4, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 2, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n\nfunction ProviderGroup({\n  groupTitle,\n  groupDescription,\n  providerList,\n  setProviderList,\n  history,\n  ...rest\n}) {\n  const [loading, setLoading] = useState(false);\n  const openTime = \"23:00:00\";\n  const closeTime = \"22:00:00\";\n  const [currentTime, setCurrentTime] = useState(\n    new Date().toLocaleTimeString()\n  );\n  const changeFavorite = async (isFavorite, pid, e) => {\n    e.stopPropagation();\n    if (rest.user.profile?.user_id === -1 || !pid) return;\n    if (isFavorite === true) {\n      let status = await rest.removeFavoriteProvider(\n        rest.user.profile.user_id,\n        pid\n      );\n      setProviderList((prevState) =>\n        prevState.map((item) =>\n          item.provider_id === pid ? { ...item, isFavorite: false } : item\n        )\n      );\n      console.log(providerList);\n      if (status) console.log(\"successfully removed from favorite list\");\n      return;\n    }\n    let status = await rest.addFavoriteProvider(rest.user.profile.user_id, pid);\n    if (status) {\n      console.log(\"successfully added to favorite list\");\n      console.log(providerList);\n      setProviderList((prevState) =>\n        prevState.map((item) =>\n          item.provider_id === pid ? { ...item, isFavorite: true } : item\n        )\n      );\n      return;\n    }\n  };\n  const handleOnClickProvider = (e, id) => {\n    e.stopPropagation();\n    history.push(`/provider-detail/${id}`);\n  };\n  useEffect(() => {\n    if (providerList?.length) setLoading(true);\n  }, [providerList]);\n\n  return (\n    <Fragment>\n      <div className=\"home-product-row-container\">\n        <div className=\"home-product-row-title\">\n          {groupTitle || \"No title\"}\n          <FontAwesomeIcon className=\"sub-icon-title\" icon={faInfoCircle} />\n        </div>\n        {groupDescription && (\n          <span className=\"home-product-description\">{groupDescription}</span>\n        )}\n        {loading ? (\n          <div className=\"home-product-slider\">\n            <Carousel\n              swipeable={false}\n              draggable={false}\n              responsive={responsive}\n              ssr={true} // means to render carousel on server-side.\n              keyBoardControl={true}\n              containerClass=\"carousel-container\"\n              removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n              dotListClass=\"custom-dot-list-style\"\n              itemClass=\"carousel-item-padding-40-px\"\n              arrows={false}\n              customButtonGroup={\n                <CustomButtonGroup>\n                  <span className=\"link-text\">See more</span>\n                </CustomButtonGroup>\n              }\n              renderButtonGroupOutside={true}\n              customTransition={\"transform 500ms ease-in-out\"}\n            >\n              {providerList?.map((item) => (\n                <div\n                  key={item.provider_id}\n                  onClick={(e) => handleOnClickProvider(e, item.provider_id)}\n                >\n                  <LazyLoad style={{ width: \"100%\" }}>\n                    <div\n                      className=\"provider-card-container\"\n                      key={item.provider_id}\n                      style={{\n                        backgroundImage: `url(${item.profile_pic})`,\n                        backgroundPosition: \"center\",\n                        backgroundRepeat: \"no-repeat\",\n                        backgroundSize: \"cover\",\n                      }}\n                    >\n                      <div className=\"provider-interaction-wrapper\">\n                        <FontAwesomeIcon\n                          className=\"icon-for-liking\"\n                          style={{\n                            zIndex: 1,\n                            marginTop: 5,\n                          }}\n                          onClick={(e) =>\n                            changeFavorite(item.isFavorite, item.provider_id, e)\n                          }\n                          icon={item.isFavorite ? faHeart2 : faHeart1}\n                        />\n                        {!item.tag_name && (\n                          <div className=\"provider-card-tag\">\n                            {item.tag_name || \"3 orders until €5 reward\"}\n                          </div>\n                        )}\n                      </div>\n                      {currentTime < closeTime && currentTime > openTime ? (\n                        <figcaption className=\"figcaption-wrapper\">\n                          <div className=\"btn-schedule-wrapper\">\n                            <FontAwesomeIcon\n                              icon={faCalendarPlus}\n                              className=\"icon-btn\"\n                            />\n                            <span>Schedule order</span>\n                          </div>\n                          <span className=\"a1-description\">\n                            Opens Saturday 2:15 PM\n                          </span>\n                        </figcaption>\n                      ) : (\n                        <Fragment></Fragment>\n                      )}\n                    </div>\n                  </LazyLoad>\n\n                  <div className=\"product-info-wrapper\">\n                    <span className=\"p-info-main-text\">\n                      {item.provider_name}\n                    </span>\n                    <div className=\"p-info-rating\">{item.rating || \"5.0\"}</div>\n                  </div>\n                  <div className=\"product-sub-info-wrapper\">\n                    <FontAwesomeIcon\n                      icon={faGetPocket}\n                      className=\"sub-info-icon\"\n                    />\n                    &nbsp;•&nbsp;\n                    <span className=\"p-sub-info-main-text\">\n                      $ {item.price_range}\n                    </span>\n                    &nbsp;•&nbsp;\n                    <div className=\"p-sub-info-cooking-time\">\n                      {`${item.estimated_cooking_time} mins` || \"30-45 mins\"}\n                    </div>\n                    &nbsp;•&nbsp;\n                    <span className=\"p-sub-info-main-text\">\n                      {(item.distance / 1000).toFixed(2)} km\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </Carousel>\n          </div>\n        ) : (\n          <ProviderGroupSkeleton col={4} />\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nProviderGroup.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  addFavoriteProvider: PropTypes.func.isRequired,\n  removeFavoriteProvider: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addFavoriteProvider, removeFavoriteProvider })(\n    ProviderGroup\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/city.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDProductDetail/PDProductDetail.js",["1250","1251","1252","1253","1254","1255"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  faPlus,\n  faMinus,\n  faExpand,\n  faCompress,\n  faChevronDown,\n  faChevronUp,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"./PDProductDetail.scss\";\nimport {\n  addToCart,\n  getCart,\n  updateCart,\n} from \"store/actions/CartAction/CartAction\";\n\nfunction PDProductDetail(props) {\n  const { provider, user, match } = props;\n  const [productItem, setProductItem] = useState(props.productItem);\n  const [quantity, setQuantity] = useState(1);\n  const [totalPrice, setTotalPrice] = useState(productItem.price);\n  const [additionalOptions, setAdditionalOptions] = useState([]);\n  const [heightViewPort, setHeightViewPort] = useState(180);\n  const [isViewPortExpanded, setIsViewPortExpanded] = useState(false);\n  const [note, setNote] = useState(\"\");\n  const heightForExpansion = 120;\n\n  useEffect(() => {\n    const currentCartItem = user?.userCart?.cart?.filter(\n      (item) => parseInt(item.product_id) === productItem.product_id\n    )[0];\n    if (currentCartItem) {\n      setQuantity(currentCartItem?.quantity);\n      setNote(currentCartItem?.note);\n      setAdditionalOptions(currentCartItem?.product_options);\n    }\n  }, []);\n  const navigateAddToCart = () => {\n    if (match.params.id) {\n      //to check whether cart provider id is different from provider id in current page\n      if (\n        parseInt(match.params.id || \"||\") !== user.userCart?.provider_id &&\n        user.userCart?.provider_id !== -1\n      ) {\n        props.setShowProductDetail(false);\n        props.setShowRemoveCartDialog(true);\n        return;\n      }\n    }\n    addToCart();\n  };\n  const addToCart = () => {\n    const { addToCart, updateCart } = props;\n\n    const cartItem = {\n      provider_id: parseInt(match.params.id),\n      user_id: user?.profile?.user_id,\n      provider_name: user?.currentProvider?.data?.merchant_name,\n      date: \"\",\n      status: 1,\n      cartItem: {\n        product_id: productItem.product_id,\n        product_name: productItem.product_name,\n        product_image: productItem.product_image,\n        product_price: productItem.price,\n        product_options: additionalOptions,\n        totalPrice: (parseFloat(productItem.price) * quantity).toFixed(2),\n        note: note,\n        quantity: quantity,\n      },\n    };\n    let isProductExist = user.userCart?.cart?.some(\n      (item) => item.product_id === cartItem.cartItem.product_id\n    );\n    var code = \"\";\n    if (isProductExist) {\n      code = user?.userCart?.cart?.filter(\n        (item) => item.product_id === cartItem.cartItem.product_id\n      )[0].item_code;\n    }\n    isProductExist ? updateCart(cartItem, code) : addToCart(cartItem);\n    props.setShowProductDetail(false);\n    if (props.pushReload) window.location.reload(false);\n  };\n\n  const onValueChange = (event, price) => {\n    let additionalOptionItem = {\n      option_name: event.target.name,\n      value: event.target.value,\n      price: price,\n    };\n    additionalOptions?.push(additionalOptionItem);\n    setTotalPrice(totalPrice + price);\n  };\n  return (\n    <Fragment>\n      <div className=\"pd-pr-d-header\" style={{ height: `${heightViewPort}px` }}>\n        <img\n          className=\"pd-pr-d-image\"\n          alt=\"product_photo\"\n          src={productItem.product_image}\n        />\n        <div\n          className=\"pd-pr-d-icon-abs-wrapper\"\n          style={{ marginTop: `calc(${heightViewPort}px - 30px)` }}\n          onClick={() => {\n            !isViewPortExpanded\n              ? setHeightViewPort(180 + heightForExpansion)\n              : setHeightViewPort(180);\n            setIsViewPortExpanded((prev) => !prev);\n          }}\n        >\n          <FontAwesomeIcon\n            className=\"pd-pr-d-icon-abs\"\n            icon={!isViewPortExpanded ? faExpand : faCompress}\n          />\n        </div>\n      </div>\n      <div\n        className=\"pd-pr-d-body\"\n        style={{\n          height: !isViewPortExpanded\n            ? \"350px\"\n            : `${350 - heightForExpansion}px`,\n        }}\n      >\n        <div className=\"pd-pr-d-main-text\">{productItem.product_name}</div>\n        <div className=\"pd-pr-d-sub-text\">{productItem.description}</div>\n        <div\n          className=\"pd-pr-option-box-container\"\n          style={{\n            height: isViewPortExpanded ? \"130px\" : `${130 + heightViewPort}px`,\n          }}\n        >\n          {productItem?.product_options?.map(\n            (option) =>\n              option.option_name && (\n                <Fragment>\n                  <div className=\"option-box-wrapper\">\n                    <div className=\"option-question\">\n                      <div className=\"option-box-title-wrapper-1\">\n                        <span className=\"option-box-title-main\">\n                          {option.option_name}\n                        </span>\n                        <span className=\"option-box-title-sub\">Required</span>\n                      </div>\n                      <div className=\"option-box-show-more-icon\">\n                        <FontAwesomeIcon icon={faChevronDown} />\n                      </div>\n                    </div>\n                    <div className=\"homebody-sb-radio-detail-wrapper\">\n                      {option?.options?.map((item) => (\n                        <div className=\"option-answer \">\n                          <label className=\"hb-sb-type-wrapper radio\">\n                            <input\n                              type=\"radio\"\n                              name={option.option_name}\n                              value={item.value}\n                              defaultValue={item.value}\n                              onChange={(event) =>\n                                onValueChange(event, item.price)\n                              }\n                            />\n                            <span className=\"hb-sb-label-radio option-box-radio-label\">\n                              {item.value}\n                            </span>\n                            <span className=\"option-price\">\n                              {item.price !== 0 && `+ $${item.price}.00`}\n                            </span>\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </Fragment>\n              )\n          )}\n          <div className=\"pd-text-area-wrapper\">\n            <span className=\"pd-pr-d-sub-text\" style={{ fontSize: 13 }}>\n              Note for your dish:\n            </span>\n            <textarea\n              className=\"pd-textarea\"\n              name=\"description\"\n              value={note || \"\"}\n              placeholder=\"Place your note here to notice the shipper for this dish.\"\n              onChange={(e) => setNote(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"pd-pr-d-footer\">\n        <div className=\"pd-pl-quantity-btn-open\">\n          <FontAwesomeIcon\n            icon={faMinus}\n            className=\"inc-des-button-open-left\"\n            onClick={() => {\n              quantity > 1 && setQuantity((prev) => prev - 1);\n            }}\n          />\n          <input\n            className=\"inc-des-value\"\n            type=\"number\"\n            id=\"number\"\n            value={quantity}\n          />\n          <FontAwesomeIcon\n            icon={faPlus}\n            className=\"inc-des-button-open-right\"\n            onClick={() => {\n              setQuantity((prev) => prev + 1);\n            }}\n          />\n        </div>\n        <Button\n          color={\"white\"}\n          bgColor={\"black\"}\n          justifyContent={\"center\"}\n          gap={\"10px\"}\n          width={180}\n          fontSize={13}\n          height={35}\n          label={\n            props.buttonTitle\n              ? props.buttonTitle\n              : `Add to order • € ${(totalPrice * quantity).toFixed(2)}`\n          }\n          onClick={navigateAddToCart}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nPDProductDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  getCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addToCart, updateCart, getCart })(PDProductDetail)\n);\n//<FontAwesomeIcon className=\"pd-pr-d-icon-abs-compress\" icon={faCompress} />\n\n/*\n */\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/HomeAction/HomeAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Cart/Cart.js",["1256"],"import { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Button from \"components/Commons/Button/Button\";\nimport CartImage from \"assets/cart.svg\";\nimport \"./Cart.scss\";\nimport { getCart, removeCartItem } from \"store/actions/CartAction/CartAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/fontawesome-free-solid\";\nimport { calculateSubTotalPrice } from \"utils/BusinessUtils\";\n\nconst Cart = (props) => {\n  const { user, getCart, removeCartItem } = props;\n  const [subTotal, setSubTotal] = useState(0);\n  const [cartItemList, setCartItemList] = useState([]);\n  useEffect(() => {\n    async function fetchingCart(id) {\n      const cart = await getCart(id);\n      setCartItemList(cart);\n    }\n    if (user.isUserAuthenticated) {\n      fetchingCart(user.profile?.user_id);\n    }\n  }, []);\n  useEffect(() => {\n    var result = 0;\n    if (cartItemList?.cart) result = calculateSubTotalPrice(cartItemList.cart);\n    setSubTotal(result);\n  }, [cartItemList]);\n\n  const removeItemFromCart = (productId, code) => {\n    async function removeItem(userId, productId, code) {\n      await removeCartItem(userId, productId, code);\n      var result = 0;\n      if (cartItemList?.cart)\n        result = calculateSubTotalPrice(cartItemList.cart);\n      setSubTotal(result);\n    }\n    removeItem(user.profile?.user_id, productId, code);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"cart-content-wrapper\">\n        <div className=\"cart-header\">\n          <div className=\"cart-title\" style={{ fontSize: 26 }}>\n            {cartItemList?.provider_name !== -1\n              ? cartItemList?.provider_name\n              : \"\"}\n          </div>\n        </div>\n        {!cartItemList?.cart ? (\n          <div\n            className=\"cart-body\"\n            style={{ justifyContent: \"center\", height: \"calc(100vh - 170px)\" }}\n          >\n            <img src={CartImage} alt=\"cart_image\" className=\"cart-image\" />\n            <span className=\"cart-image-description\">\n              Add items from a restaurant or store to start a new cart\n            </span>\n          </div>\n        ) : (\n          <div className=\"cart-body\">\n            {cartItemList?.cart?.map((cart, index) => (\n              <div className=\"cart-item-wrapper\" key={index}>\n                <span className=\"cart-item-quantity\">\n                  &times; {cart.quantity}\n                </span>\n                <img\n                  src={cart.product_image}\n                  alt=\"cart_item_image\"\n                  className=\"cart-item-image\"\n                />\n                <div\n                  className=\"cart-main-text-section\"\n                  onClick={() =>\n                    props.history.push(\n                      `/provider-detail/${cartItemList.provider_id}`\n                    )\n                  }\n                >\n                  <span className=\"cart-item-main-text\">\n                    {cart.product_name}\n                  </span>\n                  <span\n                    className=\"cart-item-sub-text\"\n                    style={{ alignSelf: \"flex-start\", fontSize: 12 }}\n                  >\n                    € {cart.product_price}\n                  </span>\n                  {cart?.product_options?.map((option, index) => (\n                    <Fragment key={index}>\n                      {option.label !== \"?\" && (\n                        <Fragment>\n                          <span className=\"cart-item-option-text-1\">{`${\n                            option.label\n                          } ${\n                            parseInt(option.price) === 0\n                              ? \"(FREE)\"\n                              : `(€ ${option.price})`\n                          }:`}</span>\n                          <span className=\"cart-item-option-text-2\">\n                            • {`${option.value} `}\n                          </span>\n                        </Fragment>\n                      )}\n                    </Fragment>\n                  ))}\n                  {cart.note && (\n                    <span className=\"cart-note\">• NOTE: {cart.note}</span>\n                  )}\n                </div>\n                <span className=\"cart-item-sub-text\">\n                  € {((cart.product_price || 0.0) * cart.quantity).toFixed(2)}\n                </span>\n                <span className=\"cart-surfix-pos-wrapper\">\n                  <FontAwesomeIcon\n                    className=\"cart-close-icon\"\n                    onClick={() =>\n                      removeItemFromCart(cart.product_id, cart.item_code)\n                    }\n                    icon={faTimes}\n                  />\n                </span>\n              </div>\n            ))}\n          </div>\n        )}\n        {cartItemList?.cart && (\n          <div className=\"cart-footer\">\n            <div className=\"cart-footer-sub-text\">Clear cart</div>\n            <Button\n              color={\"white\"}\n              bgColor={\"#101010\"}\n              justifyContent={\"center\"}\n              gap={\"10px\"}\n              width={\"100%\"}\n              fontSize={16}\n              height={45}\n              label={`Go to checkout • € ${parseFloat(subTotal).toFixed(2)}`}\n              onClick={() => {\n                props.history.push(`/order-checkout/${user.userCart?.user_id}`);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nCart.propTypes = {\n  user: PropTypes.object.isRequired,\n  getCart: PropTypes.func.isRequired,\n  removeCartItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { getCart, removeCartItem })(Cart)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/CategoryLevelOne.js",["1257","1258","1259","1260"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faChevronRight } from '@fortawesome/fontawesome-free-solid';\nimport { Link } from 'react-router-dom';\nimport './CategoryLevelOne.scss'\n\nfunction CategoryLevelOne({categoryContent, setCategoryContent}) {\n    if (categoryContent.enable) {\n        return (\n            <div className=\"category-display\">\n                <div className='left-category-dropdown'>\n                    <div className=\"category-level-one\">\n                        <span className=\"category-name\">Accessories/Jewels&Gems</span>\n                        <FontAwesomeIcon className=\"nav-icon-surfix\" icon={faChevronRight} />\n                    </div>\n                    <div className=\"category-level-one\">\n                        <span className=\"category-name\">Electronic devices/Appliance</span>\n                    </div>\n                    <div className=\"category-level-one\">\n                        <span className=\"category-name\">Accessories/Jewels</span>\n                    </div>\n                    <div className=\"category-level-one\">\n                        <span className=\"category-name\">Accessories/Jewels</span>\n                    </div>\n                \n                </div>\n            </div>\n        );\n    }\n    else{\n        return (\n            <>\n                \n            </>\n        );\n    }\n};\n\nexport default CategoryLevelOne;","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/DialogBox/DialogBox.js",["1261","1262","1263","1264"],"import { useState, useEffect, Fragment } from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./DialogBox.scss\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/fontawesome-free-solid\";\n\nconst DialogBox = ({ visibility, close, ...rest }) => {\n  const dialogStyling = {\n    width: rest.width || \"400px\",\n    height: rest.height || \"200px\",\n  };\n  return ReactDOM.createPortal(\n    visibility ? (\n      <Fragment>\n        <div className=\"darken-transparent-background\" onClick={close}>\n          <div\n            className=\"dialog-wrapper\"\n            onClick={(e) => e.stopPropagation()}\n            style={dialogStyling}\n          >\n            <div className=\"header-row\">\n              <div className=\"header-title\">{rest.headerText || \"Error\"}</div>\n              <FontAwesomeIcon\n                className=\"header-close-icon\"\n                icon={faTimes}\n                onClick={close}\n              />\n            </div>\n            {rest.children}\n          </div>\n        </div>\n      </Fragment>\n    ) : (\n      <Fragment></Fragment>\n    ),\n    document.getElementById(\"portal-root\")\n  );\n};\nexport default DialogBox;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/NotificationPanel.js",["1265","1266","1267"],"import { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"style/Common.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faScroll } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./NotificationPanel.scss\";\nimport moment from \"moment\";\nimport { updateReadStatusAPI } from \"store/actions/OrderAction/OrderAction\";\nimport {\n  faBicycle,\n  faDotCircle,\n  faEnvelope,\n  faStore,\n  faTag,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { setNotificationSocket } from \"store/actions/UserAction/UserAction\";\n\nconst NotificationPanel = (props) => {\n  const [showUnread, setShowUnread] = useState(false);\n  const { user, notifications, updateReadStatusAPI, setNotificationSocket } =\n    props;\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    user.socket.on(\"order-accepted\", (notification) => {\n      setNotificationSocket(notification);\n    });\n  });\n  const renderNotificationImage = (notification) => {\n    switch (notification.type) {\n      case 1:\n        return (\n          <FontAwesomeIcon\n            className=\"notification-image-icon\"\n            icon={faScroll}\n          />\n        );\n      case 2:\n        return (\n          <FontAwesomeIcon className=\"notification-image-icon\" icon={faStore} />\n        );\n      case 3:\n        return (\n          <FontAwesomeIcon className=\"notification-image-icon\" icon={faTag} />\n        );\n      case 4:\n        return (\n          <FontAwesomeIcon\n            className=\"notification-image-icon\"\n            icon={faEnvelope}\n          />\n        );\n      case 5:\n        return (\n          <FontAwesomeIcon\n            className=\"notification-image-icon\"\n            icon={faBicycle}\n          />\n        );\n      default:\n        return (\n          <FontAwesomeIcon\n            className=\"notification-image-icon\"\n            icon={faScroll}\n          />\n        );\n    }\n  };\n  const getDifference = (date1, date2) => {\n    var a = moment([date1.getFullYear(), date1.getMonth(), date1.getDate()]);\n    var b = moment([date2.getFullYear(), date2.getMonth(), date2.getDate()]);\n    return a.from(b);\n  };\n  const handleNotification = async (id) => {\n    const status = await updateReadStatusAPI(id);\n  };\n  return (\n    <div className=\"notification-panel\">\n      <div className=\"notification-status-toggle\">\n        <div\n          className=\"notitcation-status-option-1\"\n          style={showUnread ? {} : { backgroundColor: \"black\", color: \"white\" }}\n          onClick={() => setShowUnread(false)}\n        >\n          All\n        </div>\n        <div\n          className=\"notitcation-status-option-2\"\n          style={showUnread ? { backgroundColor: \"black\", color: \"white\" } : {}}\n          onClick={() => setShowUnread(true)}\n        >\n          Unread\n        </div>\n      </div>\n      <div className=\"notification-sub-title\">See all notifications</div>\n      <div className=\"notification-title\">Earlier</div>\n      {user.notifications.map((notification, index) =>\n        showUnread === true && notification.read_status === true ? (\n          <></>\n        ) : (\n          <div\n            className=\"notification-item\"\n            key={index}\n            onClick={() => handleNotification(notification.id)}\n          >\n            <div\n              className={`notification-image ${\n                notification.read_status && \"notification-read\"\n              }`}\n              style={\n                notification.type === 4 ? { backgroundColor: \"#eab200\" } : {}\n              }\n            >\n              {renderNotificationImage(notification)}\n            </div>\n            <div className=\"notification-content\">\n              <span\n                className=\"notification-main-text\"\n                style={{ fontWeight: notification.read_status ? \"unset\" : 700 }}\n              >\n                <b>{notification.subject}</b> {notification.content}\n              </span>\n              <span\n                className=\"notification-sub-text\"\n                style={{\n                  fontWeight: notification.read_status ? \"unset\" : 700,\n                  color: notification.read_status\n                    ? \"#000000\"\n                    : \"rgb(148, 0, 0)\",\n                }}\n              >\n                {getDifference(\n                  new Date(notification.create_at.split(\"T\")[0]),\n                  new Date()\n                )}\n              </span>\n            </div>\n            <div className=\"notification-unread\">\n              {!notification.read_status && (\n                <FontAwesomeIcon\n                  style={{ color: \"#bd0000\" }}\n                  icon={faDotCircle}\n                />\n              )}\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nNotificationPanel.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateReadStatusAPI: PropTypes.func.isRequired,\n  setNotificationSocket: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { updateReadStatusAPI, setNotificationSocket })(\n    NotificationPanel\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantRegistration/GuidePage/Tutorials/TutorialCard.js",["1268"],"import \"./TutorialCard.scss\";\n\nfunction TutorialCard({ card }) {\n  return (\n    <div className=\"tutorial-card-container\">\n      <div className=\"card-content\">\n        <img className=\"card-image\" src={card.image} />\n        <span className=\"card-title\">{card.title}</span>\n        <span className=\"card-description\">{card.description}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TutorialCard;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/AccountSettingPanel.js",["1269","1270","1271"],"import { Link } from \"react-router-dom\";\nimport ProfilePhoto from \"assets/avatar.jpg\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Fragment, useState } from \"react\";\nimport \"./AccountSettingPanel.scss\";\nimport \"style/Common.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { userSignOut } from \"store/actions/UserAction/UserAction\";\nimport { propTypes } from \"react-map-gl-geocoder\";\n\nconst AccountSettingPanel = ({ user, userSignOut, history }) => {\n  const { i18n } = useTranslation();\n  const handleSignOut = () => {\n    userSignOut();\n    history.push(\"/sign-in\");\n  };\n  const handleSignUp = () => {\n    history.push(\"/sign-up\");\n  };\n  return (\n    <div className=\"account-panel\">\n      {user.isUserAuthenticated ? (\n        <Fragment>\n          <div className=\"sub-panel-title\">\n            <img\n              src={ProfilePhoto}\n              alt=\"profile_photo\"\n              className=\"profile-photo-preview\"\n            />\n            <span className=\"profile-name\">\n              {user.profile\n                ? `${user.profile.first_name} ${user.profile.last_name}`\n                : \"\"}\n            </span>\n            <Link to={`/profile/edit`} className=\"sub-panel-text-link\">\n              Edit profile\n            </Link>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <div\n            onClick={() => history.replace(\"/sign-in\")}\n            className=\"btn-panel btn-account-panel-position\"\n          >\n            Sign in\n          </div>\n          <div className=\"sub-panel-title\">\n            New customer?\n            <span onClick={handleSignUp} className=\"sub-panel-link\">\n              Start here.\n            </span>\n          </div>\n        </Fragment>\n      )}\n\n      <div className=\"panel-account-service-wrapper\">\n        <div className=\"e-wallet-services\">\n          <span className=\"account-service-title\">Your E-Wallet</span>\n          <Link to=\"/merchant-registration\" className=\"service-name\">\n            E-Wallet\n          </Link>\n          <Link to=\"/merchant-registration\" className=\"service-name\">\n            Payment method\n          </Link>\n          <Link to=\"/merchant-registration\" className=\"service-name\">\n            Spending History\n          </Link>\n          <Link to=\"/merchant-registration\" className=\"service-name\">\n            Budget Limit\n          </Link>\n        </div>\n        <div className=\"account-services\">\n          <span className=\"account-service-title\">Your Account</span>\n          <div\n            onClick={() => history.push(\"/profile/favorites\")}\n            className=\"service-name\"\n          >\n            Favorites\n          </div>\n          <div\n            className=\"service-name\"\n            onClick={() => history.push(`/profile/order-history`)}\n          >\n            Order History\n          </div>\n          <div\n            onClick={() => {\n              if (user.provider_id !== -1 && user.profile.user_id) {\n                history.push(`/merchant-dashboard/provider/general`);\n              } else {\n                history.replace(`/merchant-registration`);\n              }\n            }}\n            className=\"service-name\"\n          >\n            Merchant Dashboard\n          </div>\n          <div\n            onClick={() => history.push(\"/merchant-registration\")}\n            className=\"service-name\"\n          >\n            Merchant Registration\n          </div>\n          <div\n            onClick={() => history.push(\"/profile/account-settings\")}\n            className=\"service-name\"\n          >\n            Change Password\n          </div>\n        </div>\n      </div>\n      {user.isUserAuthenticated ? (\n        <div\n          onClick={handleSignOut}\n          className=\"btn-panel btn-account-panel-position\"\n        >\n          Sign Out\n        </div>\n      ) : (\n        <Fragment />\n      )}\n    </div>\n  );\n};\n\nAccountSettingPanel.propTypes = {\n  user: PropTypes.object.isRequired,\n  userSignOut: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { userSignOut })(AccountSettingPanel)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/LanguageSettingPanel.js",["1272","1273"],"import { useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n//scss\nimport \"./LanguageSettingPanel.scss\";\nimport \"style/Common.scss\";\n//i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst LanguageSettingPanel = (props) => {\n  const { i18n } = useTranslation();\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const languages = [\n    { key: \"vi\", name: \"Tiếng Việt\" },\n    { key: \"en\", name: \"English\" },\n    { key: \"fr\", name: \"Français\" },\n  ];\n  const languagePanelHandler = () => {\n    i18n.changeLanguage(selectedLanguage);\n    const url = `/${selectedLanguage}`;\n    props.history.push(url);\n  };\n  return (\n    <Fragment>\n      <div className=\"language-panel\">\n        <div className=\"panel-title\">Language Settings:</div>\n        <span className=\"panel-description\">\n          Select the language right below to change current web context.\n        </span>\n        <div className=\"language-select-container\">\n          <div className=\"language-select panel-label\">Language:</div>\n          <select\n            onChange={(e) => {\n              setSelectedLanguage(e.target.value);\n            }}\n            className=\"language-select-wrapper panel-text-field\"\n          >\n            <option defaultValue={i18n.language} hidden>\n              {languages\n                .filter((language) => language.key === i18n.language)\n                .map((currentLanguage) => currentLanguage.name)}\n            </option>\n            {languages.map((language) => (\n              <option key={language.key} value={language.key}>\n                {language.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div\n          onClick={languagePanelHandler}\n          className=\"btn-panel btn-language-panel-position\"\n        >\n          Save\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(LanguageSettingPanel);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/MDMarketing.js",["1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarPlus,\n  faPlus,\n  faQuestionCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Switch from \"react-switch\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport \"./MDMarketing.scss\";\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport Metric from \"../Metric/Metric\";\nimport MDHeader from \"components/MerchantDashboard/MDHeader/MDHeader\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport Tabs from \"components/MerchantDashboard/DashboardFeatures/Tabs\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport CreateVoucher from \"./VoucherHandlers/CreateVoucher\";\nimport UpdatePromotion from \"./VoucherHandlers/UpdatePromotion\";\nimport {\n  getAllPromotionAPI,\n  getAllEcouponAPI,\n  subscribeEcouponAPI,\n} from \"store/actions/ProviderAction/ProviderAction\";\nimport { validateDateBetweenTwoDates } from \"utils/DateUtils\";\n\nconst ProductFilterTab = {\n  filterTabs: [\n    { id: 0, name: \"All\" },\n    { id: 1, name: \"Ongoing\" },\n    { id: 2, name: \"Upcoming\" },\n    { id: 3, name: \"Expired\" },\n  ],\n};\nconst metricDescription = [\n  \"Claims: Total number of seller-absorbed vouchers claimed by users over the selected time period.\",\n  \"Cost: Total number of seller-absorbed vouchers claimed by users over the selected time period.\",\n  \"Usage Rate: Total number of seller-absorbed vouchers claimed by users over the selected time period.\",\n];\nfunction MDMarketing(props) {\n  const { user, provider, getAllPromotionAPI, getAllEcouponAPI } = props;\n  const [currentTab, setCurrentTab] = useState(0);\n  const [showCreateVoucher, setShowCreateVoucher] = useState(false);\n  const [promotionType, setPromotionType] = useState(0);\n  const [selectedPromotion, setSelectedPromotion] = useState({});\n  const [showUpdatePromotion, setShowUpdatePromotion] = useState(false);\n  const [voucher, setVoucher] = useState([]);\n  const [discount, setDiscount] = useState([]);\n  const [ecoupon, setEcoupon] = useState([]);\n  const [registeredEcoupon, setRegisteredEcoupon] = useState([]);\n  useEffect(() => {\n    async function fetchPromotion(id) {\n      const res1 = await getAllPromotionAPI(id);\n      const res2 = await getAllEcouponAPI(id);\n      if (res1) {\n        setVoucher(res1.promotion);\n        setDiscount(res1.discount);\n      }\n      if (res2) {\n        setEcoupon(res2.ecoupon);\n        setRegisteredEcoupon(res2.ecoupon_registered);\n      }\n    }\n    fetchPromotion(user.provider_id);\n  }, [user.provider_id]);\n\n  const subscribeEcoupon = async (id) => {\n    if (user.provider_id) {\n      var status = await props.subscribeEcouponAPI(id, user.provider_id);\n      if (status) {\n        const res = await getAllEcouponAPI(user.provider_id);\n        if (res) {\n          setEcoupon(res.ecoupon);\n          setRegisteredEcoupon(res.ecoupon_registered);\n        }\n        return;\n      }\n    }\n  };\n\n  const handleSelectTab = (value) => {};\n  return (\n    <Fragment>\n      <div\n        className=\"panel-detail-wrapper\"\n        style={{ height: \"auto\", marginTop: \"0px\" }}\n      >\n        <MDHeader visible={true} />\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 20, fontWeight: 700 }}\n        >\n          Key metrics\n        </div>\n\n        <div className=\"mkt-key-metrics-wrapper\" style={{ height: 240 }}>\n          <div\n            className=\"promotion-progress-wrapper\"\n            style={{ height: 240, border: \"2px solid #eeeeee\" }}\n          >\n            <div className=\"product-stock-quantity\">\n              {voucher?.length + discount?.length + ecoupon?.length} Promotion\n            </div>\n            <div className=\"product-stock-quantity-description\">\n              Create {60 - voucher?.length - discount?.length - ecoupon?.length}{\" \"}\n              more promotions.\n            </div>\n            <div className=\"product-progress-bar\">\n              <ProgressBar\n                bgcolor=\"#940000\"\n                progress={voucher?.length || 0}\n                height=\"6px\"\n                length={20}\n                text={\"vouchers\"}\n              />\n            </div>\n            <div className=\"product-progress-bar\">\n              <ProgressBar\n                bgcolor=\"#940000\"\n                progress={discount?.length || 0}\n                height=\"6px\"\n                length={20}\n                text={\" discounts\"}\n              />\n            </div>\n            <div className=\"product-progress-bar\">\n              <ProgressBar\n                bgcolor=\"#940000\"\n                progress={ecoupon?.length || 0}\n                height=\"6px\"\n                length={20}\n                text={\" ecoupons (subscribed)\"}\n              />\n            </div>\n            <ButtonGroup\n              width={100}\n              mgTop={10}\n              float=\"flex-start\"\n              mgBottom={15}\n            >\n              <Button\n                color={\"white\"}\n                bgColor={\"rgb(148, 0, 0)\"}\n                justifyContent={\"center\"}\n                gap={\"5px\"}\n                width={150}\n                height={30}\n                fontSize={13}\n                prefix={\n                  <FontAwesomeIcon\n                    icon={faPlus}\n                    style={{ color: \"white\", fontSize: 14 }}\n                  />\n                }\n                label={\"Create promotion\"}\n                onClick={() => setShowCreateVoucher(true)}\n              />\n            </ButtonGroup>\n          </div>\n          <Metric\n            text={metricDescription[0]}\n            width={\"100%\"}\n            height={240}\n            radius={5}\n            numeric_data={120}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Claims\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n          <Metric\n            text={metricDescription[1]}\n            width={\"100%\"}\n            height={240}\n            radius={5}\n            numeric_data={\"12\"}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Cost\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n          <Metric\n            text={metricDescription[2]}\n            width={\"100%\"}\n            height={240}\n            radius={5}\n            numeric_data={\"43\"}\n            border={\"2px solid #eeeeee\"}\n          >\n            <span className=\"metric-title\">\n              Usage rate\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n        </div>\n        <div className=\"mkt-section-title\">\n          <span className=\"mkt-section-text\" style={{ fontWeight: 700 }}>\n            Voucher List\n          </span>\n        </div>\n        <div className=\"product-table-container\">\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                <tr className=\"table-row-wrapper\">\n                  <th>Voucher code</th>\n                  <th>Voucher name</th>\n                  <th>Description</th>\n                  <th>Value</th>\n                  <th>Start at</th>\n                  <th>Expire at</th>\n                  <th>Usage limit</th>\n                  <th>Status</th>\n                </tr>\n                {voucher?.map((item, index) => (\n                  <tr\n                    className=\"table-row-wrapper\"\n                    key={item.promotion_id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      setPromotionType(0);\n                      setSelectedPromotion(item);\n                      setShowUpdatePromotion(true);\n                    }}\n                  >\n                    <td\n                      className=\"product-name\"\n                      style={{\n                        textAlign: \"left\",\n                        width: \"12.5%\",\n                      }}\n                    >\n                      {item.promotion_code || \"—\"}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"center\",\n                        width: \"12.5%\",\n                      }}\n                    >\n                      {item.promotion_name || \"—\"}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"left\",\n                        width: \"25%\",\n                      }}\n                    >\n                      {item.promotion_description || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      $ {item?.promotion_value?.toFixed(2) || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.start_at).toLocaleDateString() || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.expire_at).toLocaleDateString() || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {item.limited_offer || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {validateDateBetweenTwoDates(\n                        new Date(item.start_at),\n                        new Date(item.expire_at),\n                        new Date()\n                      ) === true\n                        ? \"Available\"\n                        : \"Expired\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"mkt-section-title\">\n          <span className=\"mkt-section-text\" style={{ fontWeight: 700 }}>\n            Discount List\n          </span>\n        </div>\n        <div className=\"product-table-container\">\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                <tr className=\"table-row-wrapper\">\n                  <th>Discount code</th>\n                  <th>Description</th>\n                  <th>Value</th>\n                  <th>Start at</th>\n                  <th>Expire at</th>\n                  <th>Usage limit</th>\n                  <th>Status</th>\n                </tr>\n                {discount?.map((item, index) => (\n                  <tr\n                    className=\"table-row-wrapper\"\n                    key={index}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      setPromotionType(1);\n                      setSelectedPromotion(item);\n                      setShowUpdatePromotion(true);\n                    }}\n                  >\n                    <td\n                      className=\"product-name\"\n                      style={{\n                        textAlign: \"left\",\n                        width: \"25%\",\n                      }}\n                    >\n                      {item.discount_name || \"P_SALEOFF10USD\"}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"center\",\n                        width: \"25%\",\n                      }}\n                    >\n                      {item.discount_description || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {`${(item.discount_value * 100).toFixed(0)}%` || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.start_at).toLocaleDateString() || \"—\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.expire_at).toLocaleDateString() || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      0\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {validateDateBetweenTwoDates(\n                        new Date(item.start_at),\n                        new Date(item.expire_at),\n                        new Date()\n                      ) === true\n                        ? \"Available\"\n                        : \"Expired\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"mkt-section-title\" style={{ marginTop: 20 }}>\n          <span className=\"mkt-section-text\" style={{ fontWeight: 700 }}>\n            Subscribe Ecoupon\n          </span>\n        </div>\n        <div\n          className=\"product-table-container\"\n          style={{ margin: \"10px 0 30px 0\" }}\n        >\n          <Tabs\n            tabs={ProductFilterTab.filterTabs}\n            boxWidth={\"8%\"}\n            secondaryTabGroup={true}\n            borderTop={true}\n            fixed={false}\n            current={currentTab}\n            selectItem={handleSelectTab}\n          />\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                <tr className=\"table-row-wrapper\">\n                  <th>Ecoupon name</th>\n                  <th>Description</th>\n                  <th>Delivery method</th>\n                  <th>Value</th>\n                  <th>Start at</th>\n                  <th>Expire at</th>\n                  <th>Status</th>\n                  <th>Subscription</th>\n                </tr>\n                {registeredEcoupon?.map((item, index) => (\n                  <tr className=\"table-row-wrapper\" key={index}>\n                    <td\n                      className=\"product-name\"\n                      style={{\n                        textAlign: \"left\",\n                        width: \"15%\",\n                      }}\n                    >\n                      {item.ecoupon_code}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"center\",\n                        width: \"25%\",\n                      }}\n                    >\n                      {item.ecoupon_description || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {item.delivery_mode || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {`$ ${item.ecoupon_value?.toFixed(2)}` || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.start_date).toLocaleDateString() || \"—\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.expire_date).toLocaleDateString() || \"—\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {validateDateBetweenTwoDates(\n                        new Date(item.start_date),\n                        new Date(item.expire_date),\n                        new Date()\n                      ) === true\n                        ? \"Available\"\n                        : \"Expired\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"20%\",\n                      }}\n                    >\n                      <ButtonGroup\n                        float=\"center\"\n                        mgTop={10}\n                        gap={12}\n                        mgBottom={5}\n                        width={100}\n                      >\n                        <Button\n                          color={\"black\"}\n                          bglight={true}\n                          border={\"#5d5d5d 1.5px solid\"}\n                          gap={\"10px\"}\n                          justifyContent={\"center\"}\n                          width={100}\n                          height={30}\n                          label=\"Unsubscribe\"\n                        />\n                      </ButtonGroup>\n                    </td>\n                  </tr>\n                ))}\n                {ecoupon?.map((item, index) => (\n                  <tr className=\"table-row-wrapper\" key={index}>\n                    <td\n                      className=\"product-name\"\n                      style={{\n                        textAlign: \"left\",\n                        width: \"15%\",\n                      }}\n                    >\n                      {item.ecoupon_code}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"center\",\n                        width: \"25%\",\n                      }}\n                    >\n                      {item.ecoupon_description || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {item.delivery_mode || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {`$ ${item.ecoupon_value?.toFixed(2)}` || \"—\"}\n                    </td>\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.start_date).toLocaleDateString() || \"—\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {new Date(item.expire_date).toLocaleDateString() || \"—\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"10%\",\n                      }}\n                    >\n                      {validateDateBetweenTwoDates(\n                        new Date(item.start_date),\n                        new Date(item.expire_date),\n                        new Date()\n                      ) === true\n                        ? \"Available\"\n                        : \"Expired\"}\n                    </td>\n\n                    <td\n                      style={{\n                        textAlign: \"center\",\n                        width: \"20%\",\n                      }}\n                    >\n                      <ButtonGroup\n                        float=\"center\"\n                        mgTop={10}\n                        gap={12}\n                        mgBottom={5}\n                        width={100}\n                      >\n                        <Button\n                          color={\"black\"}\n                          bglight={true}\n                          border={\"#5d5d5d 1.5px solid\"}\n                          gap={\"10px\"}\n                          justifyContent={\"center\"}\n                          width={100}\n                          height={30}\n                          label=\"Subscribe\"\n                          onClick={() => subscribeEcoupon(item.ecoupon_id)}\n                        />\n                      </ButtonGroup>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <CreateVoucher\n        visible={showCreateVoucher}\n        setVisible={setShowCreateVoucher}\n      />\n      <UpdatePromotion\n        promotionType={promotionType}\n        selectedPromotion={selectedPromotion}\n        visible={showUpdatePromotion}\n        setVisible={setShowUpdatePromotion}\n      />\n    </Fragment>\n  );\n}\n\nMDMarketing.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getAllPromotionAPI: PropTypes.func.isRequired,\n  getAllEcouponAPI: PropTypes.func.isRequired,\n  subscribeEcouponAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getAllPromotionAPI,\n    getAllEcouponAPI,\n    subscribeEcouponAPI,\n  })(MDMarketing)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/NavFlyout/NavFlyout.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/Tabs.js",["1285","1286","1287","1288","1289","1290"],"import { Fragment, useEffect } from \"react\";\nimport { Redirect, useSearchParams } from \"react-router-dom\";\nimport ProductList from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductOverview\";\nimport \"./Tabs.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/fontawesome-free-solid\";\n\nfunction Tabs({\n  tabs,\n  current,\n  selectItem,\n  fixed,\n  borderTop,\n  secondaryTabGroup,\n  children,\n  boxWidth,\n}) {\n  const tabStyling = {\n    position: fixed ? \"fixed\" : \"unset\",\n    border: borderTop ? \"3px solid #eeeeee\" : \"none\",\n    width: secondaryTabGroup ? \"calc(100% - 6px)\" : \"calc(100% - 252px)\",\n  };\n  return (\n    <Fragment>\n      <div className=\"tab-bar-container\" style={tabStyling}>\n        {tabs?.map((tab) => (\n          <div\n            key={tab.id}\n            className=\"tab-box\"\n            onClick={() => selectItem(tab.id)}\n            style={\n              current === tab.id\n                ? {\n                    paddingTop: \"3px\",\n                    borderBottom: \"3px solid rgb(44, 44, 44)\",\n                    width: boxWidth || \"80px\",\n                    fontSize: \"18px\",\n                  }\n                : { borderBottom: \"none\", width: boxWidth || \"80px\" }\n            }\n          >\n            <span className=\"tab-item\">{tab.name}</span>\n          </div>\n        ))}\n        {children}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Tabs;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductDetail.js",["1291","1292","1293","1294","1295","1296","1297"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDownload,\n  faPlus,\n  faQuestionCircle,\n  faTrashAlt,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport {\n  getProductListAPI,\n  getUpcomingProductAPI,\n} from \"store/actions/ProductAction/ProductAction\";\nimport \"../Panel.scss\";\nimport { faFileDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport AddUpcomingProduct from \"./UpcomingProductHandler/AddUpcomingProduct\";\nimport Chart from \"react-apexcharts\";\nimport Metric from \"components/MerchantDashboard/DashboardFeatures/Metric/Metric\";\nimport ViewUpcomingProduct from \"./UpcomingProductHandler/ViewUpcomingProduct\";\n\nfunction UpcomingProductDetail(props) {\n  const { user, product, getProductListAPI, getUpcomingProductAPI } = props;\n  const [items, setItems] = useState([]);\n  const [showHandlerPanel, setShowHandlerPanel] = useState(0);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n\n  const [question, setQuestion] = useState(\n    \"Are you eager to try this product?\"\n  );\n  const [choice, setChoice] = useState([]);\n  const [series, setSeries] = useState([20, 20, 20, 20, 20]);\n  const [options, setOptions] = useState({\n    colors: [\"#1CBB9B\", \"#E11A22\", \"#F8A825\", \"#02ADC1\", \"#C5CFD1\"],\n    plotOptions: {\n      pie: {\n        startAngle: 0,\n        endAngle: 360,\n        offsetX: 0,\n        offsetY: 0,\n        customScale: 1,\n        expandOnClick: true,\n        dataLabels: {\n          offset: -10,\n          fontSize: 26,\n          minAngleToShowLabel: 10,\n        },\n      },\n    },\n    legend: {\n      show: true,\n      fontSize: \"13px\",\n      fontFamily: \"Poppins, sans-serif\",\n      fontWeight: 400,\n      offsetX: 20,\n      offsetY: 20,\n    },\n    chart: {\n      width: 380,\n      type: \"pie\",\n      fontFamily: \"Poppins, sans-serif\",\n    },\n    labels: [\"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\"],\n    responsive: [\n      {\n        breakpoint: 800,\n        options: {\n          chart: {\n            width: 200,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  });\n  useEffect(() => {\n    async function fetchUpcomingProducts(id) {\n      const result = await getUpcomingProductAPI(id);\n      if (result.length === 0) return;\n      const seriesOnFirstRender = result[0]?.statistic?.map(\n        (s) => s.num_responses\n      );\n      setChoice(result[0]?.choice);\n      setQuestion(result[0]?.question);\n      setSeries(seriesOnFirstRender);\n      setOptions({\n        ...options,\n        labels: result[0]?.statistic?.map((s) => s.response),\n      });\n      setItems(result);\n    }\n    fetchUpcomingProducts(user.provider_id);\n  }, [user.provider_id]);\n  \n  const handleUpdateStatistics = (p) => {\n    setChoice(p.choice);\n    setQuestion(p.question);\n    const seriesOnFirstRender = p.statistic?.map((s) => s.num_responses);\n    setSeries(seriesOnFirstRender);\n    setOptions({\n      ...options,\n      labels: p.statistic?.map((s) => s.response),\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"double-panel-container\">\n        <div className=\"main-detail-panel-wrapper\">\n          <div\n            className=\"pie-chart-wrapper\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-start\",\n              backgroundColor: \"white\",\n            }}\n          >\n            <Chart\n              options={options}\n              series={series}\n              type=\"pie\"\n              width=\"400\"\n              height=\"220\"\n            />\n            <Metric\n              text={\n                \"UP Surveillance help approach customer's preference about your pre-release product on purpose of product's improvement\"\n              }\n              width={\"100%\"}\n              height={220}\n              radius={5}\n              border={\"2px solid #eeeeee\"}\n            >\n              <span className=\"metric-title\">\n                Surveillance Detail\n                <FontAwesomeIcon\n                  className=\"question-icon\"\n                  icon={faQuestionCircle}\n                />\n              </span>\n              <div\n                className=\"up-pro-detail\"\n                style={{\n                  fontSize: 13,\n                  alignSelf: \"flex-start\",\n                  marginLeft: 25,\n                }}\n              >\n                <b>Question: </b>\n                {question}\n              </div>\n              <div\n                className=\"homebody-sb-radio-detail-wrapper\"\n                style={{ marginBottom: 10 }}\n              >\n                {choice?.map((c, index) => (\n                  <div className=\"option-answer\" key={index}>\n                    <label className=\"hb-sb-type-wrapper radio\">\n                      <input type=\"radio\" value={\"abc\"} name=\"survey\" />\n                      <span className=\"hb-sb-label-radio option-box-radio-label\">\n                        A{index + 1}: {c?.content}\n                      </span>\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </Metric>\n          </div>\n          <div className=\"panel-detail-head-wrapper\">\n            <div className=\"panel-detail-title\">Pre-release Product</div>\n            <Button\n              buttonType=\"primary\"\n              justifyContent={\"center\"}\n              width={250}\n              height={32}\n              radius={\"0px\"}\n              label={\"Add upcoming product\"}\n              onClick={() => setShowHandlerPanel(0)}\n              prefix={\n                <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n              }\n            />\n          </div>\n          <div\n            className=\"upcoming-product-table-wrapper\"\n            style={{\n              backgroundColor:\n                selectedProduct[0] === \"10000001\" ? \"#E4E4E4\" : \"white\",\n            }}\n          >\n            {items?.map((up, index) => (\n              <div\n                onClick={() => {\n                  setSelectedProduct(up);\n                  handleUpdateStatistics(up);\n                  setShowHandlerPanel(1);\n                }}\n                className=\"upcoming-product-item\"\n                style={{\n                  borderBottom:\n                    index === items.length - 1 ? \"2px solid #d6d6d6\" : \"unset\",\n                }}\n              >\n                <div className=\"upcoming-product-img\">\n                  <img src={up.product_image} alt=\"upcoming_product_img\" />\n                </div>\n                <div className=\"upcoming-product-content-wrapper\">\n                  <span className=\"upd-name\">{up.product_name}</span>\n                  <span className=\"upd-price\">\n                    &#36; {up.estimated_price?.toFixed(2)}\n                  </span>\n                  <span className=\"upd-description\">\n                    {up.product_description}\n                  </span>\n                </div>\n                <span className=\"upd-download\">Get survey result</span>\n                <div className=\"menu-product-price upd-icon\">\n                  <FontAwesomeIcon\n                    className=\"button-icon\"\n                    icon={faFileDownload}\n                  />\n                </div>\n                <div className=\"menu-product-price  upd-icon\">\n                  <FontAwesomeIcon className=\"button-icon\" icon={faTrashAlt} />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"sub-detail-panel-wrapper\">\n          {showHandlerPanel === 0 ? (\n            <AddUpcomingProduct />\n          ) : (\n            <ViewUpcomingProduct selectedProduct={selectedProduct} />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nUpcomingProductDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  getUpcomingProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getProductListAPI, getUpcomingProductAPI })(\n    UpcomingProductDetail\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/MDHeader/MDHeader.js",["1298","1299","1300","1301","1302","1303","1304","1305","1306","1307"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhone, faSearch, faStar } from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport { getProviderByIdAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport \"./MDHeader.scss\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\n\nconst dayOfWeek = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\",\n];\n\nfunction MDHeader(props) {\n  const [provider, setProvider] = useState();\n  const [operationDescription, setOperationDescription] = useState(\"\");\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n  useEffect(() => {\n    async function fetchingDataAPI() {\n      const result = await props.getProviderByIdAPI(\n        props.user.provider_id,\n        2,\n        -1\n      ); //type = 2'\n      setProvider(result?.data);\n      var today = new Date();\n      const operation = result?.operation_time[dayOfWeek[today.getDay()]];\n      if (!operation?.is_day_off) {\n        setOperationDescription(\n          `Open until ${operation?.close_time?.slice(0, 5)} PM`\n        );\n      } else {\n        setOperationDescription(`Service is not available today`);\n      }\n    }\n    if (props.user.provider_id !== -1) fetchingDataAPI();\n  }, [props.user?.provider_id]);\n\n  return props.visible ? (\n    <Fragment>\n      {provider && (\n        <div className=\"md-pro-gen-head-container\">\n          <div className=\"md-head-image-wrapper\">\n            <img\n              src={provider.avatar}\n              alt=\"provider_pics\"\n              className=\"md-head-image\"\n            />\n          </div>\n          <div className=\"md-head-content-wrapper\">\n            <span className=\"md-head-main-text-large\">\n              {provider.merchant_name}\n            </span>\n            <span className=\"md-head-sub-text-large\">\n              <FontAwesomeIcon icon={faMapMarkedAlt} className=\"md-text-icon\" />\n              277, Nguyen Van Cu, ward Nguyen Cu Trinh, district 5, Ho Chi Minh\n              city\n            </span>\n            <span\n              className=\"md-head-sub-text-medium\"\n              style={{ margin: \"5px 0\" }}\n            >\n              <FontAwesomeIcon icon={faPhone} className=\"md-text-icon\" />\n              033-790-7047\n            </span>\n            <span className=\"md-head-sub-text-large\">\n              {[...Array(provider.rating || 5)].map((e, index) => (\n                <FontAwesomeIcon\n                  key={index}\n                  icon={faStar}\n                  className=\"md-text-icon\"\n                  style={{ color: \"rgb(255, 221, 0)\", fontSize: 16 }}\n                />\n              ))}\n              {[...Array(5 - (provider.rating || 5))].map((e, index) => (\n                <FontAwesomeIcon\n                  key={index}\n                  icon={faStar}\n                  className=\"md-text-icon\"\n                  style={{ color: \"rgb(200, 200, 200)\", fontSize: 16 }}\n                />\n              ))}{\" \"}\n              {`${provider.rating || \"5.0\"} (${\n                provider.total_review || \" 10 ratings \"\n              })`}\n            </span>\n            <span\n              className=\"md-head-sub-text-medium\"\n              style={{ color: \"#101010\" }}\n            >\n              Cooking time: {provider.estimated_cooking_time} mins\n            </span>\n            <span\n              className=\"md-head-sub-text-large\"\n              style={{ color: \"#101010\" }}\n            >\n              {operationDescription}\n            </span>\n            <span\n              className=\"md-head-sub-text-medium\"\n              style={{\n                color: \"#810000\",\n                fontWeight: 700,\n                cursor: \"pointer\",\n                userSelect: \"none\",\n              }}\n              onClick={() => props.setMapView(true)}\n            >\n              Show on map\n            </span>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  ) : (\n    <Fragment></Fragment>\n  );\n}\n\nMDHeader.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getProviderByIdAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getProviderByIdAPI,\n  })(MDHeader)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/ProviderDetail/PDBody/PDUpcomingProduct/PDUpcomingProduct.js",["1308","1309","1310"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { faExpand, faCompress } from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"../PDProductDetail/PDProductDetail.scss\";\nimport { addToCart } from \"store/actions/CartAction/CartAction\";\nimport { submitSurveyUpcomingProductAPI } from \"store/actions/ProductAction/ProductAction\";\nfunction PDUpcomingProduct(props) {\n  const [choice, setChoice] = useState(\"\");\n  const [heightViewPort, setHeightViewPort] = useState(180);\n  const [showSurveyNote, setShowSurveyNote] = useState(false);\n  const [isViewPortExpanded, setIsViewPortExpanded] = useState(false);\n  const { upcomingProduct } = props;\n  const heightForExpansion = 50;\n  const submitSurvey = async () => {\n    const data = {\n      upcoming_product_id: upcomingProduct.upcoming_product_id,\n      customer_id: props.user.profile.user_id,\n      response: choice,\n    };\n    const result = await props.submitSurveyUpcomingProductAPI(data);\n    if (result) props.setShowProductDetail(false);\n  };\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"auto\" });\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"pd-pr-d-header\" style={{ height: `${heightViewPort}px` }}>\n        <img\n          className=\"pd-pr-d-image\"\n          src={upcomingProduct.product_image}\n          alt=\"product_photo\"\n        />\n        <div\n          className=\"pd-pr-d-icon-abs-wrapper\"\n          style={{ marginTop: `calc(${heightViewPort}px - 30px)` }}\n          onClick={() => {\n            !isViewPortExpanded\n              ? setHeightViewPort(180 + heightForExpansion)\n              : setHeightViewPort(180);\n            setIsViewPortExpanded((prev) => !prev);\n          }}\n        >\n          <FontAwesomeIcon\n            className=\"pd-pr-d-icon-abs\"\n            icon={!isViewPortExpanded ? faExpand : faCompress}\n          />\n        </div>\n      </div>\n      <div\n        className=\"pd-pr-d-body\"\n        style={{\n          height: !isViewPortExpanded\n            ? \"350px\"\n            : `${350 - heightForExpansion}px`,\n        }}\n      >\n        <div className=\"pd-pr-d-main-text\">{upcomingProduct?.product_name}</div>\n        <div className=\"pd-pr-d-sub-text\">\n          <span style={{ fontSize: 15, fontWeight: 700 }}>\n            $ {upcomingProduct?.estimated_price?.toFixed(2)}{\" \"}\n          </span>\n          {\" • \"}\n          <span style={{ fontSize: 12 }}>\n            {upcomingProduct.product_description}\n          </span>\n        </div>\n        <div className=\"pd-pr-d-sub-text\">\n          <span style={{ fontSize: 13, fontWeight: 700, fontStyle: \"italic\" }}>\n            Will be released soon\n          </span>\n        </div>\n        <div className=\"option-box-wrapper-survey\">\n          <div className=\"option-question\">\n            <div className=\"option-box-title-wrapper-1\">\n              <span className=\"option-box-title-main-survey\">\n                {upcomingProduct.question}\n              </span>\n            </div>\n          </div>\n          <div\n            className=\"homebody-sb-radio-detail-wrapper\"\n            style={{ height: isViewPortExpanded ? 200 : 235 }}\n          >\n            {upcomingProduct?.choice?.map((item, index) => (\n              <div className=\"option-answer \">\n                <label className=\"hb-sb-type-wrapper radio\">\n                  <input\n                    type=\"radio\"\n                    value={item.content}\n                    onChange={(e) => setChoice(e.target.value)}\n                    name=\"survey\"\n                  />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    {item.content}\n                  </span>\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n        <ButtonGroup width={100} float={\"center\"} mgBottom={10}>\n          <Button\n            color={\"white\"}\n            bgColor={\"black\"}\n            justifyContent={\"center\"}\n            gap={\"10px\"}\n            width={120}\n            fontSize={13}\n            height={35}\n            label={`Submit`}\n            onClick={() => submitSurvey(upcomingProduct)}\n          />\n        </ButtonGroup>\n      </div>\n    </Fragment>\n  );\n}\n\nPDUpcomingProduct.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  submitSurveyUpcomingProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { submitSurveyUpcomingProductAPI })(\n    PDUpcomingProduct\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/CustomButtonGroup.js",["1311","1312"],"import {\n  faArrowLeft,\n  faArrowRight,\n  faChevronCircleLeft,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Fragment } from \"react\";\n\nconst CustomButtonGroup = ({ next, previous, carouselState, children }) => {\n  const { totalItems, currentSlide, slidesToShow } = carouselState;\n  return (\n    <Fragment>\n      <div className=\"cbg-header\" style={{ position: \"relative\" }}>\n        {children}\n        <div className=\"custom-button-group\">\n          <FontAwesomeIcon\n            icon={faArrowLeft}\n            className={\n              currentSlide !== 0\n                ? \"carousel-icon-visible\"\n                : \"carousel-icon-no-click\"\n            }\n            onClick={() => previous()}\n          />\n          <FontAwesomeIcon\n            icon={faArrowRight}\n            className={\n              currentSlide !== totalItems - slidesToShow\n                ? \"carousel-icon-visible\"\n                : \"carousel-icon-no-click\"\n            }\n            onClick={() => next()}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport { CustomButtonGroup };\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/CategoryAction/CategoryAction.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductHandler/ViewUpcomingProduct.js",["1313","1314"],"import { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"components/MerchantDashboard/DashboardFeatures/Panel.scss\";\nimport \"style/Common.scss\";\n\nfunction ViewUpcomingProduct(props) {\n  return (\n    <Fragment>\n      <div\n        className=\"product-handler-container\"\n        style={{ minHeight: 600, overflowY: \"hidden\" }}\n      >\n        <div\n          className=\"product-detail-form-input-wrapper\"\n          style={{ fontWeight: 700 }}\n        >\n          {props.selectedProduct.product_name}\n        </div>\n        <div className=\"product-image-wrapper-edit\">\n          <img\n            style={{ objectFit: \"cover\" }}\n            alt=\"upcoming_product_image\"\n            src={props.selectedProduct.product_image}\n            width={150}\n            height={150}\n          />\n        </div>\n        <span className=\"product-detail-form-label\">\n          <b>Description</b>\n        </span>\n        <div\n          className=\"product-detail-form-input-wrapper\"\n          style={{ fontSize: 13, fontStyle: \"italic\" }}\n        >\n          {props.selectedProduct.product_description}\n        </div>\n        <span className=\"product-detail-form-label\">\n          <b>Estimated price:</b> ${\" \"}\n          {props.selectedProduct.estimated_price?.toFixed(2)}\n        </span>\n      </div>\n    </Fragment>\n  );\n}\n\nViewUpcomingProduct.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(connect(mapStateToProps, {})(ViewUpcomingProduct));\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/UpcomingProductHandler/AddUpcomingProduct.js",["1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325"],"import { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"../ProductHandler/ProductHandler.scss\";\nimport \"components/MerchantDashboard/DashboardFeatures/Panel.scss\";\nimport \"style/Common.scss\";\n\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport CategorySelector from \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport {\n  addUpcomingProductAPI,\n  addSurveyProductAPI,\n} from \"store/actions/ProductAction/ProductAction\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport {\n  faPlus,\n  faSearch,\n  faUndo,\n  faCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nconst initialValues = {\n  productName: \"\",\n  productDescription: \"\",\n  estimatedPrice: 0,\n  productImage: \"\",\n  question: \"Are you eager to try this product?\",\n  upcoming_product_id: 1,\n  start_at: \"2022-02-02\",\n  expire_at: \"2022-04-02\",\n  choice: \"abc\",\n  a1: \"\",\n  a2: \"\",\n  a3: \"\",\n  a4: \"\",\n  a5: \"\",\n};\n\nfunction AddUpcomingProduct(props) {\n  const addProduct = async (values) => {\n    const formData = {\n      provider_id: props.user.provider_id,\n      product_name: values.productName,\n      product_description: values.productDescription,\n      estimated_price: values.estimatedPrice,\n      product_image: \"\",\n    };\n    const result = await props.addUpcomingProductAPI(formData);\n    if (result.status) {\n      const surveyFormData1 = {\n        upcoming_product_id: result.upcoming_product_id,\n        question: values.question,\n        start_at: \"2022-7-26\",\n        expire_at: \"2022-7-26\",\n        choice: values.a1,\n      };\n      props.addSurveyProductAPI(surveyFormData1);\n      const surveyFormData2 = {\n        upcoming_product_id: result.upcoming_product_id,\n        question: values.question,\n        start_at: \"2022-7-26\",\n        expire_at: \"2022-7-26\",\n        choice: values.a2,\n      };\n      props.addSurveyProductAPI(surveyFormData2);\n      const surveyFormData3 = {\n        upcoming_product_id: result.upcoming_product_id,\n        question: values.question,\n        start_at: \"2022-7-26\",\n        expire_at: \"2022-7-26\",\n        choice: values.a3,\n      };\n      props.addSurveyProductAPI(surveyFormData3);\n      const surveyFormData4 = {\n        upcoming_product_id: result.upcoming_product_id,\n        question: values.question,\n        start_at: \"2022-7-26\",\n        expire_at: \"2022-7-26\",\n        choice: values.a4,\n      };\n      props.addSurveyProductAPI(surveyFormData4);\n      const surveyFormData5 = {\n        upcoming_product_id: result.upcoming_product_id,\n        question: values.question,\n        start_at: \"2022-7-26\",\n        expire_at: \"2022-7-26\",\n        choice: values.a5,\n      };\n      props.addSurveyProductAPI(surveyFormData5);\n    }\n  };\n  return (\n    <Formik initialValues={initialValues}>\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <Form style={{ width: \"100%\" }}>\n            <div className=\"panel-detail-title\" style={{ marginTop: 0 }}>\n              Create surveillance\n            </div>\n            <div\n              className=\"option-box-wrapper-survey\"\n              style={{ marginBottom: 5 }}\n            >\n              <span\n                className=\"option-box-title-main-survey\"\n                style={{\n                  fontSize: 14,\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                  gap: 10,\n                }}\n              >\n                <span style={{ width: \"100%\", marginBottom: 10, fontSize: 14 }}>\n                  <b>Question: </b>\n                  <Field type=\"text\" style={{ width: \"90%\" }} name=\"question\" />\n                </span>\n              </span>\n              <div className=\"homebody-sb-radio-detail-wrapper\">\n                <label\n                  className=\"hb-sb-type-wrapper radio\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    gap: 10,\n                  }}\n                >\n                  <input type=\"radio\" checked={false} />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    A1:{\" \"}\n                    <Field\n                      type=\"text\"\n                      style={{ border: \"none\", background: \"transparent\" }}\n                      placeholder={\"Type your answer here\"}\n                      name=\"a1\"\n                    />\n                  </span>\n                </label>\n                <label\n                  className=\"hb-sb-type-wrapper radio\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    gap: 10,\n                  }}\n                >\n                  <input type=\"radio\" checked={false} />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    A2:{\" \"}\n                    <Field\n                      type=\"text\"\n                      style={{ border: \"none\", background: \"transparent\" }}\n                      placeholder={\"Type your answer here\"}\n                      name=\"a2\"\n                    />\n                  </span>\n                </label>\n                <label\n                  className=\"hb-sb-type-wrapper radio\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    gap: 10,\n                  }}\n                >\n                  <input type=\"radio\" checked={false} />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    A3:{\" \"}\n                    <Field\n                      type=\"text\"\n                      style={{ border: \"none\", background: \"transparent\" }}\n                      placeholder={\"Type your answer here\"}\n                      name=\"a3\"\n                    />\n                  </span>\n                </label>\n                <label\n                  className=\"hb-sb-type-wrapper radio\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    gap: 10,\n                  }}\n                >\n                  <input type=\"radio\" checked={false} />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    A4:{\" \"}\n                    <Field\n                      type=\"text\"\n                      style={{ border: \"none\", background: \"transparent\" }}\n                      placeholder={\"Type your answer here\"}\n                      name=\"a4\"\n                    />\n                  </span>\n                </label>\n                <label\n                  className=\"hb-sb-type-wrapper radio\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    gap: 10,\n                  }}\n                >\n                  <input type=\"radio\" checked={false} />\n                  <span className=\"hb-sb-label-radio option-box-radio-label\">\n                    A5:{\" \"}\n                    <Field\n                      type=\"text\"\n                      style={{ border: \"none\", background: \"transparent\" }}\n                      placeholder={\"Type your answer here\"}\n                      name=\"a5\"\n                    />\n                  </span>\n                </label>\n              </div>\n            </div>\n            <div\n              className=\"product-handler-container\"\n              style={{ marginBottom: 50 }}\n            >\n              <span className=\"product-detail-form-label\">Name</span>\n              <div className=\"product-detail-form-input-wrapper\">\n                <Field\n                  type=\"text\"\n                  name=\"productName\"\n                  placeholder=\"Product name\"\n                />\n              </div>\n              <div className=\"form-label-description\">\n                <span className=\"product-detail-form-label\">Description</span>\n                <span className=\"letter-counter\">\n                  {values.productDescription.length} / 200\n                </span>\n              </div>\n              <div className=\"product-detail-form-input-wrapper\">\n                <Field\n                  className=\"product-detail-textarea\"\n                  style={{ height: 80 }}\n                  as=\"textarea\"\n                  name=\"productDescription\"\n                  placeholder=\"Description about your product\"\n                />\n              </div>\n              <span className=\"product-detail-form-label\">Photo</span>\n\n              <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                  }\n                  width=\"50%\"\n                  height={30}\n                  label=\"Upload a photo\"\n                />\n              </ButtonGroup>\n              <span className=\"product-detail-form-label\">Estimated Price</span>\n              <div className=\"product-detail-form-with-select\">\n                <Field\n                  className=\"input-price\"\n                  type=\"text\"\n                  name=\"estimatedPrice\"\n                  placeholder=\"Price\"\n                />\n                <Field\n                  className=\"select-currency\"\n                  as=\"select\"\n                  name=\"curency\"\n                  placeholder=\"Currency\"\n                >\n                  <option>USD</option>\n                  <option>VND</option>\n                  <option>EURO</option>\n                </Field>\n              </div>\n            </div>\n\n            <ButtonGroup\n              width={90}\n              float={\"space-between\"}\n              mgTop={10}\n              gap={10}\n              mgBottom={10}\n            >\n              <Button\n                buttonType=\"secondary\"\n                justifyContent={\"center\"}\n                width={100}\n                height={36}\n                radius={\"0px\"}\n                label={\"Undo\"}\n                prefix={\n                  <FontAwesomeIcon icon={faUndo} style={{ color: \"white\" }} />\n                }\n              />\n              <Button\n                onClick={() => addProduct(values)}\n                buttonType=\"primary\"\n                justifyContent={\"center\"}\n                width={100}\n                height={36}\n                radius={\"0px\"}\n                label={\"Add\"}\n                prefix={\n                  <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n                }\n              />\n            </ButtonGroup>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nAddUpcomingProduct.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  addUpcomingProductAPI: PropTypes.func.isRequired,\n  addSurveyProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addUpcomingProductAPI, addSurveyProductAPI })(\n    AddUpcomingProduct\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Skeleton/ProviderGroupSkeleton.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/NavFlyout/NavFlyoutAnchor.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/VoucherHandlers/CreateVoucher.js",["1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Form, Field } from \"formik\";\nimport \"./VoucherHandlers.scss\";\nimport locations from \"assets/json_location/locations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faBuilding,\n  faAddressBook,\n  faStore,\n  faShoppingBasket,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport SwitchSelector from \"react-switch-selector\";\nimport {\n  addDiscountAPI,\n  addPromotionAPI,\n} from \"store/actions/ProviderAction/ProviderAction\";\n\nconst optionSwitcher = [\n  {\n    label: \"Store promotion\",\n    value: 0,\n    selectedBackgroundColor: \"rgb(148, 0, 0);\",\n  },\n  {\n    label: \"Product promotion\",\n    value: 1,\n    selectedBackgroundColor: \"rgb(148, 0, 0);\",\n  },\n];\nconst initialValues = {\n  //  provider_id: 1000001,\n  promotion_code: \"\",\n  promotion_name: \"\",\n  start_at: new Date(),\n  expire_at: new Date(),\n  promotion_value: 0,\n  min_order_value: \"2.00\",\n  max_discount_value: \"50.00\",\n  payment_method_id: 1,\n  limited_offer: 1,\n  weekly_usage_limit: 1,\n  promotion_description: \"\",\n  delivery_mode: 1,\n};\nconst selectedTypeStyle = {\n  backgroundColor: \"#610000\",\n  border: \"1px solid #500000\",\n  color: \"white\",\n};\nfunction CreateVoucher(props) {\n  const [promotionOption, setPromotionOption] = useState(false);\n  const initialSelectedIndex = optionSwitcher.findIndex(\n    ({ value }) => value === 0\n  );\n  const onChange = (newValue) => {\n    setPromotionOption(newValue);\n  };\n  const handleSubmitForm = async (values) => {\n    if (promotionOption === 1) {\n      const data = {\n        provider_id: props.user?.provider_id,\n        discount_name: values.promotion_name,\n        discount_value: parseFloat(values.promotion_value),\n        discount_description: values.promotion_description,\n        start_at: values.start_at,\n        expire_at: values.expire_at,\n      };\n      const status = await props.addDiscountAPI(data);\n      if (status) props.setVisible(false);\n      return;\n    }\n    const data = {\n      provider_id: props.user?.provider_id,\n      promotion_code: values.promotion_code,\n      promotion_name: values.promotion_name,\n      promotion_value: parseFloat(values.promotion_value),\n      promotion_description: values.promotion_description,\n      min_order_value: values.min_order_value,\n      max_discount_value: values.max_discount_value,\n      start_at: values.start_at,\n      expire_at: values.expire_at,\n      payment_method_id: values.payment_method_id,\n      limited_offer: parseInt(values.limited_offer),\n      weekly_usage_limit_per_user: parseInt(values.weekly_usage_limit),\n      delivery_mode: parseInt(values.delivery_mode),\n      update_at: new Date(),\n    };\n    const status = await props.addPromotionAPI(data);\n    console.log(status);\n    if (status) props.setVisible(false);\n    return;\n  };\n  return (\n    <Fragment>\n      <Modal\n        openModal={props.visible}\n        closeModal={() => {\n          props.setVisible(false);\n        }}\n        title={\"Create promotion\"}\n        width={50}\n        height={650}\n        padding=\"5px 50px\"\n        transparent=\"30%\"\n        hideHeader={true}\n      >\n        <Formik initialValues={initialValues} validateOnChange={false}>\n          {(formikProps) => {\n            const { values, errors, touched } = formikProps;\n            return (\n              <Form className=\"modal-form-input-wrapper\">\n                <Fragment>\n                  <div\n                    className=\"modal-input-row\"\n                    style={{\n                      marginBottom: 5,\n                      marginTop: 10,\n                    }}\n                  >\n                    <span className=\"modal-input-label\">Type:</span>\n                    <div\n                      className=\"voucher-type-box-wrapper\"\n                      style={{ width: 280 }}\n                    >\n                      <SwitchSelector\n                        onChange={onChange}\n                        options={optionSwitcher}\n                        initialSelectedIndex={initialSelectedIndex}\n                        backgroundColor={\"#E6E6E6\"}\n                        fontColor={\"#2C2C2C\"}\n                        selectedFontColor={\"#E6E6E6\"}\n                        fontSize={13}\n                        wrapperBorderRadius={0}\n                        optionBorderRadius={0}\n                        width={80}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Voucher name:</span>\n                    <Field\n                      type=\"text\"\n                      name=\"promotion_name\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher name\"}\n                    />\n                  </div>\n                  {promotionOption !== 1 && (\n                    <div className=\"modal-input-row\">\n                      <span className=\"modal-input-label\">Voucher code:</span>\n                      <Field\n                        type=\"text\"\n                        name=\"promotion_code\"\n                        className=\"modal-input-field\"\n                        placeholder={\"Voucher code\"}\n                      />\n                    </div>\n                  )}\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Usage period:</span>\n                    <Field\n                      type=\"date\"\n                      name=\"start_at\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher code\"}\n                      style={{ width: \"calc(48% - 75px)\", marginRight: 5 }}\n                    />\n                    —\n                    <Field\n                      type=\"date\"\n                      name=\"expire_at\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher code\"}\n                      style={{ width: \"calc(48% - 75px)\", marginLeft: 5 }}\n                    />\n                  </div>\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Discount amount:</span>\n                    <Field\n                      type=\"text\"\n                      name=\"promotion_value\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Discount ammount\"}\n                    />\n                  </div>\n\n                  {promotionOption !== 1 && (\n                    <Fragment>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Minimum basket discount:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"min_order_value\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Discount ammount\"}\n                        />\n                      </div>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Maximum discount amount:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"max_discount_value\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Discount ammount\"}\n                        />\n                      </div>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Usage quantity:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"limited_offer\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Litmited offer\"}\n                        />\n                      </div>\n                    </Fragment>\n                  )}\n\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">\n                      Weekly usage limit:\n                    </span>\n                    <Field\n                      type=\"text\"\n                      name=\"weekly_usage_limit\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Weekly usage limit per customer\"}\n                    />\n                  </div>\n                  <div\n                    className=\"modal-input-row\"\n                    style={promotionOption === 1 ? { marginBottom: 190 } : {}}\n                  >\n                    <span className=\"modal-input-label\">Description</span>\n                    <Field\n                      className=\"modal-textarea-field\"\n                      as=\"textarea\"\n                      name=\"promotion_description\"\n                      placeholder=\"Description about your product\"\n                    />\n                  </div>\n                  <ButtonGroup\n                    width={100}\n                    mgTop={5}\n                    float=\"center\"\n                    mgBottom={15}\n                  >\n                    <Button\n                      color={\"white\"}\n                      bgColor={\"#101010\"}\n                      justifyContent={\"center\"}\n                      gap={\"10px\"}\n                      width={120}\n                      height={35}\n                      label={\"Create voucher\"}\n                      onClick={() => handleSubmitForm(values)}\n                    />\n                  </ButtonGroup>\n                </Fragment>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Modal>\n    </Fragment>\n  );\n}\n\nCreateVoucher.propTypes = {\n  user: PropTypes.object.isRequired,\n  addDiscountAPI: PropTypes.func.isRequired,\n  addPromotionAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { addDiscountAPI, addPromotionAPI })(CreateVoucher)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDMarketing/VoucherHandlers/UpdatePromotion.js",["1343","1344","1345","1346","1347"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Form, Field } from \"formik\";\nimport \"./VoucherHandlers.scss\";\nimport { formatDate } from \"utils/DateUtils\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport SwitchSelector from \"react-switch-selector\";\nimport {\n  updateDiscountAPI,\n  updatePromotionAPI,\n} from \"store/actions/ProviderAction/ProviderAction\";\n\nfunction UpdatePromotion(props) {\n  const { promotionType, selectedPromotion } = props;\n  const initialValues = {\n    //  provider_id: 1000001,\n    promotion_id: selectedPromotion?.promotion_id,\n    promotion_code: selectedPromotion?.promotion_code || \"\",\n    promotion_name:\n      promotionType === 1\n        ? selectedPromotion?.discount_name\n        : selectedPromotion?.promotion_name || \"\",\n    start_at: new Date(selectedPromotion?.start_at) || new Date(),\n    expire_at: new Date(selectedPromotion?.expire_at) || new Date(),\n    promotion_value:\n      promotionType === 1\n        ? selectedPromotion?.discount_value\n        : selectedPromotion?.promotion_value || 0,\n    min_order_value: selectedPromotion?.min_order_value || \"2.00\",\n    max_discount_value: selectedPromotion?.max_discount_value || \"50.00\",\n    payment_method_id: selectedPromotion?.payment_method_id || 1,\n    limited_offer: selectedPromotion?.limited_offer || 1,\n    weekly_usage_limit: selectedPromotion?.weekly_usage_limit_per_user || 1,\n    promotion_description:\n      promotionType === 1\n        ? selectedPromotion?.discount_description\n        : selectedPromotion?.promotion_description || \"\",\n    delivery_mode: selectedPromotion?.delivery_mode || 1,\n  };\n  const handleSubmitForm = async (values) => {\n    if (promotionType === 1) {\n      const data = {\n        discount_id: selectedPromotion.discount_id,\n        provider_id: selectedPromotion.provider_id,\n        discount_name: values.promotion_name,\n        discount_value: parseFloat(values.promotion_value),\n        discount_description: values.promotion_description,\n        start_at: values.start_at,\n        expire_at: values.expire_at,\n      };\n      const status = await props.updateDiscountAPI(data);\n      if (status) props.setVisible(false);\n      return;\n    }\n    const data = {\n      promotion_id: selectedPromotion.promotion_id,\n      provider_id: selectedPromotion.provider_id,\n      promotion_code: values.promotion_code,\n      promotion_name: values.promotion_name,\n      promotion_value: parseFloat(values.promotion_value),\n      promotion_description: values.promotion_description,\n      min_order_value: values.min_order_value,\n      max_discount_value: values.max_discount_value,\n      start_at: values.start_at,\n      expire_at: values.expire_at,\n      payment_method_id: values.payment_method_id,\n      limited_offer: parseInt(values.limited_offer),\n      weekly_usage_limit_per_user: parseInt(values.weekly_usage_limit),\n      delivery_mode: parseInt(values.delivery_mode),\n      update_at: formatDate(new Date()),\n    };\n    const status = await props.updatePromotionAPI(data);\n    console.log(status);\n    if (status) props.setVisible(false);\n    return;\n  };\n  return (\n    <Fragment>\n      <Modal\n        openModal={props.visible}\n        closeModal={() => {\n          props.setVisible(false);\n        }}\n        title={\"Update promotion\"}\n        width={50}\n        height={promotionType === 1 ? 420 : 580}\n        padding=\"5px 50px\"\n        transparent=\"30%\"\n        hideHeader={true}\n      >\n        <Formik initialValues={initialValues} validateOnChange={false}>\n          {(formikProps) => {\n            const { values, errors, touched } = formikProps;\n            return (\n              <Form\n                className=\"modal-form-input-wrapper\"\n                style={{ height: 300 }}\n              >\n                <Fragment>\n                  <div className=\"modal-input-row\" style={{ marginTop: 20 }}>\n                    <span className=\"modal-input-label\">Voucher name:</span>\n                    <Field\n                      type=\"text\"\n                      name=\"promotion_name\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher name\"}\n                    />\n                  </div>\n                  {promotionType !== 1 && (\n                    <div className=\"modal-input-row\">\n                      <span className=\"modal-input-label\">Voucher code:</span>\n                      <Field\n                        type=\"text\"\n                        name=\"promotion_code\"\n                        className=\"modal-input-field\"\n                        placeholder={\"Voucher code\"}\n                      />\n                    </div>\n                  )}\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Usage period:</span>\n                    <Field\n                      type=\"date\"\n                      name=\"start_at\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher code\"}\n                      style={{ width: \"calc(48% - 75px)\", marginRight: 5 }}\n                    />\n                    —\n                    <Field\n                      type=\"date\"\n                      name=\"expire_at\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Voucher code\"}\n                      style={{ width: \"calc(48% - 75px)\", marginLeft: 5 }}\n                    />\n                  </div>\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Discount amount:</span>\n                    <Field\n                      type=\"text\"\n                      name=\"promotion_value\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Discount ammount\"}\n                    />\n                  </div>\n\n                  {promotionType !== 1 && (\n                    <Fragment>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Minimum basket discount:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"min_order_value\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Discount ammount\"}\n                        />\n                      </div>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Maximum discount amount:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"max_discount_value\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Discount ammount\"}\n                        />\n                      </div>\n                      <div className=\"modal-input-row\">\n                        <span className=\"modal-input-label\">\n                          Usage quantity:\n                        </span>\n                        <Field\n                          type=\"text\"\n                          name=\"limited_offer\"\n                          className=\"modal-input-field\"\n                          placeholder={\"Litmited offer\"}\n                        />\n                      </div>\n                    </Fragment>\n                  )}\n\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">\n                      Weekly usage limit:\n                    </span>\n                    <Field\n                      type=\"text\"\n                      name=\"weekly_usage_limit\"\n                      className=\"modal-input-field\"\n                      placeholder={\"Weekly usage limit per customer\"}\n                    />\n                  </div>\n                  <div className=\"modal-input-row\">\n                    <span className=\"modal-input-label\">Description</span>\n                    <Field\n                      className=\"modal-textarea-field\"\n                      as=\"textarea\"\n                      name=\"promotion_description\"\n                      placeholder=\"Description about your product\"\n                    />\n                  </div>\n                  <ButtonGroup\n                    width={100}\n                    mgTop={5}\n                    float=\"center\"\n                    mgBottom={15}\n                  >\n                    <Button\n                      color={\"white\"}\n                      bgColor={\"#101010\"}\n                      justifyContent={\"center\"}\n                      gap={\"10px\"}\n                      width={130}\n                      height={35}\n                      label={`Update ${promotionType ? \"Discount\" : \"Voucher\"}`}\n                      onClick={() => handleSubmitForm(values)}\n                    />\n                  </ButtonGroup>\n                </Fragment>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Modal>\n    </Fragment>\n  );\n}\n\nUpdatePromotion.propTypes = {\n  user: PropTypes.object.isRequired,\n  updateDiscountAPI: PropTypes.func.isRequired,\n  updatePromotionAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { updatePromotionAPI, updateDiscountAPI })(\n    UpdatePromotion\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/DateUtils.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductOverview.js",["1348","1349","1350","1351","1352","1353","1354","1355"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faPlus,\n  faSort,\n  faQuestionCircle,\n  faSave,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport Button from \"components/Commons/Button/Button\";\nimport Metric from \"../Metric/Metric\";\nimport Picture1 from \"assets/FoodImg/picture2.jpg\";\nimport Picture2 from \"assets/FoodImg/picture1.jpg\";\nimport Picture3 from \"assets/FoodImg/picture3.jpg\";\nimport Picture4 from \"assets/FoodImg/picture4.jpg\";\nimport Picture5 from \"assets/FoodImg/picture5.jpg\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport Tabs from \"../Tabs\";\n\nconst productList = [\n  {\n    id: 1,\n    name: \"Menu BBQ Cheese & Bacon\",\n    price: \"2.50$\",\n    category: \"Fast food\",\n    productStatus: 3,\n    lastUpdated: \"2021-05-13\",\n    picture: Picture1,\n    description: \"mfsaef\",\n  },\n  {\n    id: 2,\n    name: \"Pepperoni Pizza - Authentique Raclette (DE RETOUR)\",\n    price: \"10.00$\",\n    category: \"Fast food\",\n    productStatus: 2,\n    lastUpdated: \"2021-05-13\",\n    picture: Picture2,\n    description: \"mfsaef\",\n  },\n  {\n    id: 3,\n    name: \"P333 Authent\",\n    price: \"5.00$\",\n    category: \"Fast food\",\n    productStatus: 2,\n    lastUpdated: \"2021-05-13\",\n    picture: Picture3,\n  },\n  {\n    id: 4,\n    name: \"Macha Shake\",\n    price: \"10.00$\",\n    productStatus: 1,\n    lastUpdated: \"2021-05-13\",\n    picture: Picture4,\n    description: \"mfsaef\",\n  },\n  {\n    id: 5,\n    name: \"Fried Milk Chicken - Honey Butter\",\n    price: \"12.00$\",\n    category: \"Fast food\",\n    productStatus: 1,\n    lastUpdated: \"2021-05-13\",\n    picture: Picture5,\n    description: \"mfsaef\",\n  },\n];\n\nconst ProductFilterTab = {\n  filterTabs: [\n    { id: 0, name: \"All\" },\n    { id: 1, name: \"Live\" },\n    { id: 2, name: \"Sold out\" },\n    { id: 3, name: \"Delisted\" },\n    { id: 4, name: \"Search Result\" },\n  ],\n};\nfunction ProductOverview(props) {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [products, setProducts] = useState([]);\n  const [searchResult, setSearchResult] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { user, provider, getProductListAPI } = props;\n  useEffect(() => {\n    async function fetchProductList(id) {\n      if (user.provider_id !== -1) {\n        const res = await getProductListAPI(id);\n        const temp = [];\n        for (let item in res) {\n          for (let x in res[item].products) {\n            temp.push(res[item].products[x]);\n          }\n        }\n        setProducts(temp);\n        setSearchResult(temp);\n      }\n    }\n    fetchProductList(user.provider_id);\n  }, [user.provider_id]);\n\n  const handleDragEnd = (e) => {\n    if (!e.destination) return;\n    let temp = Array.from(products);\n    let [sourceData] = temp.splice(e.source.index, 1);\n    temp.splice(e.destination.index, 0, sourceData);\n    setProducts(temp);\n  };\n  const filterSearchResult = (searchTerm) => {\n    setCurrentTab(4);\n    let result = [];\n    if (searchTerm.length !== 0) {\n      result = searchResult.filter((item) =>\n        item.product_name.includes(searchTerm)\n      );\n      setSearchResult(result);\n    } else {\n      setCurrentTab(0);\n      setSearchResult(products);\n    }\n  };\n  const handleSelectTab = (value) => {\n    setCurrentTab(value);\n    let result = {};\n    switch (value) {\n      case 0:\n        result = products;\n        break;\n      case 1:\n        result = products.filter((item) => item.product_status === 1);\n        break;\n      case 2:\n        result = products.filter((item) => item.product_status === 2);\n        break;\n      case 3:\n        result = products.filter((item) => item.product_status === 3);\n        break;\n      default:\n        result = products;\n    }\n    setSearchResult(result);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"panel-detail-wrapper\">\n        <div className=\"panel-detail-title\">Product Overview</div>\n\n        <div className=\"product-list-info-row\">\n          <div className=\"product-list-info\">\n            <div className=\"product-stock-quantity\">\n              {products?.length} Products\n            </div>\n            <div className=\"product-stock-quantity-description\">\n              Upload {`${200 - products?.length}`} more products.\n            </div>\n            <div className=\"product-progress-bar\">\n              <ProgressBar\n                bgcolor=\"#940000\"\n                progress={`${products.length}`}\n                height=\"6px\"\n                length={200}\n              />\n            </div>\n          </div>\n          <Metric width={\"20%\"} radius={5}>\n            <span className=\"metric-title\">\n              Ranking by sales\n              <FontAwesomeIcon\n                className=\"question-icon\"\n                icon={faQuestionCircle}\n              />\n            </span>\n          </Metric>\n          <Metric width={\"20%\"} radius={5}>\n            <span className=\"metric-title\">Ranking by sales</span>\n          </Metric>\n          <Metric width={\"20%\"} radius={5}>\n            <span className=\"metric-title\">Ranking by sales</span>\n          </Metric>\n        </div>\n        <div className=\"panel-detail-title\">Product Details</div>\n        <div className=\"search-product-container\">\n          <input\n            className=\"search-product-term\"\n            type=\"text\"\n            name=\"search\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"Search a product\"\n          />\n          <Button\n            width={60}\n            height={36}\n            radius={\"0px\"}\n            onClick={() => filterSearchResult(searchTerm)}\n            label={<FontAwesomeIcon icon={faSearch} />}\n          />\n          <Button\n            left={20}\n            buttonType=\"primary\"\n            width={150}\n            height={36}\n            radius={\"0px\"}\n            label={\"Add\"}\n            prefix={\n              <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n            }\n          />\n          <Button\n            left={10}\n            buttonType=\"primary\"\n            width={150}\n            height={36}\n            radius={\"0px\"}\n            label={\"Save\"}\n            prefix={\n              <FontAwesomeIcon icon={faSave} style={{ color: \"white\" }} />\n            }\n          />\n        </div>\n        <div className=\"product-table-container\">\n          <Tabs\n            tabs={ProductFilterTab.filterTabs}\n            boxWidth={\"8%\"}\n            secondaryTabGroup={true}\n            borderTop={true}\n            fixed={false}\n            current={currentTab}\n            selectItem={handleSelectTab}\n          />\n          <div className=\"product-table\">\n            <table className=\"table table-wrapper\">\n              <tbody className=\"text-capitalize\">\n                {searchResult?.map((product, index) => (\n                  <tr\n                    className=\"table-row-wrapper\"\n                    style={{ cursor: \"pointer\" }}\n                    key={index}\n                  >\n                    <td className=\"product-img\">\n                      <img\n                        src={product.product_image}\n                        height={50}\n                        width={50}\n                        alt=\"\"\n                      />\n                    </td>\n                    <td\n                      className=\"product-name\"\n                      style={{\n                        textAlign: \"left\",\n                        width: 200,\n                      }}\n                    >\n                      {product.product_name || \"—\"}\n                    </td>\n                    <td\n                      className=\"field-hidden\"\n                      style={{\n                        textAlign: \"left\",\n                        width: 400,\n                      }}\n                    >\n                      {product.description || \"—\"}\n                    </td>\n\n                    <td style={{ width: 60 }}>\n                      $ {product?.price?.toFixed(2) || \"—\"}\n                    </td>\n                    <td>{product.update_at || \"—\"}</td>\n                    <td>Stock: {product.quantity || \"—\"}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nProductOverview.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getProductListAPI,\n  })(ProductOverview)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderHistory.js",["1356","1357","1358","1359","1360","1361"],"import { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { css } from \"@emotion/react\";\nimport {\n  faCheckCircle,\n  faDotCircle,\n  faTimesCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport MDHeader from \"components/MerchantDashboard/MDHeader/MDHeader\";\nimport orderListData from \"components/MerchantDashboard/DashboardFeatures/MDOrder/data/orderListData\";\nimport \"../Panel.scss\";\nimport ViewOrderDetail from \"./OrderHandler/ViewOrderDetail\";\nimport SwitchSelector from \"react-switch-selector\";\nimport { getAllOrderAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"react-spinners/ScaleLoader\";\nconst options = [\n  {\n    label: \"Show all\",\n    value: 0,\n    selectedBackgroundColor: \"#942424\",\n  },\n  {\n    label: \"Select a date\",\n    value: 1,\n    selectedBackgroundColor: \"#942424\",\n  },\n];\n\nfunction OrderHistory(props) {\n  const { user, provider, getAllOrderAPI } = props;\n  const [orderList, setOrderList] = useState([]);\n  const [filterOrderList, setFilterOrderList] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState();\n  const [loading, setLoading] = useState(false);\n  let [color, setColor] = useState(\"#910000\");\n\n  const override = css`\n    display: block;\n    border-color: #910000;\n    font-size: 14px;\n    color: red;\n  `;\n  useEffect(() => {\n    async function fetchOrderList() {\n      setLoading(false);\n      let limit = 20;\n      let offset = 1;\n      const result = await getAllOrderAPI(user.provider_id, limit, offset);\n      setFilterOrderList(result);\n      setLoading(true);\n      setOrderList(result);\n    }\n    if (provider?.orderList.length === 0) {\n      fetchOrderList();\n      return;\n    }\n    setLoading(true);\n  }, [user.provider_id]);\n\n  const mapOrderStatusIcon = (status) => {\n    switch (status) {\n      case 5:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history done\"\n              icon={faCheckCircle}\n            />\n            <span className=\"order-status-text-green\">Completed</span>\n          </>\n        );\n      case 6:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history cancel\"\n              icon={faTimesCircle}\n            />\n            <span className=\"order-status-text-red\">Unable to delivery</span>\n          </>\n        );\n      default:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history inprogress\"\n              icon={faDotCircle}\n            />\n            <span className=\"order-status-text-blue\">In progress</span>\n          </>\n        );\n    }\n  };\n\n  const initialSelectedIndex = options.findIndex(\n    ({ value }) => value === \"Show all\"\n  );\n\n  return (\n    <Fragment>\n      <MDHeader visible={false} />\n      <div className=\"panel-detail-wrapper panel-no-mg-top\">\n        <div\n          className=\"mkt-section-title\"\n          style={{ marginTop: 0, fontWeight: 700 }}\n        >\n          Order History\n        </div>\n\n        <div className=\"ohis-order-filter-wrapper\">\n          <div className=\"ohis-switcher-wrapper\">\n            <SwitchSelector\n              options={options}\n              initialSelectedIndex={initialSelectedIndex}\n              backgroundColor={\"#E6E6E6\"}\n              fontColor={\"#2C2C2C\"}\n              selectedFontColor={\"#E6E6E6\"}\n              fontSize={13}\n              wrapperBorderRadius={0}\n              optionBorderRadius={0}\n            />\n          </div>\n          <input\n            className=\"ohis-date-picker\"\n            type=\"date\"\n            name=\"date-submitted\"\n          />\n        </div>\n        <div className=\"o-order-container\">\n          <div className=\"o-order-header-row\">\n            <div\n              className=\"o-order o-order-icon-history\"\n              style={{ width: \"20%\" }}\n            >\n              Status\n            </div>\n            <div className=\"o-order-id\" style={{ width: \"25%\" }}>\n              Order code\n            </div>\n            <div className=\"o-order o-order-name\" style={{ width: \"20%\" }}>\n              Customer name\n            </div>\n            <div className=\"o-order o-order-time\" style={{ width: \"15%\" }}>\n              Submitted Time\n            </div>\n            <div className=\"o-order o-order-time\" style={{ width: \"10%\" }}>\n              Payment method\n            </div>\n            <div className=\"o-order o-order-price\" style={{ width: \"10%\" }}>\n              Paid\n            </div>\n          </div>\n        </div>\n        {loading ? (\n          <div className=\"o-order-container\">\n            {provider.orderList.map((order) => (\n              <div\n                className=\"o-order-row\"\n                onClick={() => {\n                  setSelectedOrder(order);\n                }}\n                key={order?.order_code}\n                style={\n                  selectedOrder?.order_code === order?.order_code\n                    ? { backgroundColor: \"#f3f3f3\", transition: \"0.3s\" }\n                    : { backgroundColor: \"white\" }\n                }\n              >\n                {mapOrderStatusIcon(order.status)}\n                <div\n                  className=\"o-order\"\n                  style={{ width: \"30%\", textAlign: \"left\" }}\n                >\n                  {order.order_code}\n                </div>\n                <div\n                  className=\"o-order o-order-name\"\n                  style={{ width: \"20%\", textAlign: \"left\" }}\n                >\n                  {`${order.user_first_name} ${order.user_last_name}`}\n                </div>\n                <div className=\"o-order-time\">{order.update_at}</div>\n                <div className=\"o-order-time\">{order.payment_name}</div>\n                <div className=\"o-order-price\">\n                  $ {order.subtotal?.toFixed(2)}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div\n            className=\"o-order-container\"\n            style={{\n              height: 500,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderBottom: \"2px solid #d8d8d8\",\n              borderLeft: \"2px solid #d8d8d8\",\n              borderRight: \"2px solid #d8d8d8\",\n              gap: 10,\n            }}\n          >\n            <Loader\n              color={color}\n              loading={true}\n              css={override}\n              size={100}\n              margin={3}\n              speedMultiplier={0.8}\n            />\n            <span className=\"o-order-container-text\">\n              Please wait for a while ...\n            </span>\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nOrderHistory.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getAllOrderAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getAllOrderAPI,\n  })(OrderHistory)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/CategoryList.js",["1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379"],"import { Fragment } from \"react\";\nimport CategoryIcon1 from \"../../../assets/CategoryIcon/Picture1.jpg\";\nimport CategoryIcon2 from \"../../../assets/CategoryIcon/Picture2.jpg\";\nimport CategoryIcon3 from \"../../../assets/CategoryIcon/Picture3.jpg\";\nimport CategoryIcon4 from \"../../../assets/CategoryIcon/Picture4.jpg\";\nimport CategoryIcon5 from \"../../../assets/CategoryIcon/Picture5.jpg\";\nimport CategoryIcon6 from \"../../../assets/CategoryIcon/Picture6.jpg\";\nimport CategoryIcon7 from \"../../../assets/CategoryIcon/Picture7.jpg\";\nimport CategoryIcon8 from \"../../../assets/CategoryIcon/Picture8.jpg\";\nimport CategoryIcon9 from \"../../../assets/CategoryIcon/Picture9.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/fontawesome-free-solid\";\nimport \"./CategoryList.css\";\nfunction CategoryList(props) {\n  return (\n    <Fragment>\n      <div className=\"category-section\">\n        <span className=\"category-title\">Market</span>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon1} />\n            </div>\n            <a className=\"category-main-label\">Organic Fruit & Vegetables</a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon2} />\n            </div>\n            <a className=\"category-main-label\">Fast Food & Street Food </a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon3} />\n            </div>\n            <a className=\"category-main-label\">Healthy & Nutritious Diets </a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon4} />\n            </div>\n            <a className=\"category-main-label\">Refreshing Drinks, Beverage </a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon5} />\n            </div>\n            <a className=\"category-main-label\">Meaty and Savory Dishes </a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon6} />\n            </div>\n            <a className=\"category-main-label\">Sweets & Desserts, Icecream</a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon7} />\n            </div>\n            <a className=\"category-main-label\">Noodles and Soups</a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon8} />\n            </div>\n            <a className=\"category-main-label\">Pastry and Coffee</a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n        <div className=\"category-section-row\">\n          <div className=\"pre-category-main\">\n            <div className=\"category-main-icon\">\n              <img src={CategoryIcon9} />\n            </div>\n            <a className=\"category-main-label\">Fish and Seafoods </a>\n          </div>\n          <FontAwesomeIcon\n            className=\"category-direct-icon\"\n            icon={faChevronRight}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default CategoryList;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/MainContent/CategoryBanner.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/CategoryGroup.js",["1380","1381","1382","1383","1384","1385","1386","1387"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CustomButtonGroup } from \"./CustomButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  faCalendarPlus,\n  faInfoCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { faHeart as faHeart2 } from \"@fortawesome/fontawesome-free-solid\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons\";\nimport CategoryImage1 from \"assets/category/dessert.png\";\nimport CategoryImage2 from \"assets/category/sandwich.png\";\nimport CategoryImage3 from \"assets/category/coffeeandtea.png\";\nimport CategoryImage4 from \"assets/category/american.png\";\nimport CategoryImage5 from \"assets/category/bread.png\";\nimport CategoryImage6 from \"assets/category/cake.png\";\nimport CategoryImage7 from \"assets/category/asian.png\";\nimport CategoryImage8 from \"assets/category/vegetable.png\";\nimport CategoryImage9 from \"assets/category/sushi.png\";\nimport CategoryImage10 from \"assets/category/chinese.png\";\nimport CategoryImage11 from \"assets/category/pizza.png\";\nimport CategoryImage12 from \"assets/category/sushi.png\";\nimport ProviderGroupSkeleton from \"components/Skeleton/ProviderGroupSkeleton\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 4,\n    slidesToSlide: 4, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 2, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n\nconst categories = [\n  [\n    {\n      category_id: 1000001,\n      type: 2,\n      category_name: \"Dessert\",\n      category_image: CategoryImage1,\n    },\n    {\n      category_id: 1000002,\n      type: 2,\n      category_name: \"Sandwich\",\n      category_image: CategoryImage2,\n    },\n  ],\n  [\n    {\n      category_id: 1000003,\n      type: 1,\n      category_name: \"Coffee and Tea\",\n      category_image: CategoryImage3,\n    },\n    {\n      category_id: 1000004,\n      type: 1,\n      category_name: \"American\",\n      category_image: CategoryImage4,\n    },\n  ],\n  [\n    {\n      category_id: 1000005,\n      type: 2,\n      category_name: \"Bread\",\n      category_image: CategoryImage5,\n    },\n    {\n      category_id: 1000006,\n      type: 2,\n      category_name: \"Cake\",\n      category_image: CategoryImage6,\n    },\n  ],\n  [\n    {\n      category_id: 1000007,\n      type: 1,\n      category_name: \"Asian\",\n      category_image: CategoryImage7,\n    },\n    {\n      category_id: 1000008,\n      type: 2,\n      category_name: \"Vegetable\",\n      category_image: CategoryImage8,\n    },\n  ],\n  [\n    {\n      category_id: 1000007,\n      type: 1,\n      category_name: \"Chinese\",\n      category_image: CategoryImage9,\n    },\n    {\n      category_id: 1000008,\n      type: 2,\n      category_name: \"Sushi\",\n      category_image: CategoryImage10,\n    },\n  ],\n  [\n    {\n      category_id: 1000007,\n      type: 1,\n      category_name: \"Pizza\",\n      category_image: CategoryImage11,\n    },\n    {\n      category_id: 1000008,\n      type: 2,\n      category_name: \"Sushi\",\n      category_image: CategoryImage12,\n    },\n  ],\n];\n\nfunction CategoryGroup({ groupTitle, groupDescription, ...rest }) {\n  const [loading, setLoading] = useState(true);\n  const executeSearch = (id, type) => {\n    rest.history.push(\n      `/search?query=${\"\"}&type=3&category-type=${type}&category-id=${id}`\n    );\n  };\n  return (\n    <Fragment>\n      <div className=\"home-product-row-container\">\n        <div className=\"home-product-row-title\">\n          {groupTitle || \"No title\"}\n          <FontAwesomeIcon className=\"sub-icon-title\" icon={faInfoCircle} />\n        </div>\n        {groupDescription && (\n          <span className=\"home-product-description\">{groupDescription}</span>\n        )}\n        {loading ? (\n          <div className=\"home-product-slider\">\n            <Carousel\n              swipeable={false}\n              draggable={false}\n              responsive={responsive}\n              ssr={true} // means to render carousel on server-side.\n              keyBoardControl={true}\n              containerClass=\"carousel-container\"\n              removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n              dotListClass=\"custom-dot-list-style\"\n              itemClass=\"carousel-item-padding-40-px\"\n              arrows={false}\n              customButtonGroup={<CustomButtonGroup></CustomButtonGroup>}\n              renderButtonGroupOutside={true}\n              customTransition={\"transform 500ms ease-in-out\"}\n            >\n              {categories?.map((category, index) => (\n                <div className=\"category-group-wrapper\" key={index}>\n                  <div\n                    className=\"category-group-item\"\n                    onClick={() =>\n                      executeSearch(category[0].category_id, category[0].type)\n                    }\n                  >\n                    <LazyLoad\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <img\n                        className=\"category-group-item-image\"\n                        src={category[0].category_image}\n                        alt={\"category_image\"}\n                      />\n                    </LazyLoad>\n                    <span className=\"category-group-item-text\">\n                      {category[0].category_name}\n                    </span>\n                  </div>\n                  <div\n                    className=\"category-group-item\"\n                    onClick={() =>\n                      executeSearch(category[1].category_id, category[1].type)\n                    }\n                  >\n                    <LazyLoad>\n                      <img\n                        className=\"category-group-item-image\"\n                        src={category[1].category_image}\n                        alt={\"category_image\"}\n                      />\n                    </LazyLoad>\n                    <span className=\"category-group-item-text\">\n                      {category[1].category_name}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </Carousel>\n          </div>\n        ) : (\n          <ProviderGroupSkeleton col={4} />\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default withRouter(CategoryGroup);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/HomePage/HomeBody/PickupProvider.js",["1388","1389","1390","1391","1392","1393","1394","1395","1396"],"import \"./HomeBody.scss\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { CustomButtonGroup } from \"./CustomButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport LazyLoad from \"react-lazyload\";\nimport { faHeart as faHeart1 } from \"@fortawesome/fontawesome-free-regular\";\nimport {\n  faHeart as faHeart2,\n  faThumbsUp,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport {\n  faCalendarPlus,\n  faInfoCircle,\n  faUtensils,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport ReactMapGl, {\n  Source,\n  Layer,\n  Marker,\n  Popup,\n  NavigationControl,\n  FullscreenControl,\n} from \"react-map-gl\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 2,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\nfunction PickupProvider(props) {\n  const { history } = props;\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState({});\n  const { providerList, providerNearby } = props;\n  const openTime = \"23:00:00\";\n  const closeTime = \"22:00:00\";\n  const [currentTime, setCurrentTime] = useState(\n    new Date().toLocaleTimeString()\n  );\n  const handleOnClickProvider = (e, id) => {\n    e.stopPropagation();\n    history.push(`/provider-detail/${id}`);\n  };\n  //map\n  const [mapView, setMapView] = useState(false);\n  const [popupLatitude, setPopupLatitude] = useState(10.773031146281017);\n  const [popupLongitude, setPopupLongitude] = useState(106.7060806090524);\n  const [viewport, setViewport] = useState({\n    height: \"550px\",\n    zoom: 14,\n  });\n  return (\n    <Fragment>\n      <div\n        className=\"home-product-row-container provider-on-map\"\n        style={{\n          backgroundImage: `url(https://d4p17acsd5wyj.cloudfront.net/eatsfeed/pickup-homefeed-carousel/pickupcarousel_desktopweb.svg)`,\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          height: 250,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: \"97%\",\n        }}\n      >\n        <div\n          className=\"home-product-slider\"\n          style={{ width: \"auto\", marginLeft: 35, marginTop: 45 }}\n        >\n          <div\n            className=\"home-product-row-title\"\n            style={{ fontSize: 32, fontWeight: 700 }}\n          >\n            Pick it up for free\n          </div>\n          <div\n            className=\"home-product-row-title\"\n            style={{ fontSize: 14, fontWeight: 500 }}\n          >\n            Skip the fees when you order pickup\n          </div>\n          <ButtonGroup float=\"flex-start\" mgTop={10}>\n            <Button\n              color={\"white\"}\n              bgColor={\"black\"}\n              justifyContent={\"center\"}\n              gap={\"10px\"}\n              width={100}\n              fontSize={14}\n              height={30}\n              label={\"See map\"}\n              onClick={() => setMapView(true)}\n            />\n          </ButtonGroup>\n        </div>\n        <div\n          className=\"home-product-slider\"\n          style={{ width: 550, marginTop: 30 }}\n        >\n          <Carousel\n            swipeable={false}\n            draggable={false}\n            responsive={responsive}\n            ssr={true} // means to render carousel on server-side.\n            keyBoardControl={true}\n            containerClass=\"carousel-container\"\n            removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n            dotListClass=\"custom-dot-list-style\"\n            itemClass=\"carousel-item-padding-40-px\"\n            customTransition={\"transform 500ms ease-in-out\"}\n          >\n            {providerList?.map((item, index) => (\n              <Fragment key={index}>\n                <LazyLoad\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    width: \"260px\",\n                    height: \"180px\",\n                    backgroundColor: \"#ffffff\",\n                  }}\n                >\n                  <div\n                    className=\"provider-card-container\"\n                    key={item.provider_id}\n                    style={{\n                      backgroundImage: `url(${item.profile_pic})`,\n                      backgroundPosition: \"center\",\n                      backgroundRepeat: \"no-repeat\",\n                      backgroundSize: \"cover\",\n                      width: \"250px\",\n                      height: \"135px\",\n                    }}\n                  >\n                    <div className=\"provider-interaction-wrapper\">\n                      <FontAwesomeIcon\n                        className=\"icon-for-liking\"\n                        style={{ zIndex: 1, marginTop: 5 }}\n                        icon={faHeart2}\n                      />\n                      {!item.tag_name && (\n                        <div className=\"provider-card-tag\">\n                          {item.tag_name || \"3 orders until €5 reward\"}\n                        </div>\n                      )}\n                    </div>\n                    {currentTime < closeTime && currentTime > openTime ? (\n                      <figcaption className=\"figcaption-wrapper\">\n                        <div className=\"btn-schedule-wrapper\">\n                          <FontAwesomeIcon\n                            icon={faCalendarPlus}\n                            className=\"icon-btn\"\n                          />\n                          <span>Schedule order</span>\n                        </div>\n                        <span className=\"a1-description\">\n                          Opens Saturday 2:15 PM\n                        </span>\n                      </figcaption>\n                    ) : (\n                      <Fragment></Fragment>\n                    )}\n                  </div>\n                  <div className=\"product-info-pos\" style={{ width: \"250px\" }}>\n                    <div className=\"product-info-wrapper\">\n                      <span className=\"p-info-main-text\">\n                        {item.provider_name}\n                      </span>\n                      <div className=\"p-info-rating\">\n                        {item.rating || \"5.0\"}\n                      </div>\n                    </div>\n                    <div className=\"product-sub-info-wrapper\">\n                      <FontAwesomeIcon\n                        icon={faGetPocket}\n                        className=\"sub-info-icon\"\n                      />\n                      &nbsp;•&nbsp;\n                      <span className=\"p-sub-info-main-text\">\n                        $ {item.price_range}\n                      </span>\n                      &nbsp;•&nbsp;\n                      <div className=\"p-sub-info-cooking-time\">\n                        {item.mean_estimated_cooking_time || \"30 mins\"}\n                      </div>\n                      &nbsp;•&nbsp;\n                      <span className=\"p-sub-info-main-text\">\n                        {(item.distance / 1000).toFixed(2)} km\n                      </span>\n                    </div>\n                  </div>\n                </LazyLoad>\n              </Fragment>\n            ))}\n          </Carousel>\n        </div>\n      </div>\n      <Modal\n        openModal={mapView}\n        title={\"Pick-up restaurant location\"}\n        width={80}\n        height={650}\n        transparent={0.2}\n        closeModal={() => {\n          setMapView(false);\n        }}\n      >\n        <ReactMapGl\n          transitionDuration={1000}\n          {...viewport}\n          latitude={props.currentLatitude}\n          longitude={props.currentLongitude}\n          width={\"100%\"}\n          onViewportChange={(viewport) => setViewport(viewport)}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n        >\n          <FullscreenControl />\n          <Marker\n            latitude={props.currentLatitude}\n            longitude={props.currentLongitude}\n            offsetLeft={-20}\n            offsetTop={-30}\n          >\n            <img\n              alt=\"marker\"\n              style={{ height: 30, width: 30 }}\n              src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n            />\n          </Marker>\n          {providerNearby.map((item, index) => (\n            <Marker\n              key={index}\n              latitude={parseFloat(item.latitude)}\n              longitude={parseFloat(item.longitude)}\n              offsetLeft={-20}\n              offsetTop={-30}\n            >\n              <FontAwesomeIcon\n                className=\"provider-marker\"\n                icon={item.isFavorite ? faHeart2 : faUtensils}\n                style={\n                  item.isFavorite\n                    ? { background: \"#bd0000\", padding: \" 7px 7px\" }\n                    : {}\n                }\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setSelectedProvider(item);\n                  setPopupLatitude(parseFloat(item.latitude));\n                  setPopupLongitude(parseFloat(item.longitude));\n                  setShowPopup(true);\n                }}\n              />\n            </Marker>\n          ))}\n          {showPopup && (\n            <Popup\n              latitude={popupLatitude}\n              longitude={popupLongitude}\n              anchor=\"top\"\n              onClose={() => setShowPopup(false)}\n            >\n              <div\n                key={selectedProvider.provider_id}\n                onClick={(e) =>\n                  handleOnClickProvider(e, selectedProvider.provider_id)\n                }\n              >\n                <div\n                  className=\"provider-card-container\"\n                  style={{\n                    backgroundImage: `url(${selectedProvider.profile_pic})`,\n                    backgroundPosition: \"center\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"cover\",\n                  }}\n                >\n                  <div className=\"provider-interaction-wrapper\">\n                    <FontAwesomeIcon\n                      className=\"icon-for-liking\"\n                      style={{ zIndex: 1, marginTop: 5 }}\n                      icon={faHeart1}\n                    />\n                    {!selectedProvider.tag_name && (\n                      <div className=\"provider-card-tag\">\n                        {selectedProvider.tag_name ||\n                          \"3 orders until €5 reward\"}\n                      </div>\n                    )}\n                  </div>\n                  {currentTime < closeTime && currentTime > openTime ? (\n                    <figcaption className=\"figcaption-wrapper\">\n                      <div className=\"btn-schedule-wrapper\">\n                        <FontAwesomeIcon\n                          icon={faCalendarPlus}\n                          className=\"icon-btn\"\n                        />\n                        <span>Schedule order</span>\n                      </div>\n                      <span className=\"a1-description\">\n                        Opens Saturday 2:15 PM\n                      </span>\n                    </figcaption>\n                  ) : (\n                    <Fragment></Fragment>\n                  )}{\" \"}\n                </div>\n                <div className=\"product-info-wrapper\">\n                  <span className=\"p-info-main-text\">\n                    {selectedProvider.provider_name}\n                  </span>\n                  <div className=\"p-info-rating\">\n                    {selectedProvider.rating || \"5.0\"}\n                  </div>\n                </div>\n                <div className=\"product-sub-info-wrapper\">\n                  <FontAwesomeIcon\n                    icon={faGetPocket}\n                    className=\"sub-info-icon\"\n                  />\n                  &nbsp;•&nbsp;\n                  <span className=\"p-sub-info-main-text\">\n                    $ {selectedProvider.price_range}\n                  </span>\n                  &nbsp;•&nbsp;\n                  <div className=\"p-sub-info-cooking-time\">\n                    {selectedProvider.mean_estimated_cooking_time || \"30 mins\"}\n                  </div>\n                  &nbsp;•&nbsp;\n                  <span className=\"p-sub-info-main-text\">\n                    {(selectedProvider.distance / 1000).toFixed(2)} km\n                  </span>\n                </div>\n              </div>\n            </Popup>\n          )}\n        </ReactMapGl>\n      </Modal>\n    </Fragment>\n  );\n}\n\nexport default withRouter(PickupProvider);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductDetail.js",["1397","1398","1399","1400","1401","1402"],"import { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport Picture5 from \"assets/FoodImg/picture5.jpg\";\nimport Picture6 from \"assets/FoodImg/picture6.jpg\";\nimport Picture7 from \"assets/FoodImg/picture7.jpg\";\nimport Picture8 from \"assets/FoodImg/picture8.jpg\";\nimport Picture9 from \"assets/FoodImg/picture9.jpg\";\nimport Picture10 from \"assets/FoodImg/picture10.jpg\";\nimport Picture11 from \"assets/FoodImg/picture11.jpg\";\nimport Picture12 from \"assets/FoodImg/picture12.jpg\";\nimport AddProduct from \"./ProductHandler/AddProduct\";\nimport EditProduct from \"./ProductHandler/EditProduct\";\nimport ProductForMenu from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductForMenu\";\nimport { getProductListAPI } from \"store/actions/ProductAction/ProductAction\";\nimport { getAllPromotionAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport \"../Panel.scss\";\n\nfunction ProductDetail(props) {\n  const { user, product, getProductListAPI } = props;\n  const [discountList, setDiscountList] = useState([]);\n  const [items, setItems] = useState(product.productList || []);\n  const [showHandlerPanel, setShowHandlerPanel] = useState(0);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const [productForEdit, setProductForEdit] = useState();\n  const [menuCategory, setMenuCategory] = useState();\n  useEffect(() => {\n    async function fetchMenuCategory(id) {\n      if (id !== -1) {\n        var result = await getProductListAPI(id);\n        setMenuCategory(result);\n      }\n    }\n    fetchMenuCategory(user.provider_id);\n  }, [user.provider_id]);\n  // product handler panel - 0: add_product - 1: edit_product\n  useEffect(() => {\n    async function fetchPromotion(id) {\n      const promotion = await props.getAllPromotionAPI(id);\n      if (promotion) setDiscountList(promotion.discount);\n    }\n    if (user.provider_id !== -1) fetchPromotion(user.provider_id);\n  }, [user.provider_id]);\n\n  useEffect(() => {\n    async function fetchingData() {\n      if (user.provider_id !== -1 && user.provider_id !== null) {\n        const productList = await getProductListAPI(user.provider_id);\n        setItems(productList);\n      }\n    }\n    fetchingData();\n  }, []);\n\n  useEffect(() => {\n    if (items && selectedProduct[0] && selectedProduct[1]) {\n      const result = items\n        .filter((item) => item.menu_category_id === selectedProduct[1])[0]\n        .products?.filter((p) => p.product_id === selectedProduct[0])[0];\n      setProductForEdit(result);\n    }\n  }, [selectedProduct]);\n\n  const grid = 8;\n  const getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    userSelect: \"none\",\n    background: isDragging ? \"lightgrey\" : \"white\",\n    // styles we need to apply on draggables\n    ...draggableStyle,\n  });\n\n  const getListStyle = (isDraggingOver) => ({\n    background: isDraggingOver ? \"lightblue\" : \"white\",\n  });\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  const onDragEnd = (result) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    if (result.type === \"droppableItem\") {\n      const resultItems = reorder(\n        items,\n        result.source.index,\n        result.destination.index\n      );\n      setItems(resultItems);\n    } else if (result.type.includes(\"droppableSubItem\")) {\n      const parentId = result.type.split(\"-\")[1];\n      const itemSubItemMap = items.reduce((acc, item) => {\n        acc[item.menu_category_id] = item.products;\n        return acc;\n      }, {});\n      const subItemsForCorrespondingParent = itemSubItemMap[parentId];\n      const reorderedSubItems = reorder(\n        subItemsForCorrespondingParent,\n        result.source.index,\n        result.destination.index\n      );\n\n      let newItems = [...items];\n      newItems = newItems.map((item) => {\n        if (String(item.menu_category_id) === parentId) {\n          item.products = reorderedSubItems;\n        }\n        return item;\n      });\n      setItems(newItems);\n    }\n  };\n  return (\n    <Fragment>\n      <div className=\"double-panel-container\">\n        <div className=\"main-detail-panel-wrapper\">\n          <div className=\"panel-detail-head-wrapper\">\n            <div className=\"panel-detail-title\">Product Menu</div>\n            <Button\n              buttonType=\"primary\"\n              justifyContent={\"center\"}\n              onClick={() => {\n                setShowHandlerPanel(0);\n                setSelectedProduct([]);\n              }}\n              width={160}\n              height={32}\n              radius={\"0px\"}\n              label={\"Add product\"}\n              prefix={\n                <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n              }\n            />\n          </div>\n          <div className=\"menu-table\">\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"droppable\" type=\"droppableItem\">\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    {items.map((item, index) => (\n                      <Draggable\n                        key={String(item.menu_category_id)}\n                        draggableId={String(item.menu_category_id)}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div>\n                            <div\n                              className=\"menu-category-row-container\"\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <div className=\"menu-category-wrapper\">\n                                <span\n                                  className=\"menu-category-drag-icon\"\n                                  {...provided.dragHandleProps}\n                                >\n                                  <svg\n                                    width=\"30\"\n                                    height=\"30\"\n                                    viewBox=\"0 0 20 20\"\n                                  >\n                                    <path\n                                      fill=\"currentColor\"\n                                      d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                    />\n                                  </svg>{\" \"}\n                                </span>\n                                <span className=\"menu-category-name\">\n                                  {\" \"}\n                                  {item.menu_category_name}\n                                </span>\n                              </div>\n                              <ProductForMenu\n                                items={items}\n                                setItems={setItems}\n                                setShowHandlerPanel={setShowHandlerPanel}\n                                selectedProduct={selectedProduct}\n                                setSelectedProduct={setSelectedProduct}\n                                setProductForEdit={setProductForEdit}\n                                discounts={discountList}\n                                subItems={item.products}\n                                type={item.menu_category_id}\n                              />\n                            </div>\n                            {provided.placeholder}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        </div>\n        <div className=\"sub-detail-panel-wrapper\">\n          {showHandlerPanel === 0 ? (\n            <AddProduct menuCategory={menuCategory} />\n          ) : (\n            <EditProduct\n              productForEdit={productForEdit}\n              setProductForEdit={setProductForEdit}\n            />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nProductDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  getAllPromotionAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getProductListAPI, getAllPromotionAPI })(\n    ProductDetail\n  )\n);\n\nconst data = [\n  {\n    id: \"1\",\n    name: \"Picked for you\",\n    products: [\n      {\n        id: \"101\",\n        productName: \"Waffle Fries\",\n        description:\n          \"Waffle fries seasoned in Sam's New Orleans style spice and serverd with you choice of sauce\",\n        price: \"$4.50\",\n        picture: Picture6,\n        lastUpdated: \"2021-12-14\",\n      },\n      {\n        id: \"102\",\n        productName: \"Sam's Tenders\",\n        description:\n          \"Five piece southern fried and hand breaded chicken breasts seasoned in our signature Sam's New Orleans style spice served your choice of one sauce.\",\n        price: \"$11.50\",\n        picture: Picture7,\n        lastUpdated: \"2021-12-14\",\n      },\n      {\n        id: \"103\",\n        productName: \"Loaded Waffle Fries\",\n        description:\n          \"Waffle fries seasoned in Sam's New Orleans style spice, topped with Cheese Sauce, Bacon Crumbles, and Scallions and served with your choice of 1 sauce.\",\n        price: \"$5.50\",\n        picture: Picture8,\n        lastUpdated: \"2021-12-14\",\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    name: \"Appetizers\",\n    products: [\n      {\n        id: \"201\",\n        productName: \"Sam's Bacon Mac n' Cheese\",\n        description:\n          \"Macaroni in a 3 cheese blended sauce, topped with parmesan and bacon crumbles.              \",\n        price: \"$5.50\",\n        picture: Picture9,\n        lastUpdated: \"2021-12-14\",\n      },\n      {\n        id: \"202\",\n        productName: \"Sam's Chik'n Wings\",\n        description:\n          \"Your choice of either 6 piece or 12 piece Meatless Quorn Chik'n wings tossed in your choice of buffalo or bbq, served with your choice of one sauce.\",\n        price: \"$14.00\",\n        picture: Picture10,\n        lastUpdated: \"2021-12-14\",\n      },\n    ],\n  },\n  {\n    id: \"3\",\n    name: \"Sandwiches\",\n    products: [\n      {\n        id: \"301\",\n        productName: \"The Classic Sandwich\",\n        description:\n          \"Two southern fried and hand breaded chicken tenders seasoned in our signature Sam's New Orleans style spice in between a toasted brioche bun with pickles, and classic sauce.\",\n        price: \"$14.50\",\n        picture: Picture11,\n        lastUpdated: \"2021-12-14\",\n      },\n      {\n        id: \"302\",\n        productName: \"The BBQ Sandwich\",\n        description:\n          \"Two southern fried and hand breaded chicken tenders seasoned in our signature Sam's New Orleans style spice, tossed in BBQ sauce, in between a toasted brioche bun with pickles, shredded romaine, and mayo.\",\n        price: \"$10.50\",\n        picture: Picture12,\n        lastUpdated: \"2021-12-14\",\n      },\n    ],\n  },\n  {\n    id: \"4\",\n    name: \"Sides\",\n    products: [\n      {\n        id: \"401\",\n        productName: \"Sam's Cole Slaw\",\n        description:\n          \"Shredded carrots, shredded red cabbage, shredded green cabbage, classic sauce.\",\n        price: \"$4.50\",\n        picture: Picture5,\n        lastUpdated: \"2021-12-14\",\n      },\n    ],\n  },\n];\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderDetail.js",["1403","1404","1405","1406","1407","1408","1409","1410"],"import { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleRight,\n  faCheckCircle,\n  faCircleNotch,\n  faCommentDots,\n  faDotCircle,\n  faEllipsisH,\n  faTimesCircle,\n  faUtensils,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { css } from \"@emotion/react\";\nimport orderListData from \"components/MerchantDashboard/DashboardFeatures/MDOrder/data/orderListData\";\nimport \"../Panel.scss\";\nimport ViewOrderDetail from \"./OrderHandler/ViewOrderDetail\";\nimport ProgressBar from \"components/Commons/ProgressBar/ProgressBar\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { getAllOrderAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport {\n  getAllProductFromOrderAPI,\n  getOrderStatusAPI,\n} from \"store/actions/OrderAction/OrderAction\";\nimport MDHeader from \"components/MerchantDashboard/MDHeader/MDHeader\";\nimport Loader from \"react-spinners/ScaleLoader\";\n\nfunction OrderDetail(props) {\n  const [loading, setLoading] = useState(false);\n  const {\n    user,\n    provider,\n    getAllOrderAPI,\n    getAllProductFromOrderAPI,\n    getOrderStatusAPI,\n  } = props;\n  const [statusOnView, setStatusOnView] = useState(-1);\n  const [orderList, setOrderList] = useState([]);\n  const [orderSummary, setOrderSummary] = useState(orderList[0]);\n  const [orderItems, setOrderItems] = useState([]);\n  let [color, setColor] = useState(\"#910000\");\n  const override = css`\n    display: block;\n    border-color: #910000;\n    font-size: 14px;\n    color: red;\n  `;\n  const filterOrderList = (type) => {\n    const filteredOrderList = orderListData.filter(\n      (order) => order.order_status === type\n    );\n    setOrderList(filteredOrderList);\n  };\n  useEffect(() => {\n    filterOrderList(props.type);\n  }, [props.type]);\n\n  //fetch order list for the first time\n  useEffect(() => {\n    async function fetchAllOrders(id) {\n      setLoading(false);\n      let limit = 50;\n      let offset = 1;\n      const result = await getAllOrderAPI(id, limit, offset);\n      setLoading(true);\n    }\n    //fetch new order list when order in store is empty\n    if (user.provider_id !== -1 && !provider.orderList.length) {\n      fetchAllOrders(user.provider_id);\n      return;\n    }\n    setLoading(true);\n  }, [user.provider_id]);\n\n  useEffect(() => {\n    if (user.provider_id !== -1) {\n      provider.socket.emit(\"join-room\", `provider-${user.provider_id}`);\n      console.log(`provider-${user.provider_id}`);\n      provider.socket.on(\n        \"provider-received-order\",\n        async (orderData, customerData, order_code, pricing) => {\n          console.log(\"check:\", orderData, customerData, order_code, pricing);\n\n          const result1 = await getAllProductFromOrderAPI(order_code);\n          const result2 = await getOrderStatusAPI(order_code);\n          Promise.all([result1, result2]).then((data) => {\n            setOrderItems(data[0]);\n            setOrderSummary(data[1]);\n            if (pricing.deliveryMode === 2) {\n              setStatusOnView(2);\n            } else {\n              setStatusOnView(1);\n            }\n          });\n        }\n      );\n      provider.socket.on(\"order-accepted\", (data) => {\n        setStatusOnView(2);\n      });\n    }\n  }, [user.provider_id]);\n\n  const viewOrderDetail = (code) => {\n    async function fetchOrderDetail(orderCode) {\n      const result1 = await getAllProductFromOrderAPI(orderCode);\n      const result2 = await getOrderStatusAPI(orderCode);\n      Promise.all([result1, result2]).then((data) => {\n        setOrderItems(data[0]);\n        setOrderSummary(data[1]);\n      });\n    }\n    fetchOrderDetail(code);\n  };\n\n  const mapOrderStatusIcon = (status) => {\n    switch (status) {\n      case 3:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history inprogress\"\n              icon={faDotCircle}\n            />\n            <span className=\"order-status-text-blue\">Processing</span>\n          </>\n        );\n      case 5:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history done\"\n              icon={faCheckCircle}\n            />\n            <span className=\"order-status-text-green\">Completed</span>\n          </>\n        );\n      case 6:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history cancel\"\n              icon={faTimesCircle}\n            />\n            <span className=\"order-status-text-red\">Cancel</span>\n          </>\n        );\n      default:\n        return (\n          <>\n            <FontAwesomeIcon\n              className=\"o-order-icon-history pending\"\n              icon={faCircleNotch}\n            />\n            <span className=\"order-status-text-yellow\">Awaiting</span>\n          </>\n        );\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"double-panel-container\">\n        <div className=\"main-detail-panel-wrapper\">\n          <MDHeader visible={false} />\n          <div className=\"panel-detail-title\">Your orders</div>\n          <div className=\"product-list-info-row\">\n            <div className=\"product-list-info\">\n              <div className=\"product-stock-quantity\">\n                {provider.orderList.length} Orders\n              </div>\n              <div className=\"product-stock-quantity-description\">\n                {props.type} orders: {provider.orderList.length}\n              </div>\n              <div className=\"product-progress-bar\">\n                <ProgressBar\n                  bgcolor=\"#940000\"\n                  progress={`${provider.orderList.length}`}\n                  height=\"6px\"\n                  length={50}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"o-order-container\">\n            <div className=\"o-order-header-row\">\n              <div className=\"o-order o-order-icon\">Order status</div>\n              <div className=\"o-order o-order-id\">Order Id</div>\n              <div className=\"o-order o-order-name\">Customer name</div>\n              <div className=\"o-order o-order-time\">Submitted time</div>\n              <div className=\"o-order o-order-quantity\">Payment</div>\n              <div className=\"o-order o-order-price\">Total</div>\n            </div>\n          </div>\n          {loading ? (\n            <div className=\"o-order-container\">\n              {provider.orderList?.map((order) => (\n                <div\n                  className=\"o-order-row\"\n                  onClick={() => {\n                    setStatusOnView(order.status);\n                    viewOrderDetail(order.order_code);\n                  }}\n                  key={order.order_code}\n                  style={\n                    orderSummary?.order_code === order?.order_code\n                      ? { backgroundColor: \"#f3f3f3\" }\n                      : { backgroundColor: \"white\" }\n                  }\n                >\n                  {mapOrderStatusIcon(order.status)}\n                  <div className=\"o-order o-order-id\">{order.order_code}</div>\n                  <div className=\"o-order o-order-name\">\n                    {`${order.user_first_name} ${order.user_last_name}`}\n                  </div>\n                  <div className=\"o-order-time\">{order.update_at}</div>\n                  <div className=\"o-order-quantity\">{order.payment_name}</div>\n                  <div className=\"o-order-price\">\n                    $ {order.total_amount?.toFixed(2)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div\n              className=\"o-order-container\"\n              style={{\n                height: 500,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderBottom: \"2px solid #d8d8d8\",\n                borderLeft: \"2px solid #d8d8d8\",\n                borderRight: \"2px solid #d8d8d8\",\n                gap: 10,\n              }}\n            >\n              <Loader\n                color={color}\n                loading={true}\n                css={override}\n                size={100}\n                margin={3}\n                speedMultiplier={0.8}\n              />\n              <span className=\"o-order-container-text\">\n                Please wait for a while ...\n              </span>\n            </div>\n          )}\n        </div>\n        <div className=\"sub-detail-panel-wrapper\" style={{ paddingTop: \"0\" }}>\n          <ViewOrderDetail\n            setOrderItems={setOrderItems}\n            setOrderSummary={setOrderSummary}\n            orderItems={orderItems}\n            orderSummary={orderSummary}\n            orderStatus={statusOnView}\n            socket={provider.socket}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nOrderDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getAllOrderAPI: PropTypes.func.isRequired,\n  getAllProductFromOrderAPI: PropTypes.func.isRequired,\n  getOrderStatusAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getAllOrderAPI,\n    getAllProductFromOrderAPI,\n    getOrderStatusAPI,\n  })(OrderDetail)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/OrderHandler/ViewOrderDetail.js",["1411","1412","1413","1414","1415","1416","1417","1418"],"import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport \"components/MerchantDashboard/DashboardFeatures/Panel.scss\";\nimport \"style/Common.scss\";\nimport \"components/MerchantDashboard/DashboardFeatures/MDOrder/OrderHandler/OrderHandler.scss\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport CartImage from \"assets/cart.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDesktop, faStickyNote } from \"@fortawesome/fontawesome-free-solid\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport axios from \"axios\";\nimport { appendOrderList } from \"store/actions/ProviderAction/ProviderAction\";\nimport { updateOrderList } from \"store/actions/ProviderAction/ProviderAction\";\nimport { faBiking } from \"@fortawesome/free-solid-svg-icons\";\nfunction ViewOrderDetail({ orderSummary, orderItems, socket, ...rest }) {\n  const [orderStatus, setOrderStatus] = useState(rest.orderStatus);\n  const DeclineOrder = async () => {\n    const order = {\n      order_id: orderSummary.order_id,\n      order_code: orderSummary.order_code,\n      total_amount: orderSummary.subtotal,\n      status: 6,\n      user_first_name: \"Sang\",\n      user_last_name: \"Nguyen\",\n      update_at: new Date().toISOString(),\n      payment_name: orderSummary.payment_name,\n      subtotal: orderSummary.subtotal + orderItems.delivery_fee,\n    };\n    rest.updateOrderList(order);\n    socket.emit(\"provider-decline-order\", orderSummary.order_code);\n    try {\n      const res = await axios.post(\"/v1/api/tastie/order/update_order_status\", {\n        order_code: orderSummary.order_code,\n        status: 6, // confirmed\n        shipper_id: null, // edit actual shiper_id here\n        update_at: new Date().toISOString(),\n      });\n      setOrderStatus(6);\n      rest.setOrderItems([]);\n      rest.setOrderSummary(null);\n    } catch (error) {\n      console.error(\"Cannot update order status\", error);\n    }\n\n    return;\n  };\n  const AcceptOrder = async () => {\n    const order = {\n      order_id: orderSummary.order_id,\n      order_code: orderSummary.order_code,\n      total_amount: orderSummary.subtotal || 0,\n      status: 3,\n      user_first_name: \"Sang\",\n      user_last_name: \"Nguyen\",\n      update_at: new Date().toISOString(),\n      payment_name: orderSummary.payment_name || \"Cash\",\n      subtotal: orderSummary.subtotal || 0 + orderItems.delivery_fee || 0,\n    };\n    rest.appendOrderList(order);\n    socket.emit(\"provider-confirmed\", orderSummary.order_code);\n    try {\n      const res = await axios.post(\"/v1/api/tastie/order/update_order_status\", {\n        order_code: orderSummary.order_code,\n        status: 3, // confirmed\n        shipper_id: null, // edit actual shiper_id here\n        update_at: new Date().toISOString(),\n      });\n      setOrderStatus(3);\n      rest.setOrderItems([]);\n      rest.setOrderSummary(null);\n    } catch (error) {\n      console.error(\"Cannot update order status\", error);\n    }\n    return;\n  };\n\n  return orderSummary ? (\n    <Fragment>\n      <div className=\"od-handler-wrapper\">\n        <div className=\"od-header-wrapper\">\n          <div className=\"od-header-title\">{orderItems?.merchant_name}</div>\n          <div className=\"od-header-sub-title\">{orderSummary?.order_code}</div>\n          <div className=\"od-header-sub-title\">\n            {orderSummary?.delivery_mode === 1 ? (\n              <FontAwesomeIcon icon={faDesktop} />\n            ) : (\n              <FontAwesomeIcon icon={faBiking} />\n            )}\n          </div>\n        </div>\n        <div className=\"od-body-wrapper\">\n          {orderItems?.items ? (\n            orderItems.items?.map((product, index) => (\n              <Fragment key={index}>\n                <div className=\"od-product-box\">\n                  <div className=\"od-product-quantity\">\n                    {product.quantity} &#215;\n                  </div>\n                  <div className=\"od-product-image\">\n                    <img\n                      alt=\"product_image\"\n                      src={product.image}\n                      width={50}\n                      height={50}\n                      style={{ objectFit: \"cover\" }}\n                    />\n                  </div>\n                  <div className=\"od-product-detail-wrapper\">\n                    <div className=\"od-product-detail-main\">\n                      <div className=\"od-product-detail-name\">\n                        {product.product_name}\n                      </div>\n                      <div className=\"od-product-detail-price\">\n                        $ {product.price?.toFixed(2)}\n                      </div>\n                    </div>\n                    {product.item_additional_options ? (\n                      product.item_additional_options.map((option) => (\n                        <div className=\"od-product-option-wrapper\">\n                          <div className=\"od-product-option-label\">\n                            <div className=\"od-product-option-name\">\n                              {option.option_name}\n                            </div>\n                            <div className=\"od-product-option-selected\">\n                              {option.selected_option}\n                            </div>\n                          </div>\n                          <div className=\"od-product-option-price\">\n                            {option.option_price}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                </div>\n                {product.special_instruction ? (\n                  <div className=\"note-wrapper\">\n                    <FontAwesomeIcon\n                      className=\"note-icon\"\n                      icon={faStickyNote}\n                    />\n                    **\n                    {product.special_instruction}\n                  </div>\n                ) : (\n                  <Fragment></Fragment>\n                )}\n              </Fragment>\n            ))\n          ) : (\n            <Fragment></Fragment>\n          )}\n        </div>\n        <div className=\"od-footer-wrapper\">\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              gap: 10,\n            }}\n          >\n            Delivery method:{\" \"}\n            {orderSummary?.delivery_mode === 1 ? (\n              <div>\n                <FontAwesomeIcon icon={faDesktop} /> Booking Shipper\n              </div>\n            ) : (\n              <div>\n                <FontAwesomeIcon icon={faBiking} /> Pick up\n              </div>\n            )}\n          </div>\n          <div className=\"od-footer-row\">\n            <div className=\"od-footer-title\">Subtotal</div>\n            <div className=\"od-footer-sub-title\">\n              $ {orderSummary.subtotal?.toFixed(2)}\n            </div>\n          </div>\n          <div className=\"od-footer-row\">\n            <div\n              className=\"od-footer-title\"\n              style={{ fontSize: \"12px\", color: \"rgb(156, 156, 156)\" }}\n            >\n              Delivery Fee\n            </div>\n            <div\n              className=\"od-footer-sub-title\"\n              style={{ fontSize: \"12px\", color: \"rgb(156, 156, 156)\" }}\n            >\n              $ {orderSummary.delivery_fee?.toFixed(2) || 0?.toFixed(2)}\n            </div>\n          </div>\n          <div className=\"od-footer-row\">\n            <div className=\"od-footer-title\">Total</div>\n            <div className=\"od-footer-sub-title\">\n              $ {orderSummary.subtotal?.toFixed(2)}\n            </div>\n          </div>\n        </div>\n        {rest.orderStatus === 2 && (\n          <ButtonGroup\n            width={100}\n            float={\"center\"}\n            mgTop={20}\n            gap={30}\n            mgBottom={10}\n          >\n            <Button\n              bgColor={\"white\"}\n              color=\"black\"\n              border={\"2px solid rgb(170, 170, 170)\"}\n              buttonType=\"secondary\"\n              width={120}\n              height={30}\n              radius={\"0px\"}\n              label={\"Decline\"}\n              onClick={() => DeclineOrder()}\n            />\n            <Button\n              buttonType=\"primary\"\n              width={120}\n              height={30}\n              radius={\"0px\"}\n              label={\"Accept\"}\n              onClick={() => AcceptOrder()}\n            />\n          </ButtonGroup>\n        )}\n      </div>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <div className=\"od-handler-wrapper\">\n        <div className=\"cart-body\" style={{ justifyContent: \"center\" }}>\n          <img src={CartImage} alt=\"cart_image\" className=\"cart-image\" />\n          <span className=\"cart-image-description\" style={{ fontSize: 14 }}>\n            Your restaurant or store currently has no new orders.\n          </span>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\nViewOrderDetail.propTypes = {\n  appendOrderList: PropTypes.func.isRequired,\n  updateOrderList: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { appendOrderList, updateOrderList })(\n    ViewOrderDetail\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/EditProduct.js",["1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430"],"import { Fragment, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faSearch,\n  faUndo,\n  faSave,\n  faExchangeAlt,\n  faImage,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport \"./ProductHandler.scss\";\nimport \"components/MerchantDashboard/DashboardFeatures/Panel.scss\";\nimport \"style/Common.scss\";\n\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport CategorySelector from \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Tag from \"components/Commons/Tag/Tag\";\n\nimport { getCategoryAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport AddAdditionalOption from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddAdditionalOption\";\nimport UpdateAdditionalOption from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/UpdateAdditionalOption\";\nimport {\n  getProductListAPI,\n  updateProductAPI,\n} from \"store/actions/ProductAction/ProductAction\";\n\nfunction EditProduct(props) {\n  const [showFoodCategory, setShowFoodCategory] = useState(false);\n  const [showMainFoodCategory, setShowMainFoodCategory] = useState(false);\n  const [showMenuCategory, setShowMenuCategory] = useState(false);\n  const [showAdditionalOption, setShowAdditionalOption] = useState(false);\n  const [showUpdateAdditionalOption, setShowUpdateAdditionalOption] =\n    useState(false);\n  const [foodCategory, setFoodCategory] = useState([]);\n  const [filteredFoodCategory, setFilteredFoodCategory] = useState([]);\n  const [mainFoodCategory, setMainFoodCategory] = useState([]);\n  const [menuCategory, setMenuCategory] = useState([]);\n  const [selectedFood, setSelectedFood] = useState([]);\n  const [selectedMainFood, setSelectedMainFood] = useState([]);\n  const [selectedMenu, setSelectedMenu] = useState([]);\n  const [choices, setChoices] = useState([]);\n  const [currentId, setCurrentId] = useState(0);\n  const [additionalOption, setAdditionalOption] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const initialValues = {\n    productName: props.productForEdit?.product_name || \"\",\n    description: props.productForEdit?.description || \"\",\n    productImage: props.productForEdit?.product_image || \"\",\n    available: 0,\n    status: 1,\n    quantityAvailable: 0,\n    productStatus: 1,\n    productPrice: String(props.productForEdit?.price),\n    productPhoto: \"\",\n    position: 1,\n  };\n  useEffect(() => {\n    console.log(props.productForEdit);\n  }, [props.productForEdit]);\n  useEffect(() => {\n    async function fetchMenuCategory(id) {\n      if (id !== -1) {\n        var result = await props.getProductListAPI(id);\n        setMenuCategory(result);\n      }\n    }\n    fetchMenuCategory(props.user.provider_id);\n  }, [props.user.provider_id]);\n\n  useEffect(() => {\n    async function fetchCategory() {\n      try {\n        let foodCategory = await props.getCategoryAPI(\"food\");\n        let mainFoodCategory = await props.getCategoryAPI(\"main-food\");\n        setFoodCategory(foodCategory);\n        setMainFoodCategory(mainFoodCategory);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchCategory();\n  }, []);\n  useEffect(() => {\n    setFilteredFoodCategory([]);\n    if (selectedMainFood.length !== 1) return;\n    const foodCategoryList = foodCategory.filter(\n      (item) => item.parent_category_id === selectedMainFood[0]\n    );\n    setFilteredFoodCategory(foodCategoryList);\n  }, [selectedMainFood]);\n\n  const updateProduct = async (values) => {\n    const { user } = props;\n    const formData = {\n      productId: props.productForEdit.product_id,\n      productName: values.productName,\n      productStatus: values.productStatus,\n      description: values.description,\n      productPrice: parseFloat(values.productPrice),\n      productPhoto: props.productForEdit.product_image,\n      additionalOptions: additionalOption,\n      menuCategoryID: [props.productForEdit.menu_category_id],\n      mainCategoryID: selectedMainFood,\n      foodCategoryID: selectedFood,\n      position: props.productForEdit.product_position,\n      quantityAvailable: props.productForEdit.quantity,\n    };\n    if (user.provider_id !== -1 && user.provider_id !== null) {\n      const status = await props.updateProductAPI(formData, user.provider_id);\n      if (status) console.log(\"Thanh cong\");\n      else console.log(\"That bai\");\n    }\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize\n      onSubmit={() => updateProduct}\n    >\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <Fragment>\n            <Form style={{ width: \"100%\" }}>\n              <div className=\"panel-detail-title\">Edit Item</div>\n\n              <div className=\"product-handler-container\">\n                <span className=\"product-detail-form-label\">Product photo</span>\n                <div className=\"product-image-wrapper-edit\">\n                  <ButtonGroup\n                    float=\"flex-start\"\n                    mgTop={10}\n                    mgBottom={5}\n                    mgRight={10}\n                  >\n                    <Button\n                      color={\"black\"}\n                      bglight={true}\n                      border={\"#5d5d5d 1.5px solid\"}\n                      prefix={\n                        <FontAwesomeIcon\n                          className=\"button-icon\"\n                          icon={faImage}\n                        />\n                      }\n                      width={160}\n                      height={30}\n                      label=\"Change Photo\"\n                    />\n                  </ButtonGroup>\n                  <img src={values.productImage} width={100} height={100} />\n                </div>\n                <span className=\"product-detail-form-label\">Name</span>\n                <div className=\"product-detail-form-input-wrapper\">\n                  <Field\n                    type=\"text\"\n                    name=\"productName\"\n                    placeholder=\"Product name\"\n                  />\n                </div>\n                <div className=\"form-label-description\">\n                  <span className=\"product-detail-form-label\">Description</span>\n                  <span className=\"letter-counter\">\n                    {values.description.length} / 200\n                  </span>\n                </div>\n                <div className=\"product-detail-form-input-wrapper\">\n                  <Field\n                    className=\"product-detail-textarea\"\n                    as=\"textarea\"\n                    name=\"description\"\n                    placeholder=\"Description about your product\"\n                  />\n                </div>\n                <span className=\"product-detail-form-label\">Menu category</span>\n                <div className=\"product-detail-tag-container\">\n                  {menuCategory.map((tag, index) =>\n                    selectedFood.includes(tag.menu_category_id) ? (\n                      <Tag\n                        key={tag.menu_category_id}\n                        text={tag.menu_category_name}\n                      />\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </div>\n                <ButtonGroup\n                  float=\"flex-start\"\n                  mgTop={10}\n                  gap={12}\n                  mgBottom={5}\n                >\n                  <Button\n                    color={\"black\"}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    prefix={\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faExchangeAlt}\n                      />\n                    }\n                    gap={\"10px\"}\n                    justifyContent={\"center\"}\n                    width=\"92%\"\n                    height={30}\n                    label=\"Change menu\"\n                    onClick={() => setShowMenuCategory(true)}\n                  />\n                </ButtonGroup>\n\n                <span className=\"product-detail-form-label\">Food category</span>\n\n                <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                  <Button\n                    color={\"black\"}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    prefix={\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faSearch}\n                      />\n                    }\n                    justifyContent={\"center\"}\n                    gap={\"10px\"}\n                    width=\"92%\"\n                    height={30}\n                    onClick={() => setShowMainFoodCategory(true)}\n                    label=\"Select Category\"\n                  />\n                </ButtonGroup>\n                <div className=\"product-detail-tag-container\">\n                  {mainFoodCategory.map((tag, index) =>\n                    selectedMainFood.includes(tag.category_id) ? (\n                      <Tag key={tag.category_id} text={tag.category_name} />\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </div>\n                <span className=\"product-detail-form-label\">\n                  Specialty category\n                </span>\n\n                <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                  <Button\n                    color={\"black\"}\n                    disabled={selectedMainFood.length ? false : true}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    prefix={\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faSearch}\n                      />\n                    }\n                    justifyContent={\"center\"}\n                    gap={\"10px\"}\n                    width=\"92%\"\n                    height={30}\n                    onClick={() => setShowFoodCategory(true)}\n                    label=\"Select Category\"\n                  />\n                </ButtonGroup>\n                <div className=\"product-detail-tag-container\">\n                  {filteredFoodCategory.map((tag, index) =>\n                    selectedFood.includes(tag.category_id) ? (\n                      <Tag key={tag.category_id} text={tag.category_name} />\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </div>\n                <span className=\"product-detail-form-label\">\n                  Additional options\n                </span>\n\n                <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                  <Button\n                    color={\"black\"}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    justifyContent={\"center\"}\n                    prefix={\n                      <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                    }\n                    onClick={() => setShowAdditionalOption(true)}\n                    width=\"92%\"\n                    height={30}\n                    label=\"Add an option\"\n                  />\n                </ButtonGroup>\n                <div className=\"option-box-container\">\n                  {additionalOption.map((option) => (\n                    <div\n                      className=\"option-box\"\n                      onClick={() => {\n                        setShowUpdateAdditionalOption(true);\n                        setSelectedOption(option.name);\n                      }}\n                      key={option.name}\n                    >\n                      {option.name}\n                    </div>\n                  ))}\n                </div>\n\n                <span className=\"product-detail-form-label\">Status</span>\n                <div className=\"product-detail-form-with-select-2\">\n                  <Field\n                    as=\"select\"\n                    className=\"select-box\"\n                    name=\"productStatus\"\n                    placeholder=\"Status\"\n                  >\n                    <option>Available</option>\n                  </Field>\n                </div>\n\n                <span className=\"product-detail-form-label\">Price</span>\n                <div className=\"product-detail-form-with-select\">\n                  <Field\n                    className=\"input-price\"\n                    type=\"text\"\n                    name=\"productPrice\"\n                    placeholder=\"Price\"\n                  />\n                  <Field\n                    className=\"select-currency\"\n                    as=\"select\"\n                    name=\"curency\"\n                    placeholder=\"Currency\"\n                  >\n                    <option>USD</option>\n                  </Field>\n                </div>\n              </div>\n              <ButtonGroup\n                width={90}\n                float={\"space-between\"}\n                mgTop={10}\n                gap={10}\n                mgBottom={10}\n              >\n                <Button\n                  type=\"submit\"\n                  buttonType=\"secondary\"\n                  justifyContent={\"center\"}\n                  width={100}\n                  height={36}\n                  radius={\"0px\"}\n                  label={\"Undo\"}\n                  prefix={\n                    <FontAwesomeIcon icon={faUndo} style={{ color: \"white\" }} />\n                  }\n                />\n                <Button\n                  buttonType=\"primary\"\n                  justifyContent={\"center\"}\n                  width={100}\n                  height={36}\n                  radius={\"0px\"}\n                  label={\"Update\"}\n                  onClick={() => updateProduct(values)}\n                  prefix={\n                    <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n                  }\n                />\n              </ButtonGroup>\n              <Modal\n                openModal={showMenuCategory}\n                title={\"Menu Category\"}\n                width={50}\n                height={500}\n                closeModal={() => {\n                  setShowMenuCategory(false);\n                }}\n              >\n                <CategorySelector\n                  menu={true}\n                  save={() => setShowMenuCategory(false)}\n                  selectedCategory={selectedMenu}\n                  setSelectedCategory={setSelectedMenu}\n                  list={menuCategory}\n                  title={\"Select categories for menu (maximum: 1)\"}\n                  required={1}\n                />\n              </Modal>\n              <Modal\n                openModal={showMainFoodCategory}\n                title={\"Food Category\"}\n                width={50}\n                height={500}\n                closeModal={() => {\n                  setShowMainFoodCategory(false);\n                }}\n              >\n                <CategorySelector\n                  save={() => setShowMainFoodCategory(false)}\n                  selectedCategory={selectedMainFood}\n                  setSelectedCategory={setSelectedMainFood}\n                  list={mainFoodCategory}\n                  title={\"Select categories for foods (maximum: 3)\"}\n                  required={1}\n                />\n              </Modal>\n              <Modal\n                openModal={showFoodCategory}\n                title={\"Food Specialty Category\"}\n                width={50}\n                height={500}\n                closeModal={() => {\n                  setShowFoodCategory(false);\n                }}\n              >\n                <CategorySelector\n                  save={() => setShowFoodCategory(false)}\n                  selectedCategory={selectedFood}\n                  setSelectedCategory={setSelectedFood}\n                  list={filteredFoodCategory}\n                  title={\"Select categories for food specialty (maximum: 3)\"}\n                  required={3}\n                />\n              </Modal>\n              <Modal\n                openModal={showAdditionalOption}\n                title={\"Add Additional Options\"}\n                width={35}\n                height={520}\n                closeModal={() => {\n                  setShowAdditionalOption(false);\n                }}\n              >\n                <AddAdditionalOption\n                  title={\"Create options for your product\"}\n                  additionalOption={additionalOption}\n                  setAdditionalOption={setAdditionalOption}\n                  setShowAdditionalOption={setShowAdditionalOption}\n                />\n              </Modal>\n              <Modal\n                openModal={showUpdateAdditionalOption}\n                title={\"Update Additional Options\"}\n                width={35}\n                height={520}\n                closeModal={() => {\n                  setShowUpdateAdditionalOption(false);\n                }}\n              >\n                <UpdateAdditionalOption\n                  title={\"Update your additional option\"}\n                  additionalOption={additionalOption}\n                  setAdditionalOption={setAdditionalOption}\n                  setShowAdditionalOption={showUpdateAdditionalOption}\n                  selectedOption={selectedOption}\n                />\n              </Modal>\n            </Form>\n          </Fragment>\n        );\n      }}\n    </Formik>\n  );\n}\n\nEditProduct.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getCategoryAPI: PropTypes.func.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  updateProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getCategoryAPI,\n    getProductListAPI,\n    updateProductAPI,\n  })(EditProduct)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddProduct.js",["1431","1432","1433","1434","1435","1436","1437","1438"],"import { Fragment, useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./ProductHandler.scss\";\nimport \"components/MerchantDashboard/DashboardFeatures/Panel.scss\";\nimport \"style/Common.scss\";\n\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport CategorySelector from \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector\";\nimport AddMenuCategory from \"./AddMenuCategory\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport { faPlus, faSearch, faUndo } from \"@fortawesome/fontawesome-free-solid\";\nimport { getCategoryAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport AddAdditionalOption from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddAdditionalOption\";\nimport UpdateAdditionalOption from \"components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/UpdateAdditionalOption\";\nimport {\n  getMenuCategoryAPI,\n  addProductAPI,\n} from \"store/actions/ProductAction/ProductAction\";\nimport SelectMenuCategory from \"./SelectMenuCategory\";\nimport axios from \"axios\";\n\nconst initialValues = {\n  productName: \"\",\n  description: \"\",\n  available: 0,\n  status: 1,\n  quantityAvailable: 0,\n  productStatus: 1,\n  productPrice: 0,\n  productPhoto: \"\",\n  position: 1,\n};\n\nfunction AddProduct(props) {\n  const [productImage, setProductImage] = useState(null);\n  const [showFoodCategory, setShowFoodCategory] = useState(false);\n  const [showMainFoodCategory, setShowMainFoodCategory] = useState(false);\n  const [showMenuCategory, setShowMenuCategory] = useState(false);\n  const [showCreateMenu, setShowCreateMenu] = useState(false);\n  const [showAdditionalOption, setShowAdditionalOption] = useState(false);\n  const [showUpdateAdditionalOption, setShowUpdateAdditionalOption] =\n    useState(false);\n  const [foodCategory, setFoodCategory] = useState([]);\n  const [filteredFoodCategory, setFilteredFoodCategory] = useState([]);\n  const [mainFoodCategory, setMainFoodCategory] = useState([]);\n  const [menuCategory, setMenuCategory] = useState([]);\n  const [selectedFood, setSelectedFood] = useState([]);\n  const [selectedMainFood, setSelectedMainFood] = useState([]);\n  const [selectedMenu, setSelectedMenu] = useState([]);\n  const [additionalOption, setAdditionalOption] = useState([]);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [selectedMenuCategory, setSelectedMenuCategory] = useState([]);\n\n  const inputFile = useRef(null);\n  const { user } = props;\n  useEffect(() => {\n    async function fetchingCategoryData() {\n      try {\n        let foodCategory = await props.getCategoryAPI(\"food\");\n        let mainFoodCategory = await props.getCategoryAPI(\"main-food\");\n        if (user.provider_id) {\n          var menuCategory = await props.getMenuCategoryAPI(user.provider_id);\n        }\n        setFoodCategory(foodCategory);\n        setMainFoodCategory(mainFoodCategory);\n        setMenuCategory(menuCategory);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchingCategoryData();\n  }, []);\n\n  useEffect(() => {\n    setFilteredFoodCategory([]);\n    if (selectedMainFood.length !== 1) return;\n    const foodCategoryList = foodCategory.filter(\n      (item) => item.parent_category_id === selectedMainFood[0]\n    );\n    setFilteredFoodCategory(foodCategoryList);\n  }, [selectedMainFood]);\n\n  const addProduct = async (values) => {\n    \n    const data = JSON.stringify({\n      provider_id: user.provider_id,\n      upload: productImage,\n    });\n    /*\n    try {\n      const res = await axios.post(\n        `http://157.230.243.92:3777/upload/image-product`,\n        data,\n        {\n          headers: {\n            Accept: \"application/json\",\n            ContentType: \"multipart/form-data\",\n          },\n        }\n      );\n      if (res.data.status) {\n        console.log(\"hello\");\n        console.log(res.data.url);\n      }\n      console.log(\"upload failed\");\n    } catch (err) {\n      console.log(\"Cannot upload avatar\", err);\n    }\n    return;*/\n    const formData = {\n      provider_id: user.provider_id,\n      product_name: values.productName,\n      product_status: values.productStatus,\n      description: values.description,\n      price: values.productPrice || 0,\n      quantity: values.quantityAvailable || 0,\n      product_image: \"product-image\",\n      menuCategoryID: selectedMenuCategory,\n      mainCategoryID: selectedMainFood,\n      foodCategoryID: selectedFood,\n      additionalOptions: additionalOption,\n    };\n    if (user.provider_id !== -1 && user.provider_id !== null) {\n      const status = await props.addProductAPI(formData);\n      if (status) console.log(\"Thanh cong\");\n      else console.log(\"That bai\");\n    }\n  };\n\n  const handleUploadImage = () => {\n    inputFile.current.click();\n  };\n  return (\n    <Formik initialValues={initialValues}>\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <Form style={{ width: \"100%\" }}>\n            <div className=\"panel-detail-title\">Add Item</div>\n            <div className=\"product-handler-container\">\n              <span className=\"product-detail-form-label\">Name</span>\n              <div className=\"product-detail-form-input-wrapper\">\n                <Field\n                  type=\"text\"\n                  name=\"productName\"\n                  placeholder=\"Product name\"\n                />\n              </div>\n              <div className=\"form-label-description\">\n                <span className=\"product-detail-form-label\">Description</span>\n                <span className=\"letter-counter\">\n                  {values.description.length} / 200\n                </span>\n              </div>\n              <div className=\"product-detail-form-input-wrapper\">\n                <Field\n                  className=\"product-detail-textarea\"\n                  as=\"textarea\"\n                  name=\"description\"\n                  placeholder=\"Description about your product\"\n                />\n              </div>\n              <span className=\"product-detail-form-label\">Menu category</span>\n              <div className=\"product-detail-tag-container\">\n                {props.menuCategory?.map((tag, index) =>\n                  selectedMenuCategory.includes(tag.menu_category_id) ? (\n                    <Tag\n                      key={tag.menu_category_id}\n                      text={tag.menu_category_name}\n                    />\n                  ) : (\n                    <></>\n                  )\n                )}\n              </div>\n              <ButtonGroup float=\"flex-start\" mgTop={10} gap={12} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                  }\n                  gap={\"10px\"}\n                  justifyContent={\"center\"}\n                  width=\"44%\"\n                  height={30}\n                  label=\"Add menu\"\n                  onClick={() => setShowCreateMenu(true)}\n                />\n                <Button\n                  disabled={menuCategory.length ? false : true}\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faSearch} />\n                  }\n                  gap={\"10px\"}\n                  justifyContent={\"center\"}\n                  width=\"44%\"\n                  height={30}\n                  label=\"Select menu\"\n                  onClick={() => setShowMenuCategory(true)}\n                />\n              </ButtonGroup>\n\n              <span className=\"product-detail-form-label\">Food category</span>\n\n              <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faSearch} />\n                  }\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width=\"92%\"\n                  height={30}\n                  onClick={() => setShowMainFoodCategory(true)}\n                  label=\"Select Category\"\n                />\n              </ButtonGroup>\n              <div className=\"product-detail-tag-container\">\n                {mainFoodCategory.map((tag, index) =>\n                  selectedMainFood.includes(tag.category_id) ? (\n                    <Tag key={tag.category_id} text={tag.category_name} />\n                  ) : (\n                    <></>\n                  )\n                )}\n              </div>\n              <span className=\"product-detail-form-label\">\n                Specialty category\n              </span>\n\n              <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  disabled={selectedMainFood.length ? false : true}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faSearch} />\n                  }\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width=\"92%\"\n                  height={30}\n                  onClick={() => setShowFoodCategory(true)}\n                  label=\"Select Category\"\n                />\n              </ButtonGroup>\n              <div className=\"product-detail-tag-container\">\n                {filteredFoodCategory.map((tag, index) =>\n                  selectedFood.includes(tag.category_id) ? (\n                    <Tag key={tag.category_id} text={tag.category_name} />\n                  ) : (\n                    <></>\n                  )\n                )}\n              </div>\n              <span className=\"product-detail-form-label\">\n                Additional options\n              </span>\n\n              <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  justifyContent={\"center\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                  }\n                  onClick={() => setShowAdditionalOption(true)}\n                  width=\"92%\"\n                  height={30}\n                  label=\"Add an option\"\n                />\n              </ButtonGroup>\n              <div className=\"option-box-container\">\n                {additionalOption.map((option) => (\n                  <div\n                    className=\"option-box\"\n                    onClick={() => {\n                      setShowUpdateAdditionalOption(true);\n                      setSelectedOption(option.name);\n                    }}\n                    key={option.name}\n                  >\n                    {option.name}\n                  </div>\n                ))}\n              </div>\n              <span className=\"product-detail-form-label\">Available</span>\n              <div className=\"product-detail-form-input-wrapper\">\n                <Field\n                  type=\"text\"\n                  name=\"quantityAvailable\"\n                  placeholder=\"In stock\"\n                />\n              </div>\n\n              <span className=\"product-detail-form-label\">Status</span>\n              <div className=\"product-detail-form-with-select-2\">\n                <Field\n                  as=\"select\"\n                  className=\"select-box\"\n                  name=\"productStatus\"\n                  placeholder=\"Status\"\n                >\n                  <option>Available</option>\n                </Field>\n              </div>\n              <span className=\"product-detail-form-label\">Photo</span>\n\n              <ButtonGroup float=\"flex-start\" mgTop={10} mgBottom={5}>\n                <Button\n                  color={\"black\"}\n                  bglight={true}\n                  border={\"#5d5d5d 1.5px solid\"}\n                  prefix={\n                    <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                  }\n                  onClick={handleUploadImage}\n                  width=\"50%\"\n                  height={30}\n                  label=\"Upload a photo\"\n                />\n                <input\n                  hidden={true}\n                  name=\"product-image\"\n                  type=\"file\"\n                  ref={inputFile}\n                  onChange={(event) => {\n                    setProductImage(event.currentTarget.files[0]);\n                  }}\n                  className=\"form-control\"\n                />\n              </ButtonGroup>\n              <span className=\"product-detail-form-label\">Price</span>\n              <div className=\"product-detail-form-with-select\">\n                <Field\n                  className=\"input-price\"\n                  type=\"text\"\n                  name=\"productPrice\"\n                  placeholder=\"Price\"\n                />\n                <Field\n                  className=\"select-currency\"\n                  as=\"select\"\n                  name=\"curency\"\n                  placeholder=\"Currency\"\n                >\n                  <option>USD</option>\n                </Field>\n              </div>\n            </div>\n            <ButtonGroup\n              width={90}\n              float={\"space-between\"}\n              mgTop={10}\n              gap={10}\n              mgBottom={10}\n            >\n              <Button\n                buttonType=\"secondary\"\n                justifyContent={\"center\"}\n                width={100}\n                height={36}\n                radius={\"0px\"}\n                label={\"Undo\"}\n                prefix={\n                  <FontAwesomeIcon icon={faUndo} style={{ color: \"white\" }} />\n                }\n              />\n              <Button\n                onClick={() => addProduct(values)}\n                buttonType=\"primary\"\n                justifyContent={\"center\"}\n                width={100}\n                height={36}\n                radius={\"0px\"}\n                label={\"Add\"}\n                prefix={\n                  <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n                }\n              />\n            </ButtonGroup>\n            <Modal\n              openModal={showMenuCategory}\n              title={\"Menu Category\"}\n              width={50}\n              height={500}\n              closeModal={() => {\n                setShowMenuCategory(false);\n              }}\n            >\n              <CategorySelector\n                save={() => setShowMenuCategory(false)}\n                selectedCategory={selectedMenu}\n                setSelectedCategory={setSelectedMenu}\n                list={menuCategory}\n                title={\"Select categories for menu (maximum: 3)\"}\n                required={1}\n              />\n            </Modal>\n            <Modal\n              openModal={showCreateMenu}\n              title={\"Add Menu Category\"}\n              width={50}\n              height={450}\n              closeModal={() => {\n                setShowCreateMenu(false);\n              }}\n            >\n              <AddMenuCategory\n                save={() => {\n                  setShowCreateMenu(false);\n                }}\n                list={props.menuCategory}\n                selectedCategory={selectedMenuCategory}\n                setSelectedCategory={setSelectedMenuCategory}\n                title={\"Select a menu category\"}\n                required={1}\n              />\n            </Modal>\n            <Modal\n              openModal={showMainFoodCategory}\n              title={\"Food Category\"}\n              width={50}\n              height={500}\n              closeModal={() => {\n                setShowMainFoodCategory(false);\n              }}\n            >\n              <CategorySelector\n                save={() => setShowMainFoodCategory(false)}\n                selectedCategory={selectedMainFood}\n                setSelectedCategory={setSelectedMainFood}\n                list={mainFoodCategory}\n                title={\"Select categories for foods (maximum: 3)\"}\n                required={1}\n              />\n            </Modal>\n            <Modal\n              openModal={showFoodCategory}\n              title={\"Food Specialty Category\"}\n              width={50}\n              height={500}\n              closeModal={() => {\n                setShowFoodCategory(false);\n              }}\n            >\n              <CategorySelector\n                save={() => setShowFoodCategory(false)}\n                selectedCategory={selectedFood}\n                setSelectedCategory={setSelectedFood}\n                list={filteredFoodCategory}\n                title={\"Select categories for food specialty (maximum: 3)\"}\n                required={3}\n              />\n            </Modal>\n            <Modal\n              openModal={showAdditionalOption}\n              title={\"Add Additional Options\"}\n              width={35}\n              height={520}\n              closeModal={() => {\n                setShowAdditionalOption(false);\n              }}\n            >\n              <AddAdditionalOption\n                title={\"Create options for your product\"}\n                additionalOption={additionalOption}\n                setAdditionalOption={setAdditionalOption}\n                setShowAdditionalOption={setShowAdditionalOption}\n              />\n            </Modal>\n            <Modal\n              openModal={showUpdateAdditionalOption}\n              title={\"Update Additional Options\"}\n              width={35}\n              height={520}\n              closeModal={() => {\n                setShowUpdateAdditionalOption(false);\n              }}\n            >\n              <UpdateAdditionalOption\n                title={\"Update your additional option\"}\n                additionalOption={additionalOption}\n                setAdditionalOption={setAdditionalOption}\n                setShowAdditionalOption={showUpdateAdditionalOption}\n                selectedOption={selectedOption}\n              />\n            </Modal>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nAddProduct.propTypes = {\n  user: PropTypes.object.isRequired,\n  provider: PropTypes.object.isRequired,\n  getCategoryAPI: PropTypes.func.isRequired,\n  getMenuCategoryAPI: PropTypes.func.isRequired,\n  addProductAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  provider: state.ProviderReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getCategoryAPI,\n    getMenuCategoryAPI,\n    addProductAPI,\n  })(AddProduct)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/AddressBookPanel.js",["1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Form, Field } from \"formik\";\nimport locations from \"assets/json_location/locations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faBuilding,\n  faAddressBook,\n  faDotCircle,\n  faUndo,\n  faPowerOff,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport axios from \"axios\";\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport {\n  setCurrentLocation,\n  addAddressAPI,\n  getAddressBookAPI,\n} from \"store/actions/UserAction/UserAction\";\n\nconst initialValues2 = {\n  address: \"\",\n  longitude: \"\",\n  latitude: \"\",\n  city: \"\",\n  district: \"\",\n  ward: \"\",\n  road: \"\",\n  type: 1,\n};\n\nfunction AddressBookPanel(props) {\n  //address\n  const { user, addAddressAPI, getAddressBookAPI } = props;\n  const selectedAddressType = {\n    border: \"1px solid #101010\",\n    backgroundColor: \"#f6f6f6\",\n  };\n  const [addressType, setAddressType] = useState(1);\n  const [latitude, setLatitude] = useState(10.768685473523648);\n  const [longitude, setLongitude] = useState(106.68057155417674);\n  const [viewport, setViewport] = useState({\n    width: \"100%\",\n    height: \"200px\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 12,\n  });\n  const [contact, setContact] = useState([]);\n  async function fetchAddressBook() {\n    var result = await getAddressBookAPI(user?.profile?.user_id);\n    console.log(result);\n    setContact(result);\n  }\n  useEffect(() => {\n    fetchAddressBook();\n  }, [user?.profile?.user_id]);\n  const getFullAddress = (road, city_id, district_id, ward_id) => {\n    const address = [];\n    locations\n      .filter((city) => city.code == city_id)\n      .map((selectedCity) => {\n        address.unshift(selectedCity.name);\n        selectedCity.districts\n          .filter((district) => district.code == district_id)\n          .map((selectedDistrict) => {\n            address.unshift(selectedDistrict.name);\n            selectedDistrict.wards\n              .filter((ward) => ward.code == ward_id)\n              .map((selectedWard) => {\n                address.unshift(selectedWard.name);\n              });\n          });\n      });\n    if (road) address.unshift(road);\n    return address.join(\", \");\n  };\n  const handleGeoCoding = (values) => {\n    const { road, city, district, ward } = values;\n    const address = getFullAddress(road, city, district, ward);\n    if (!address) return;\n    const endpoint = `https://api.geoapify.com/v1/geocode/search?text=${address}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n    async function fetchCoordinates(url) {\n      const result = await axios.get(url);\n      if (result.data?.features?.length !== 0) {\n        setLongitude(result.data.features[0]?.geometry?.coordinates[0]);\n        setLatitude(result.data.features[0]?.geometry?.coordinates[1]);\n        setViewport({\n          ...viewport,\n          latitude: result.data.features[0]?.geometry?.coordinates[1],\n          longitude: result.data.features[0]?.geometry?.coordinates[0],\n        });\n        return;\n      }\n    }\n    fetchCoordinates(endpoint);\n  };\n  return (\n    <Fragment>\n      <Modal\n        openModal={props.visible}\n        closeModal={() => {\n          props.setVisible(false);\n        }}\n        title={\"Address Book\"}\n        widthPX={810}\n        height={560}\n        padding=\"5px 10px\"\n        transparent=\"30%\"\n        hideHeader={true}\n      >\n        <Formik initialValues={initialValues2} validateOnChange={false}>\n          {(formikProps) => {\n            const { values, errors, touched } = formikProps;\n            const getPosition = () => {\n              return new Promise((res, rej) => {\n                navigator.geolocation.getCurrentPosition(res, rej);\n              });\n            };\n            const relocating = async (values) => {\n              var position = await getPosition();\n              const { latitude, longitude } = position.coords;\n              const endpoint = `https://api.geoapify.com/v1/geocode/reverse?lat=${latitude}&lon=${longitude}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n              let res = await axios.get(endpoint);\n              var address = \"\";\n              if (res.data) {\n                address = res.data?.features[0]?.properties?.formatted || \"\";\n              }\n              props.setCurrentLocation(latitude, longitude, address);\n            };\n            const handleGeoCoding = (values) => {\n              const { road, city, district, ward } = values;\n              const address = getFullAddress(road, city, district, ward);\n              if (!address) return;\n              const endpoint = `https://api.geoapify.com/v1/geocode/search?text=${address}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n              async function fetchCoordinates(url) {\n                const result = await axios.get(url);\n                if (result.data?.features?.length !== 0) {\n                  setLongitude(\n                    result.data.features[0]?.geometry?.coordinates[0]\n                  );\n                  setLatitude(\n                    result.data.features[0]?.geometry?.coordinates[1]\n                  );\n                  setViewport({\n                    ...viewport,\n                    latitude: result.data.features[0]?.geometry?.coordinates[1],\n                    longitude:\n                      result.data.features[0]?.geometry?.coordinates[0],\n                  });\n                  return;\n                }\n              }\n              fetchCoordinates(endpoint);\n            };\n            return (\n              <Form className=\"p-pd-content-wrapper\">\n                <Fragment>\n                  <div className=\"p-pd-general-profile-wrapper\">\n                    <div className=\"p-pd-general-profile-row\">\n                      <div className=\"p-pd-text-secondary\">\n                        <FontAwesomeIcon\n                          className=\"p-pd-address-icon\"\n                          icon={faDotCircle}\n                        />\n                        <span>{user.currentAddress.address}</span>\n                      </div>\n                    </div>\n                    {user.location.map((address, index) => (\n                      <div className=\"p-pd-general-profile-row\" key={index}>\n                        <div className=\"p-pd-text-secondary\">\n                          <FontAwesomeIcon\n                            className=\"p-pd-address-icon\"\n                            icon={\n                              address.type === 1\n                                ? faHome\n                                : address.type === 2\n                                ? faBuilding\n                                : faAddressBook\n                            }\n                          />\n                          <span>{address.address}</span>\n                        </div>\n                      </div>\n                    ))}\n                    <div className=\"p-pd-general-profile-row \">\n                      <span\n                        className=\"p-pd-b-gp-label\"\n                        style={{ width: \"10%\" }}\n                      >\n                        Location:\n                      </span>\n                      <Field\n                        className=\"p-pd-b-iu-input-general-select\"\n                        as=\"select\"\n                        style={{ width: \"30%\", height: \"35px\" }}\n                        name=\"city\"\n                      >\n                        <option value=\"\" disabled hidden>\n                          Select a city...\n                        </option>\n                        {locations.map((city) => (\n                          <option\n                            key={city.code}\n                            value={city.code}\n                            label={city.name}\n                          />\n                        ))}\n                      </Field>\n                      —\n                      <Field\n                        className=\"p-pd-b-iu-input-general-select\"\n                        as=\"select\"\n                        style={{ width: \"30%\", height: \"35px\" }}\n                        name=\"district\"\n                      >\n                        <option value=\"\" disabled hidden>\n                          Select a district...\n                        </option>\n                        {locations\n                          .filter((city) => city.code == values.city)\n                          .map((selectedCity) =>\n                            selectedCity.districts.map((district) => (\n                              <option\n                                key={district.code}\n                                value={district.code}\n                                label={district.name}\n                              />\n                            ))\n                          )}\n                      </Field>\n                      —\n                      <Field\n                        className=\"p-pd-b-iu-input-general-select\"\n                        style={{ width: \"30%\", height: \"35px\" }}\n                        as=\"select\"\n                        name=\"ward\"\n                      >\n                        <option value=\"\" disabled hidden>\n                          Select a ward...\n                        </option>\n                        {locations\n                          .filter((city) => city.code == values.city)\n                          .map((selectedCity) =>\n                            selectedCity.districts\n                              .filter(\n                                (district) => district.code == values.district\n                              )\n                              .map((selectedDistrict) =>\n                                selectedDistrict.wards.map((ward) => (\n                                  <option\n                                    key={ward.code}\n                                    value={ward.code}\n                                    label={ward.name}\n                                  />\n                                ))\n                              )\n                          )}\n                      </Field>\n                    </div>\n\n                    <div className=\"p-pd-general-profile-row\">\n                      <span\n                        className=\"p-pd-b-gp-label\"\n                        style={{ width: \"10%\" }}\n                      >\n                        Address:\n                      </span>\n                      <Field\n                        type=\"text\"\n                        name=\"road\"\n                        className=\"p-pd-b-iu-input-general\"\n                        placeholder={\"Road. Eg. 100A, St. Laurant Street\"}\n                        style={{ width: \"526px\" }}\n                      />\n                    </div>\n                    <div className=\"p-pd-general-profile-row\">\n                      <span\n                        className=\"p-pd-b-gp-label\"\n                        style={{ width: \"10%\" }}\n                      >\n                        Type:\n                      </span>\n                      <div\n                        className=\"p-pd-a-item\"\n                        onClick={() => setAddressType(1)}\n                        style={addressType === 1 ? selectedAddressType : {}}\n                      >\n                        <div className=\"p-pd-a-image-wrapper\">\n                          <FontAwesomeIcon\n                            icon={faHome}\n                            className=\"p-pd-a-icon\"\n                          />\n                        </div>\n                        <span className=\"p-pd-a-label-radio\">House</span>\n                      </div>\n                      <div\n                        className=\"p-pd-a-item\"\n                        onClick={() => setAddressType(2)}\n                        style={addressType === 2 ? selectedAddressType : {}}\n                      >\n                        <div className=\"p-pd-a-image-wrapper\">\n                          <FontAwesomeIcon\n                            icon={faBuilding}\n                            className=\"p-pd-a-icon\"\n                          />\n                        </div>\n                        <span className=\"p-pd-a-label-radio\">Workplace</span>\n                      </div>\n                      <div\n                        className=\"p-pd-a-item\"\n                        onClick={() => setAddressType(3)}\n                        style={addressType === 3 ? selectedAddressType : {}}\n                      >\n                        <div className=\"p-pd-a-image-wrapper\">\n                          <FontAwesomeIcon\n                            icon={faAddressBook}\n                            className=\"p-pd-a-icon\"\n                          />\n                        </div>\n                        <span className=\"p-pd-a-label-radio\">Other</span>\n                      </div>\n                    </div>\n                    <ButtonGroup gap={5} mgTop={5} mgBottom={5}>\n                      <Button\n                        width={140}\n                        height={25}\n                        fontSize={12}\n                        color={\"black\"}\n                        marginTop={20}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label=\"Check on map\"\n                        prefix={\n                          <FontAwesomeIcon\n                            className=\"button-icon\"\n                            icon={faMapMarkedAlt}\n                          />\n                        }\n                        onClick={() => {\n                          handleGeoCoding(values);\n                        }}\n                      />\n                      <Button\n                        width={120}\n                        height={25}\n                        fontSize={12}\n                        color={\"black\"}\n                        marginTop={20}\n                        gap={10}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label=\"Relocating\"\n                        prefix={\n                          <FontAwesomeIcon\n                            className=\"button-icon\"\n                            icon={faPowerOff}\n                          />\n                        }\n                        onClick={() => relocating()}\n                      />\n                    </ButtonGroup>\n                    <div className=\"p-pd-general-profile-row\">\n                      <ReactMapGl\n                        transitionDuration={1000}\n                        {...viewport}\n                        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                        onViewportChange={(viewport) => setViewport(viewport)}\n                        mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n                      >\n                        <Marker\n                          latitude={latitude}\n                          longitude={longitude}\n                          offsetLeft={-20}\n                          offsetTop={-30}\n                        >\n                          <img\n                            alt=\"marker\"\n                            style={{ height: 30, width: 30 }}\n                            src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n                          />\n                        </Marker>\n                      </ReactMapGl>\n                    </div>\n                  </div>\n                  <ButtonGroup mgTop={5} float=\"center\" mgBottom={15}>\n                    <Button\n                      color={\"white\"}\n                      bgColor={\"#101010\"}\n                      justifyContent={\"center\"}\n                      gap={\"10px\"}\n                      width={120}\n                      height={35}\n                      label={\"Update\"}\n                    />\n                  </ButtonGroup>\n                </Fragment>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Modal>\n    </Fragment>\n  );\n}\n\nAddressBookPanel.propTypes = {\n  user: PropTypes.object.isRequired,\n  getAddressBookAPI: PropTypes.func.isRequired,\n  setCurrentLocation: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n});\nexport default withRouter(\n  connect(mapStateToProps, { getAddressBookAPI, setCurrentLocation })(\n    AddressBookPanel\n  )\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDOrder/data/orderListData.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/SlideShow/SlideShow.js",["1459","1460","1461"],"import React, { useState, useEffect } from \"react\";\nimport Fragment from \"react\";\nimport \"./SlideShow.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faPhone,\n  faStar,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nfunction SlideShow({ images = [], interval = 8000 }) {\n  const [thumbnails, setThumnails] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [contentSlideInfo, setContentSlideInfo] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [nextSlideStyle, setNextSlideStyle] = useState({\n    slide1: { backgroundImage: \"url('\" + images[0] + \"')\" },\n    slide2: { backgroundImage: \"url('\" + images[1] + \"')\" },\n    slide3: { backgroundImage: \"url('\" + images[2] + \"')\" },\n    slide4: { backgroundImage: \"url('\" + images[3] + \"')\" },\n  });\n  const [currentSlideStyle, setCurrentSlideStyle] = useState({\n    backgroundImage: \"url('\" + images[0] + \"')\",\n  });\n  useEffect(() => {\n    setThumnails(images);\n    setContentSlideInfo({\n      ...contentSlideInfo,\n      title: \"Tastie Delivery\",\n      content:\n        \"Tasite is an order and delivery management platform that instantly connects customers with your storefront. Built on the power of Tastie's network, we help merchants grow sales, reach more customers, and build their online brand.\",\n    });\n    setCurrentSlideStyle({\n      backgroundImage: \"url('\" + images[currentSlide] + \"')\",\n    });\n    const loop = setInterval(() => {\n      if (currentSlide === images.length - 1) {\n        setCurrentSlide(0);\n      } else {\n        setCurrentSlide(currentSlide + 1);\n      }\n    }, interval);\n    return () => clearInterval(loop);\n  }, [images, currentSlide, interval]);\n\n  function previous() {\n    if (currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    } else {\n      setCurrentSlide(thumbnails.length - 1);\n    }\n  }\n\n  function next() {\n    if (currentSlide === thumbnails.length - 1) {\n      setCurrentSlide(0);\n    } else {\n      setCurrentSlide(currentSlide + 1);\n    }\n  }\n  //<span className=\"slideshow-header\">Bring a smile to your meal!</span>\n  return (\n    <>\n      <div className=\"slideshow-wrapper\">\n        <section className=\"slideshow\">\n          <span className=\"slide-name\">\n            <FontAwesomeIcon className=\"slide-name-icon\" icon={faStar} />\n            Tastie Delivery\n          </span>\n          <div className=\"slide-holder\">\n            <section className=\"slide current-slide\">\n              <div style={currentSlideStyle} className=\"slide-thumbnail\"></div>\n\n              <div className=\"slide-description\">{contentSlideInfo.title}</div>\n            </section>\n            <div className=\"sub-slide-wrapper\">\n              <FontAwesomeIcon\n                onClick={previous}\n                className=\"slide-controller-icon-left prev-slide\"\n                icon={faChevronLeft}\n              />\n              <FontAwesomeIcon\n                onClick={next}\n                className=\"slide-controller-icon-right next-slide\"\n                icon={faChevronRight}\n              />\n            </div>\n          </div>\n          <div className=\"slide-content-wrapper\">\n            <div className=\"slide-content\">{contentSlideInfo.content}</div>\n            <button className=\"btn-order\">\n              <FontAwesomeIcon className=\"icon-order\" icon={faPhone} />\n              Explore now\n            </button>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default SlideShow;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/SignUpForm.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductForMenu.js",["1462","1463","1464"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPercentage, faTrashAlt } from \"@fortawesome/fontawesome-free-solid\";\nimport React from \"react\";\nimport { Fragment, useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Modal from \"components/Commons/Overlay/Popup/Modal/Modal\";\nimport {\n  removeProductAPI,\n  getProductListAPI,\n} from \"store/actions/ProductAction/ProductAction\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport { applyDiscountProviderAPI } from \"store/actions/ProviderAction/ProviderAction\";\nimport \"style/Common.scss\";\n\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n});\n\nfunction ProductForMenu(props) {\n  const { selectedProduct, discounts } = props;\n  const [productInDiscount, setProductInDiscount] = useState({});\n  const [selectedDiscount, setSelectedDiscount] = useState(\n    discounts[0]?.discount_id\n  );\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [showDiscount, setShowDiscount] = useState(false);\n  const [productIdForDelete, setProductIdForDelete] = useState(-1);\n  const showDialogForDelete = (e, productId) => {\n    e.stopPropagation();\n    setProductIdForDelete(productId);\n    setShowDeleteDialog(true);\n  };\n  const applyDiscount = async (productId, discountId) => {\n    console.log(productId, discountId);\n    const res = await props.applyDiscountProviderAPI(productId, discountId);\n    console.log(res);\n    if (res) {\n      setShowDiscount(false);\n    }\n  };\n  const removeProduct = async (productId) => {\n    if (productId === -1 || !productId) return;\n    const { product, user } = props;\n    const status = await props.removeProductAPI(productId);\n    if (status) {\n      if (user.provider_id !== -1 && user.provider_id !== null) {\n        const productList = await props.getProductListAPI(user.provider_id);\n        console.log(productList);\n        props.setShowHandlerPanel(0);\n        props.setSelectedProduct([]);\n        props.setProductForEdit();\n        props.setItems(productList);\n      }\n    }\n    setShowDeleteDialog(false);\n  };\n\n  return (\n    <Droppable\n      droppableId={String(props.type)}\n      type={`droppableSubItem-${props.type}`}\n    >\n      {(provided, snapshot) => (\n        <div\n          className=\"menu-product-wrapper\"\n          ref={provided.innerRef}\n          style={getListStyle(snapshot.isDraggingOver)}\n        >\n          <DialogBox\n            visibility={showDeleteDialog}\n            headerText={\"Delete\"}\n            close={() => setShowDeleteDialog(false)}\n          >\n            <div className=\"dialog-detail-wrapper\">\n              <div className=\"dialogbox-content\">\n                <span className=\"dialogbox-content-detail-main\">\n                  Are you sure you want to delete this product?\n                </span>\n                <span className=\"dialogbox-content-detail-sub\">\n                  This product will be deleted immediately. You can't undo this\n                  action.\n                </span>\n              </div>\n              <div className=\"dialogbox-action\">\n                <ButtonGroup gap={5} mgRight={5}>\n                  <Button\n                    color={\"black\"}\n                    bgColor={\"#ECECEC\"}\n                    justifyContent={\"center\"}\n                    gap={\"10px\"}\n                    width={80}\n                    height={30}\n                    label={\"Cancel\"}\n                    onClick={() => {\n                      setShowDeleteDialog(false);\n                    }}\n                  />\n                  <Button\n                    color={\"white\"}\n                    bgColor={\"#800000\"}\n                    justifyContent={\"center\"}\n                    gap={\"10px\"}\n                    width={80}\n                    height={30}\n                    label={\"Delete\"}\n                    onClick={() => removeProduct(productIdForDelete)}\n                  />\n                </ButtonGroup>\n              </div>\n            </div>\n          </DialogBox>\n          {props.subItems.map((item, index) => (\n            <Draggable\n              key={String(item.product_id)}\n              draggableId={String(item.product_id)}\n              index={index}\n            >\n              {(provided, snapshot) => (\n                <div\n                  className=\"menu-table-wrapper\"\n                  onClick={() => {\n                    props.setShowHandlerPanel(1);\n                    props.setSelectedProduct([item.product_id, props.type]);\n                  }}\n                  style={{\n                    backgroundColor:\n                      selectedProduct[0] === item.product_id\n                        ? \"#E4E4E4\"\n                        : \"white\",\n                  }}\n                >\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    className=\"menu-product-item\"\n                    {...provided.dragHandleProps}\n                  >\n                    <div className=\"menu-product-img\">\n                      <img alt=\"product_image\" src={item.product_image} />\n                    </div>\n                    <span className=\"menu-product-name\">\n                      {item.product_name}\n                    </span>\n                    <span className=\"menu-product-description\">\n                      {item.description}\n                    </span>\n                    <span className=\"menu-product-price\">\n                      &#36; {item.price?.toFixed(2)}\n                    </span>\n                    <div className=\"menu-product-price\">\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faTrashAlt}\n                        onClick={(e) => showDialogForDelete(e, item.product_id)}\n                        style={{ marginRight: \"10px\" }}\n                      />\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faPercentage}\n                        onClick={() => {\n                          setProductInDiscount(item);\n                          setShowDiscount(true);\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n          <Modal\n            openModal={showDiscount}\n            title={\"Pick-up restaurant location\"}\n            width={30}\n            height={450}\n            heightAuto={true}\n            transparent={0.2}\n            closeModal={() => {\n              setShowDiscount(false);\n            }}\n          >\n            <Fragment>\n              <span className=\"menu-product-name\">\n                Product name: {productInDiscount.product_name}\n              </span>\n              <div className=\"product-table\">\n                <table className=\"table table-wrapper\">\n                  <tbody className=\"text-capitalize\">\n                    <tr className=\"table-row-wrapper\">\n                      <th\n                        style={{ backgroundColor: \"#790000\", color: \"white\" }}\n                      >\n                        Discount name\n                      </th>\n                      <th\n                        style={{ backgroundColor: \"#790000\", color: \"white\" }}\n                      >\n                        Value\n                      </th>\n                      <th\n                        style={{ backgroundColor: \"#790000\", color: \"white\" }}\n                      >\n                        Remaining\n                      </th>\n                      <th\n                        style={{ backgroundColor: \"#790000\", color: \"white\" }}\n                      >\n                        Expire at\n                      </th>\n                    </tr>\n                    {discounts?.map((d, index) => (\n                      <tr\n                        className=\"table-row-wrapper\"\n                        style={\n                          selectedDiscount === d.discount_id\n                            ? {\n                                backgroundColor: \"#F5F5F5\",\n                                cursor: \"pointer\",\n                                fontWeight: 700,\n                              }\n                            : { cursor: \"pointer\" }\n                        }\n                        onClick={() => {\n                          setSelectedDiscount(d.discount_id);\n                        }}\n                        key={index}\n                      >\n                        <td>{d.discount_name}</td>\n                        <td>{d.discount_value?.toFixed(1) * 100}%</td>\n                        <td>{d.limited_offer || \"—\"}</td>\n                        <td\n                          style={{\n                            textAlign: \"center\",\n                            width: \"30%\",\n                          }}\n                        >\n                          {new Date(d.expire_at).toLocaleDateString() || \"—\"}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              <ButtonGroup width={100} mgTop={10} float=\"center\" mgBottom={15}>\n                <Button\n                  color={\"white\"}\n                  bgColor={\"#101010\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={120}\n                  height={35}\n                  label={\"Apply Discount\"}\n                  onClick={() =>\n                    applyDiscount(\n                      productInDiscount.product_id,\n                      selectedDiscount\n                    )\n                  }\n                />\n              </ButtonGroup>\n            </Fragment>\n          </Modal>\n        </div>\n      )}\n    </Droppable>\n  );\n}\n\nProductForMenu.propTypes = {\n  removeProductAPI: PropTypes.func.isRequired,\n  getProductListAPI: PropTypes.func.isRequired,\n  applyDiscountProviderAPI: PropTypes.func.isRequired,\n  setDialogBox: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    removeProductAPI,\n    getProductListAPI,\n    applyDiscountProviderAPI,\n    setDialogBox,\n  })(ProductForMenu)\n);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/SelectMenuCategory.js",["1465","1466","1467","1468","1469"],"import { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faCheck } from \"@fortawesome/fontawesome-free-solid\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport Checkbox from \"react-custom-checkbox\";\n\nimport \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\n\n\nfunction SelectMenuCategory(props) {\n  const [categoryList, setCategoryList] = useState(props.list);\n  return (\n    <Fragment>\n      <div className=\"category-selection-wrapper\">\n        <span className=\"category-selection-title\">{props.title}</span>\n        <div className=\"option-container\">\n          {categoryList.map((category) => (\n            <div className=\"option-row\" key={category.category_id}>\n              <Checkbox\n                checked={\n                  props.selectedCategory.indexOf(category.category_id) !== -1\n                    ? true\n                    : false\n                }\n                disabled={\n                  props.selectedCategory.length < props.required ||\n                  props.selectedCategory.indexOf(category.category_id) !== -1\n                    ? false\n                    : true\n                }\n                icon={\n                  <div className=\"check-icon\">\n                    <FontAwesomeIcon\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"#2c2c2c\",\n                      }}\n                      icon={faCheck}\n                    />\n                  </div>\n                }\n                size={20}\n                borderColor={\"#ffffff\"}\n                borderRadius={5}\n                name=\"category\"\n                onChange={(value) => {\n                  if (value) {\n                    props.setSelectedCategory([\n                      ...props.selectedCategory,\n                      category.category_id,\n                    ]);\n                    return;\n                  } else {\n                    let index = props.selectedCategory.indexOf(\n                      category.category_id\n                    );\n                    if (index != -1) {\n                      var array = [...props.selectedCategory];\n                      array.splice(index, 1);\n                      props.setSelectedCategory(array);\n                    }\n                  }\n                }}\n                style={{\n                  backgroundColor: \"white\",\n                  cursor: \"pointer\",\n                  border: \"none\",\n                }}\n                labelStyle={{\n                  fontSize: \"13px\",\n                  fontWeight: \"500\",\n                  color: \"#2e2e2e\",\n                  marginLeft: 15,\n                  userSelect: \"none\",\n                }}\n                label={category.category_name}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <ButtonGroup float={\"flex-end\"} direction={\"row\"} gap={20} mgTop={25}>\n        <Button\n          label=\"Cancel\"\n          buttonType=\"secondary\"\n          onClick={props.close}\n          width={100}\n        />\n        <Button\n          onClick={props.save}\n          label=\"Save\"\n          buttonType=\"primary\"\n          width={100}\n        />\n      </ButtonGroup>\n    </Fragment>\n  );\n}\n\nexport default SelectMenuCategory;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddMenuCategory.js",["1470","1471","1472","1473","1474","1475"],"import { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faCheck } from \"@fortawesome/fontawesome-free-solid\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport Checkbox from \"react-custom-checkbox\";\n\nimport \"components/MerchantRegistration/Forms/DetailMerchantForm/CategorySelector/CategorySelector.scss\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\n\nimport { faCommentsDollar } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction AddMenuCategory(props) {\n  const [categoryList, setCategoryList] = useState(props.list);\n  return (\n    <Fragment>\n      <div className=\"category-selection-wrapper\">\n        <span className=\"category-selection-title\">{props.title}</span>\n        <div className=\"option-container\">\n          {categoryList?.map((category) => (\n            <div className=\"option-row\" key={category.menu_category_id}>\n              <Checkbox\n                checked={\n                  props.selectedCategory.indexOf(category.menu_category_id) !==\n                  -1\n                    ? true\n                    : false\n                }\n                disabled={\n                  props.selectedCategory.length < props.required ||\n                  props.selectedCategory.indexOf(category.menu_category_id) !==\n                    -1\n                    ? false\n                    : true\n                }\n                icon={\n                  <div className=\"check-icon\">\n                    <FontAwesomeIcon\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"#2c2c2c\",\n                      }}\n                      icon={faCheck}\n                    />\n                  </div>\n                }\n                size={20}\n                borderColor={\"#ffffff\"}\n                borderRadius={5}\n                name=\"category\"\n                onChange={(value) => {\n                  if (value) {\n                    props.setSelectedCategory([\n                      ...props.selectedCategory,\n                      category.menu_category_id,\n                    ]);\n                    return;\n                  } else {\n                    let index = props.selectedCategory.indexOf(\n                      category.menu_category_id\n                    );\n                    if (index != -1) {\n                      var array = [...props.selectedCategory];\n                      array.splice(index, 1);\n                      props.setSelectedCategory(array);\n                    }\n                  }\n                }}\n                style={{\n                  backgroundColor: \"white\",\n                  cursor: \"pointer\",\n                  border: \"none\",\n                }}\n                labelStyle={{\n                  fontSize: \"13px\",\n                  fontWeight: \"500\",\n                  color: \"#2e2e2e\",\n                  marginLeft: 15,\n                  userSelect: \"none\",\n                }}\n                label={category.menu_category_name}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <ButtonGroup float={\"flex-end\"} direction={\"row\"} gap={20} mgTop={25}>\n        <Button\n          label=\"Cancel\"\n          buttonType=\"secondary\"\n          onClick={props.close}\n          width={100}\n        />\n        <Button\n          onClick={props.save}\n          label=\"Save\"\n          buttonType=\"primary\"\n          width={100}\n        />\n      </ButtonGroup>\n    </Fragment>\n  );\n}\n\nexport default AddMenuCategory;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/RegisterStep.js",["1476","1477","1478"],"import React, { Fragment } from \"react\";\nimport \"./RegisterStep.scss\";\nimport Arrow from \"../../../assets/arrow.png\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nfunction RegisterStep({ registerState }) {\n  return (\n    <Fragment>\n      <div className=\"register-step-wrapper\">\n        <div className=\"step-wrapper\">\n          <div className={registerState.styling[0]}>1</div>\n          <span className=\"step-detail-description\">Account registration</span>\n        </div>\n        <img className=\"step-arrow\" src={Arrow} />\n        <div className=\"step-wrapper\">\n          <div className={registerState.styling[1]}>2</div>\n          <span className=\"step-detail-description\">Email Verification</span>\n        </div>\n        <img className=\"step-arrow\" src={Arrow} />\n        <div className=\"step-wrapper\">\n          <div className={registerState.styling[2]}>3</div>\n          <span className=\"step-detail-description\">Profile Completion</span>\n        </div>\n        <img className=\"step-arrow\" src={Arrow} />\n        <div className=\"step-wrapper\">\n          <div className={registerState.styling[3]}>4</div>\n          <span className=\"step-detail-description\">Select preference</span>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nRegisterStep.propTypes = {\n  registerState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  registerState: state.UserReducer,\n});\nexport default connect(mapStateToProps)(RegisterStep);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/EmailVerification.js",["1479","1480","1481","1482","1483","1484","1485"],"import React, { useState, useEffect } from \"react\";\n//scss\nimport \"./EmailVerification.scss\";\nimport \"style/Common.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserCheck,\n  faEnvelope,\n  faChevronRight,\n  faPencilAlt,\n} from \"@fortawesome/fontawesome-free-solid\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  updateStepStyling,\n  mapRegistrationForm,\n  accountRegistrationAPI,\n  sendEmailVerificationCodeAPI,\n  checkEmailVerificationCodeAPI,\n} from \"store/actions/UserAction/UserAction\";\nimport { setDialogBox } from \"store/actions/UIComponentAction/DialogBoxAction\";\n\nfunction EmailVerification(props) {\n  useEffect(() => {\n    async function sendVerifiedEmailCode() {\n      return await props.sendEmailVerificationCodeAPI(\n        props.submittedFormData.formData.email\n      );\n    }\n    sendVerifiedEmailCode();\n  }, []);\n  const [enableVerifyButton, setEnableVerifyButton] = useState(false);\n  const [email, setEmail] = useState(props.submittedFormData.email);\n  const [verifiedCode, setVerifiedcode] = useState({ digits: \"xxxxxx\" });\n  const [changeEmailDialog, setChangeEmailDialog] = useState(false);\n\n  const collectVerifyDigits = (e) => {\n    e.target.value = !isNaN(e.target.value) ? e.target.value : \"\";\n    verifiedCode.digits =\n      verifiedCode.digits.substr(0, parseInt(e.target.name)) +\n      e.target.value +\n      verifiedCode.digits.substr(parseInt(e.target.name) + 1);\n  };\n\n  const onSubmitEmailVerification = async (e) => {\n    e.preventDefault();\n    const email = props.submittedFormData.formData.email;\n    const verifyEmailToken =\n      props.submittedFormData.verifiedEmailToken ||\n      localStorage.getItem(\"verified_email_token\") ||\n      \"\";\n    const code = verifiedCode.digits;\n    const formData = {\n      email,\n      verifyEmailToken,\n      code,\n    };\n    const result = await props.checkEmailVerificationCodeAPI(formData);\n    if (result) {\n      await props.accountRegistrationAPI(props.submittedFormData.formData);\n    }\n  };\n\n  return (\n    <div className=\"verify-email-section\">\n      <div className=\"form-title-wrapper\">\n        <FontAwesomeIcon className=\"form-icon\" icon={faUserCheck} />\n        <span className=\"form-title\">Email Verification</span>\n      </div>\n      <span className=\"verify-code-description\">\n        A verification code was sent to your gmail.\n      </span>\n      <span className=\"verify-code-description\">\n        {\" \"}\n        Please enter the 6-digit code already sent to your email{\" \"}\n        <strong>{props.submittedFormData.email}</strong>{\" \"}\n        <FontAwesomeIcon\n          className=\"change-email-icon\"\n          icon={faPencilAlt}\n          onClick={() => setChangeEmailDialog((prev) => !prev)}\n        />\n      </span>\n\n      {changeEmailDialog ? (\n        <>\n          <div className=\"sign-up-email-wrapper\">\n            <div className=\"label-sign-up form-label\" style={{ width: \"15%\" }}>\n              Email\n            </div>\n            <input\n              style={{ width: \"60%\", height: \"30px\" }}\n              className=\"sign-up-email form-text-field\"\n              type=\"text\"\n              name=\"email\"\n              value={props.submittedFormData.email}\n              placeholder=\"Email\"\n              required\n            />\n            <button style={{ width: \"25%\" }} className=\"sub-square-button\">\n              Update\n            </button>\n          </div>\n        </>\n      ) : (\n        <span></span>\n      )}\n\n      <div className=\"verify-code-wrapper\">\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"0\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"1\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"2\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"3\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"4\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"verify-code-digit-wrapper\">\n          <input\n            name=\"5\"\n            type=\"text\"\n            className=\"numeric verify-digit-box\"\n            maxLength={1}\n            onChange={(e) => collectVerifyDigits(e)}\n            autoComplete=\"off\"\n          />\n        </div>\n      </div>\n\n      <div className=\"resend-section\">\n        <FontAwesomeIcon className=\"resend-code-icon\" icon={faEnvelope} />\n        <div className=\"resend-verify-code\">\n          <a>Resend verify code</a>\n        </div>\n      </div>\n\n      <div className=\"btn-form-wrapper\">\n        <button\n          className=\"btn-form btn-verification-position\"\n          onClick={(e) => onSubmitEmailVerification(e)}\n        >\n          <div className=\"none-icon\"></div>\n          Verify Email\n          <FontAwesomeIcon className=\"chevron-icon\" icon={faChevronRight} />\n        </button>\n      </div>\n    </div>\n  );\n}\nEmailVerification.propTypes = {\n  updateStepStyling: PropTypes.func.isRequired,\n  mapRegistrationForm: PropTypes.func.isRequired,\n  accountRegistrationAPI: PropTypes.func.isRequired,\n  sendEmailVerificationCodeAPI: PropTypes.func.isRequired,\n  submittedFormData: PropTypes.object.isRequired,\n  setDialogBox: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  submittedFormData: state.UserReducer,\n});\nexport default connect(mapStateToProps, {\n  mapRegistrationForm,\n  updateStepStyling,\n  accountRegistrationAPI,\n  sendEmailVerificationCodeAPI,\n  checkEmailVerificationCodeAPI,\n  setDialogBox,\n})(EmailVerification);\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/DetailSignUpForm1.js",["1486","1487","1488","1489"],"import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Formik, ErrorMessage, Form, Field } from \"formik\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faChevronRight,\n  faExclamationCircle,\n  faCheckCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport { validateSignUpForm1 } from \"utils/FormUtils/FormValidate\";\n//scss\nimport \"./DetailSignUpForm.scss\";\nimport \"style/Common.scss\";\n//store\nimport {\n  updateStepStyling,\n  updateRegistrationFormData,\n  mapRegistrationForm,\n  checkDuplicationAPI,\n} from \"store/actions/UserAction/UserAction\";\n//components\nimport FormError from \"components/Commons/ErrorHandlers/FormError/FormError\";\n\nfunction DetailSignUpForm1(props) {\n  const initialValues = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password1: \"\",\n    password2: \"\",\n  };\n\n  const handleSubmitForm = (values) => {\n    const formData = {\n      first_name: values.firstname,\n      last_name: values.lastname,\n      email: values.email,\n      phone: values.phone,\n      password: values.password1,\n    };\n    props.updateRegistrationFormData(formData);\n    const { email, phone } = formData;\n    props.checkDuplicationAPI(email, phone);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validateSignUpForm1}\n      onSubmit={(values) => handleSubmitForm(values)}\n    >\n      {(formikProps) => {\n        const { values, errors, touched } = formikProps;\n        return (\n          <Form className=\"sign-up-form-input-wrapper\">\n            <div className=\"form-title-wrapper\">\n              <FontAwesomeIcon className=\"form-icon\" icon={faUser} />\n              <span className=\"form-title\">Account Registration</span>\n            </div>\n            <div className=\"sign-up-fullname-wrapper\">\n              <div className=\"label-sign-up form-label\">Full name</div>\n              <div className=\"fullname-wrapper\">\n                <Field\n                  className={\n                    touched.firstname\n                      ? `sign-up-firstname form-text-field ${\n                          errors.firstname ? \"error\" : \"resolved\"\n                        }`\n                      : \"sign-up-firstname form-text-field\"\n                  }\n                  type=\"text\"\n                  name=\"firstname\"\n                  placeholder=\"First Name\"\n                  maxLength={50}\n                  autoComplete=\"on\"\n                />\n                {errors.firstname && touched.firstname && (\n                  <FontAwesomeIcon\n                    style={{ color: \"#c74b4b\" }}\n                    className=\"alert-icon alert-icon-position-type0\"\n                    icon={faExclamationCircle}\n                  />\n                )}\n\n                {!errors.firstname && touched.firstname ? (\n                  <FontAwesomeIcon\n                    style={{ color: \"#00683d\" }}\n                    className=\"alert-icon alert-icon-position-type0\"\n                    icon={faCheckCircle}\n                  />\n                ) : null}\n                <Field\n                  className={\n                    touched.lastname\n                      ? `sign-up-lastname form-text-field ${\n                          errors.lastname ? \"error\" : \"resolved\"\n                        }`\n                      : \"sign-up-lastname form-text-field\"\n                  }\n                  type=\"text\"\n                  name=\"lastname\"\n                  placeholder={\"Last Name\"}\n                  maxLength={50}\n                  autoComplete=\"on\"\n                />\n\n                {errors.lastname && touched.lastname && (\n                  <FontAwesomeIcon\n                    style={{ color: \"#c74b4b\" }}\n                    className=\"alert-icon alert-icon-position-type1\"\n                    icon={faExclamationCircle}\n                  />\n                )}\n                {!errors.lastname && touched.lastname ? (\n                  <FontAwesomeIcon\n                    style={{ color: \"#00683d\" }}\n                    className=\"alert-icon alert-icon-position-type1\"\n                    icon={faCheckCircle}\n                  />\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n            <FormError\n              err={\n                (errors.firstname || errors.lastname) &&\n                (touched.firstname || touched.lastname)\n                  ? errors.firstname\n                  : \"\"\n              }\n              align=\"left\"\n              margin=\"0% 0% 0% 22%\"\n              spaceBetween={4}\n            />\n            {touched.firstname}\n            <div className=\"sign-up-email-wrapper\">\n              <div className=\"label-sign-up form-label\">Email</div>\n              <Field\n                className={\n                  touched.email\n                    ? `sign-up-email form-text-field ${\n                        errors.email ? \"error\" : \"resolved\"\n                      }`\n                    : \"sign-up-email form-text-field\"\n                }\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                maxLength={50}\n                autoComplete=\"on\"\n              />\n\n              {errors.email && touched.email && (\n                <FontAwesomeIcon\n                  style={{ color: \"#c74b4b\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faExclamationCircle}\n                />\n              )}\n              {!errors.email && touched.email ? (\n                <FontAwesomeIcon\n                  style={{ color: \"#00683d\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faCheckCircle}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n            <FormError\n              err={errors.email && touched.email ? errors.email : \"\"}\n              align=\"left\"\n              margin=\"0% 0% 0% 22%\"\n              spaceBetween={4}\n            />\n            <div className=\"sign-up-phonenumber-wrapper\">\n              <div className=\"label-sign-up form-label\">Phone number</div>\n              <Field\n                className={\n                  touched.phone\n                    ? `sign-up-phonenumber form-text-field ${\n                        errors.phone ? \"error\" : \"resolved\"\n                      }`\n                    : \"sign-up-phonenumber form-text-field\"\n                }\n                type=\"tel\"\n                name=\"phone\"\n                // value={phone}\n                // onChange={(e) => onChangeRegistrationForm(e)}\n                placeholder={\n                  errors.phone && touched.phone ? errors.phone : \"Mobile number\"\n                }\n                maxLength={15}\n                autoComplete=\"on\"\n              />\n\n              {errors.phone && touched.phone && (\n                <FontAwesomeIcon\n                  style={{ color: \"#c74b4b\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faExclamationCircle}\n                />\n              )}\n              {!errors.phone && touched.phone ? (\n                <FontAwesomeIcon\n                  style={{ color: \"#00683d\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faCheckCircle}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n            <FormError\n              err={errors.phone && touched.phone ? errors.phone : \"\"}\n              align=\"left\"\n              margin=\"0% 0% 0% 22%\"\n              spaceBetween={4}\n            />\n            <div className=\"password-wrapper\">\n              <div className=\"label-sign-up form-label\">Password</div>\n              <Field\n                className={\n                  touched.password1\n                    ? `sign-up-password form-text-field ${\n                        errors.password1 ? \"error\" : \"resolved\"\n                      }`\n                    : \"sign-up-password form-text-field\"\n                }\n                type=\"password\"\n                name=\"password1\"\n                placeholder=\"Password\"\n                maxLength={50}\n                autoComplete=\"on\"\n              />\n\n              {errors.password1 && touched.password1 && (\n                <FontAwesomeIcon\n                  style={{ color: \"#c74b4b\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faExclamationCircle}\n                />\n              )}\n              {!errors.password1 && touched.password1 ? (\n                <FontAwesomeIcon\n                  style={{ color: \"#00683d\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faCheckCircle}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n            <FormError\n              err={\n                errors.password1 && touched.password1 ? errors.password1 : \"\"\n              }\n              align=\"left\"\n              margin=\"0% 0% 0% 22%\"\n              spaceBetween={4}\n            />\n            <div className=\"password-recheck-wrapper\">\n              <div className=\"label-sign-up form-label\">Re-enter Password</div>\n              <Field\n                className={\n                  touched.password2\n                    ? `sign-up-password-recheck form-text-field ${\n                        errors.password2 ? \"error\" : \"resolved\"\n                      }`\n                    : \"sign-up-password-recheck form-text-field\"\n                }\n                type=\"password\"\n                name=\"password2\"\n                // value={password2}\n                // onChange={(e) => onChangeRegistrationForm(e)}\n                placeholder=\"Re-enter password\"\n                maxLength={50}\n                autoComplete=\"on\"\n              />\n\n              {errors.password2 && touched.password2 && (\n                <FontAwesomeIcon\n                  style={{ color: \"#c74b4b\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faExclamationCircle}\n                />\n              )}\n              {!errors.password2 && touched.password2 ? (\n                <FontAwesomeIcon\n                  style={{ color: \"#00683d\" }}\n                  className=\"alert-icon alert-icon-position-type2\"\n                  icon={faCheckCircle}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n            <FormError\n              err={\n                errors.password2 && touched.password2 ? errors.password2 : \"\"\n              }\n              align=\"left\"\n              margin=\"0% 0% 0% 22%\"\n              spaceBetween={4}\n            />\n            <br />\n            <div className=\"policy-check\">\n              Delitaste may use your phone number to call or send text messages\n              with information regarding your account.\n            </div>\n            <div className=\"policy-check\">\n              By clicking Sign Up, you are indicating that you have read and\n              acknowledge the <a className=\"policy-link\">Terms of Service</a>{\" \"}\n              and <a className=\"policy-link\">Privacy Notice</a>.\n            </div>\n            <br />\n            <div className=\"btn-form-wrapper\">\n              <button className=\"btn-form btn-sign-up-position\" type=\"submit\">\n                <div className=\"none-icon\"></div>\n                Sign Up\n                <FontAwesomeIcon\n                  className=\"chevron-icon\"\n                  icon={faChevronRight}\n                />\n              </button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nDetailSignUpForm1.propTypes = {\n  updateStepStyling: PropTypes.func.isRequired,\n  updateRegistrationFormData: PropTypes.func.isRequired,\n  mapRegistrationForm: PropTypes.func.isRequired,\n  checkDuplicationAPI: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n  updateStepStyling,\n  updateRegistrationFormData,\n  mapRegistrationForm,\n  checkDuplicationAPI,\n})(DetailSignUpForm1);\n\n//Styling\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/DetailSignUpForm2.js",["1490","1491","1492","1493","1494","1495","1496"],"import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n//scss\nimport \"./DetailSignUpForm.scss\";\nimport \"style/Common.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport {\n  faPencilAlt,\n  faTrashAlt,\n  faIdCardAlt,\n  faMapMarkerAlt,\n  faUpload,\n  faChevronRight,\n  faAddressBook,\n  faBuilding,\n  faHome,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport DefaultAvatar from \"../../../../assets/default-avatar.png\";\nimport CurrentAvatar from \"../../../../assets/avatar.png\";\nimport cities from \"../../../../assets/json_location/city\";\nimport districts from \"../../../../assets/json_location/district\";\nimport MapDialog from \"./MapDialog\";\nimport AvatarEdit from \"./AvatarEdit\";\n\nfunction DetailSignUpForm2(props) {\n  //jsx\n  const [userProfilePic, setUserProfilePic] = useState(DefaultAvatar);\n  const [selectedCode, setSelectedCode] = useState({\n    cityCode: \"\",\n    districtCode: \"\",\n    value: \"\",\n  });\n  const inputFile = useRef(null);\n  const [showMapDialog, setShowMapDialog] = useState(false);\n  const [avatarState, setAvatarState] = useState(\"upload\");\n  const [avatarIconState, setAvatarIconState] = useState(faUpload);\n\n  const onButtonClick = () => {\n    inputFile.current.click();\n    setUserProfilePic(CurrentAvatar);\n    setAvatarIconState(faPencilAlt);\n    setAvatarState(\"edit\");\n  };\n  const getPosition = () => {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(res, rej);\n    });\n  };\n\n  const selectedAddressType = {\n    border: \"1px solid #101010\",\n    backgroundColor: \"#f6f6f6\",\n    width: 105,\n  };\n  const [addressType, setAddressType] = useState(1);\n  const [address, setAddress] = useState(\"\");\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const relocating = async (values) => {\n    var position = await getPosition();\n    const { latitude, longitude } = position.coords;\n    const endpoint = `https://api.geoapify.com/v1/geocode/reverse?lat=${latitude}&lon=${longitude}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n    let res = await axios.get(endpoint);\n    var address = \"\";\n    if (res.data) {\n      address = res.data?.features[0]?.properties?.formatted || \"\";\n    }\n    setLatitude(latitude);\n    setLongitude(longitude);\n    setAddress(address);\n  };\n  return (\n    <>\n      <div className=\"detail-profile-wrapper\">\n        <div className=\"form-title-wrapper\">\n          <FontAwesomeIcon className=\"form-icon\" icon={faIdCardAlt} />\n          <span className=\"form-title\">Update profile</span>\n        </div>\n        <div className=\"avatar-uploader-wrapper\">\n          <div className=\"label-sign-up form-label\">Profile photo</div>\n          <div className=\"avatar-uploader-detail-wrapper\">\n            <div className=\"image-preview\">\n              <img\n                className=\"profile-photo-small-size\"\n                src={userProfilePic}\n                alt=\"profile_pic\"\n              />\n            </div>\n            <div\n              disabled={avatarState === \"edit\"}\n              onClick={onButtonClick}\n              className=\"form-icon-edit\"\n            >\n              <FontAwesomeIcon\n                onClick={\n                  avatarState === \"upload\"\n                    ? () => setAvatarState(\"uploading\")\n                    : avatarState === \"edit\"\n                    ? () => setAvatarState(\"editting\")\n                    : null\n                }\n                icon={avatarIconState}\n              />\n              <input\n                type=\"file\"\n                id=\"file\"\n                ref={inputFile}\n                style={{ display: \"none\" }}\n              />\n            </div>\n            <div\n              disabled={avatarState === \"edit\"}\n              onClick={onButtonClick}\n              className=\"form-icon-delete\"\n            >\n              <FontAwesomeIcon\n                onClick={() => {\n                  setUserProfilePic(DefaultAvatar);\n                  setAvatarState(\"upload\");\n                  setAvatarIconState(faUpload);\n                }}\n                icon={faTrashAlt}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"gender-wrapper\" style={{ margin: \"20px 0\" }}>\n          <div className=\"label-sign-up form-label\">Gender</div>\n          <div className=\"gender-detail-wrapper\">\n            <label className=\"gender-type-wrapper\">\n              <input type=\"radio\" name=\"gender\" value=\"Male\" />\n              <span className=\"label-radio\">Male</span>\n            </label>\n            <label className=\"gender-type-wrapper\">\n              <input type=\"radio\" name=\"gender\" value=\"Female\" />\n              <span className=\"label-radio\">Female</span>\n            </label>\n            <label className=\"gender-type-wrapper\">\n              <input type=\"radio\" name=\"gender\" value=\"Others\" />\n              <span className=\"label-radio\">Others</span>\n            </label>\n          </div>\n        </div>\n        <div className=\"date-of-birth-wrapper\">\n          <div className=\"label-sign-up form-label\">Birthday</div>\n          <input\n            className=\"sign-up-birthday form-text-field\"\n            type=\"date\"\n            id=\"birthday\"\n            name=\"birthday\"\n          />\n        </div>\n        <ButtonGroup mgLeft={100} mgTop={10} mgBottom={10}>\n          <Button\n            width={170}\n            height={30}\n            fontSize={13}\n            color={\"black\"}\n            marginTop={20}\n            bglight={true}\n            border={\"#5d5d5d 1.5px solid\"}\n            justifyContent={\"center\"}\n            label=\"Enable Geolocation\"\n            prefix={\n              <FontAwesomeIcon className=\"button-icon\" icon={faMapMarkerAlt} />\n            }\n            onClick={() => relocating()}\n          />\n        </ButtonGroup>\n        <div className=\"address-wrapper\">\n          <div className=\"label-sign-up form-label\">Address</div>\n\n          <div className=\"dynamic-address-detail-wrapper\">\n            <input\n              className=\"sign-up-address form-text-field\"\n              value={address}\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              disabled={true}\n            />\n          </div>\n        </div>\n        <ButtonGroup mgTop={10} mgBottom={10} mgLeft={100} gap={5}>\n          <div\n            className=\"p-pd-a-item address-type-style\"\n            onClick={() => setAddressType(1)}\n            style={addressType === 1 ? selectedAddressType : { width: 105 }}\n          >\n            <div className=\"p-pd-a-image-wrapper\">\n              <FontAwesomeIcon icon={faHome} className=\"p-pd-a-icon\" />\n            </div>\n            <span className=\"p-pd-a-label-radio\">House</span>\n          </div>\n          <div\n            className=\"p-pd-a-item\"\n            onClick={() => setAddressType(2)}\n            style={\n              addressType === 2 ? selectedAddressType : { width: 105, gap: 5 }\n            }\n          >\n            <div className=\"p-pd-a-image-wrapper\">\n              <FontAwesomeIcon icon={faBuilding} className=\"p-pd-a-icon\" />\n            </div>\n            <span className=\"p-pd-a-label-radio\">Workplace</span>\n          </div>\n          <div\n            className=\"p-pd-a-item\"\n            onClick={() => setAddressType(3)}\n            style={addressType === 3 ? selectedAddressType : { width: 105 }}\n          >\n            <div className=\"p-pd-a-image-wrapper\">\n              <FontAwesomeIcon icon={faAddressBook} className=\"p-pd-a-icon\" />\n            </div>\n            <span className=\"p-pd-a-label-radio\">Other</span>\n          </div>\n        </ButtonGroup>\n      </div>\n      <div className=\"button-group\">\n        <button className=\"btn-skip-form btn-size\">\n          <div className=\"none-icon\"></div>\n          Skip\n          <FontAwesomeIcon className=\"chevron-icon\" icon={faChevronRight} />\n        </button>\n        <button className=\"btn-form btn-size\">\n          <div className=\"none-icon\"></div>\n          Update\n          <FontAwesomeIcon className=\"chevron-icon\" icon={faChevronRight} />\n        </button>\n      </div>\n      <MapDialog\n        showMapDialog={showMapDialog}\n        setShowMapDialog={setShowMapDialog}\n      />\n      <AvatarEdit\n        userProfilePic={userProfilePic}\n        setUserProfilePic={setUserProfilePic}\n        avatarState={avatarState}\n        setAvatarState={setAvatarState}\n      />\n    </>\n  );\n}\n\nexport default DetailSignUpForm2;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/UpdateAdditionalOption.js",["1497","1498","1499","1500","1501"],"import { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faSave,\n  faTrashAlt,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"./AdditionalOption.scss\";\nimport \"./ProductHandler.scss\";\nimport \"style/Common.scss\";\nimport Checkbox from \"react-custom-checkbox\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport AddAdditionalOption from \"./AddAdditionalOption\";\n\nfunction UpdateAdditionalOption(props) {\n  const [currentId, setCurrentId] = useState(0);\n  const [choices, setChoices] = useState([]);\n  const [filteredAdditionalOption, setFilteredAdditionalOption] = useState([]);\n  useEffect(() => {\n    setChoices([]);\n    const selectedOption = props.additionalOption.filter(\n      (item) => item.name === props.selectedOption\n    )[0].optionList;\n    console.log(selectedOption);\n    setCurrentId(selectedOption.length);\n    selectedOption.forEach((item) =>\n      setChoices((state) => [\n        ...state,\n        {\n          id: item.id,\n          value: item.optionName,\n          price: item.additionalPrice,\n        },\n      ])\n    );\n    console.log(choices);\n  }, [props.selectedOption]);\n\n  return (\n    <Fragment>\n      {props.additionalOption\n        .filter((item) => item.name === props.selectedOption)\n        .map((option) => (\n          <>\n            <div className=\"ao-head-wrapper\">\n              <span className=\"ao-head-title\">{props.title}</span>\n              <span className=\"ao-form-input-label-update\">\n                <span className=\"ao-form-input-label-update\">\n                  {option.name}{\" \"}\n                  <span className=\"sub-text-label\">(required)</span>\n                </span>\n              </span>\n              <div className=\"box-choice-container\">\n                {choices?.map((choice, index) => (\n                  <div className=\"box-choice\" key={choice.id}>\n                    <span className=\"ao-choice-name\">Choice {index + 1}</span>\n                    <input\n                      className=\"ao-choice-text-field\"\n                      name={choice.id}\n                      type=\"text\"\n                      defaultValue={choice.value || \"\"}\n                      placeholder=\"Option name\"\n                      style={{ borderRight: \"1px solid black\" }}\n                    />\n                    <span className=\"ao-choice-name\">Price</span>\n                    <input\n                      style={{\n                        width: \"100px\",\n                        textAlign: \"center\",\n                        textIndent: \"0px\",\n                      }}\n                      className=\"ao-choice-text-field\"\n                      name={choice.id}\n                      defaultValue={choice.price || \"\"}\n                      type=\"text\"\n                    />\n                  </div>\n                ))}\n              </div>\n              <div className=\"ao-add-more-choice\">\n                <ButtonGroup\n                  gap={20}\n                  float=\"flex-start\"\n                  mgTop={10}\n                  mgBottom={5}\n                >\n                  <Button\n                    color={\"black\"}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    width={100}\n                    height={35}\n                    label=\"Remove\"\n                    justifyContent={\"center\"}\n                    prefix={\n                      <FontAwesomeIcon\n                        className=\"button-icon\"\n                        icon={faTrashAlt}\n                      />\n                    }\n                    onClick={() => {\n                      if (currentId > 0) {\n                        setChoices(\n                          choices.filter(\n                            (item) => parseInt(item.id) !== currentId - 1\n                          )\n                        );\n                        setCurrentId(currentId - 1);\n                      }\n                    }}\n                  />\n                  <Button\n                    color={\"black\"}\n                    bglight={true}\n                    border={\"#5d5d5d 1.5px solid\"}\n                    width={100}\n                    height={35}\n                    label=\"Add\"\n                    justifyContent={\"center\"}\n                    prefix={\n                      <FontAwesomeIcon className=\"button-icon\" icon={faPlus} />\n                    }\n                    onClick={() => {\n                      setChoices((state) => [\n                        ...state,\n                        {\n                          id: currentId,\n                          value: \"\",\n                          price: \"0\",\n                        },\n                      ]);\n                      setCurrentId(currentId + 1);\n                    }}\n                  />\n                </ButtonGroup>\n              </div>\n            </div>\n            <div className=\"ao-footer\">\n              <Checkbox\n                checked={false}\n                icon={\n                  <div className=\"check-icon\">\n                    <FontAwesomeIcon\n                      style={{\n                        fontSize: \"15px\",\n                        color: \"#2c2c2c\",\n                      }}\n                      icon={faCheck}\n                    />\n                  </div>\n                }\n                size={20}\n                borderColor={\"black\"}\n                borderRadius={0}\n                name=\"required\"\n                style={{\n                  backgroundColor: \"white\",\n                  cursor: \"pointer\",\n                  border: \"1px solid black\",\n                }}\n                labelStyle={{\n                  fontSize: \"13px\",\n                  fontWeight: \"500\",\n                  color: \"#2e2e2e\",\n                  marginLeft: 15,\n                  userSelect: \"none\",\n                }}\n                label={\"Required\"}\n              />\n              <ButtonGroup\n                float={\"flex-end\"}\n                direction={\"row\"}\n                gap={20}\n                mgTop={5}\n              >\n                <Button\n                  label=\"Save\"\n                  justifyContent={\"center\"}\n                  prefix={\n                    <FontAwesomeIcon icon={faSave} style={{ color: \"white\" }} />\n                  }\n                  buttonType=\"primary\"\n                  width={100}\n                />\n              </ButtonGroup>\n            </div>\n          </>\n        ))}\n    </Fragment>\n  );\n}\n\nexport default UpdateAdditionalOption;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/MerchantDashboard/DashboardFeatures/MDProduct/ProductHandler/AddAdditionalOption.js",["1502","1503","1504","1505","1506","1507"],"import { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faRecycle,\n  faTrash,\n  faTrashAlt,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport Button from \"components/Commons/Button/Button\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport \"./AdditionalOption.scss\";\nimport \"./ProductHandler.scss\";\nimport \"style/Common.scss\";\nimport Checkbox from \"react-custom-checkbox\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction AddAdditionalOption(props) {\n  const [currentId, setCurrentId] = useState(0);\n  const [choices, setChoices] = useState([]);\n  const [labelName, setLabelName] = useState(\"\");\n  const [additionalListList, setAdditionalList] = useState(props.list);\n\n  const addAdditionalOption = () => {\n    const optionList = [];\n    console.log(choices);\n    choices.forEach((choice) =>\n      optionList.push({\n        id: choice.id,\n        optionName: choice.value,\n        additionalPrice: parseInt(choice.price),\n      })\n    );\n    const option = {\n      name: labelName,\n      optionList: optionList,\n    };\n    props.setAdditionalOption((state) => [...state, option]);\n    console.log(props.additionalOption);\n    props.setShowAdditionalOption(false);\n  };\n  return (\n    <Fragment>\n      <div className=\"ao-head-wrapper\">\n        <span className=\"ao-head-title\">{props.title}</span>\n        <span className=\"ao-form-input-label\">Option name</span>\n\n        <div className=\"ao-form-input-wrapper\">\n          <input\n            className=\"ao-detail-textarea\"\n            type=\"text\"\n            onChange={(e) => setLabelName(e.target.value)}\n            placeholder=\"Start typing your option (e.g.  size)\"\n          />\n        </div>\n\n        <div className=\"box-choice-container\">\n          {choices?.map((choice, index) => (\n            <div className=\"box-choice\" key={choice.id}>\n              <span className=\"ao-choice-name\">Choice {index + 1}</span>\n              <input\n                className=\"ao-choice-text-field\"\n                name={choice.id}\n                type=\"text\"\n                placeholder=\"Option name\"\n                style={{ borderRight: \"1px solid black\" }}\n                onChange={(e) => {\n                  setChoices(\n                    [...choices].map((item) => {\n                      if (item.id === parseInt(e.target.name)) {\n                        return { ...item, value: e.target.value };\n                      } else return item;\n                    })\n                  );\n                }}\n              />\n              <span className=\"ao-choice-name\">Price</span>\n              <input\n                style={{\n                  width: \"100px\",\n                  textAlign: \"center\",\n                  textIndent: \"0px\",\n                }}\n                className=\"ao-choice-text-field\"\n                name={choice.id}\n                type=\"text\"\n                onChange={(e) => {\n                  setChoices(\n                    [...choices].map((item) => {\n                      if (item.id === parseInt(e.target.name)) {\n                        return {\n                          ...item,\n                          price: e.target.value,\n                        };\n                      } else return item;\n                    })\n                  );\n                }}\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"ao-add-more-choice\">\n          <ButtonGroup gap={20} float=\"flex-start\" mgTop={10} mgBottom={5}>\n            <Button\n              color={\"black\"}\n              bglight={true}\n              border={\"#5d5d5d 1.5px solid\"}\n              width={100}\n              height={35}\n              label=\"Remove\"\n              justifyContent={\"center\"}\n              prefix={\n                <FontAwesomeIcon className=\"button-icon\" icon={faTrashAlt} />\n              }\n              onClick={() => {\n                if (currentId > 0) {\n                  setChoices(\n                    choices.filter(\n                      (item) => parseInt(item.id) !== currentId - 1\n                    )\n                  );\n                  setCurrentId(currentId - 1);\n                }\n              }}\n            />\n            <Button\n              color={\"black\"}\n              bglight={true}\n              border={\"#5d5d5d 1.5px solid\"}\n              width={100}\n              height={35}\n              label=\"Add\"\n              justifyContent={\"center\"}\n              prefix={<FontAwesomeIcon className=\"button-icon\" icon={faPlus} />}\n              onClick={() => {\n                setChoices((state) => [\n                  ...state,\n                  {\n                    id: currentId,\n                    value: \"\",\n                    price: \"0\",\n                  },\n                ]);\n                setCurrentId(currentId + 1);\n              }}\n            />\n          </ButtonGroup>\n        </div>\n      </div>\n      <div className=\"ao-footer\">\n        <Checkbox\n          checked={false}\n          icon={\n            <div className=\"check-icon\">\n              <FontAwesomeIcon\n                style={{\n                  fontSize: \"15px\",\n                  color: \"#2c2c2c\",\n                }}\n                icon={faCheck}\n              />\n            </div>\n          }\n          size={20}\n          borderColor={\"black\"}\n          borderRadius={0}\n          name=\"required\"\n          style={{\n            backgroundColor: \"white\",\n            cursor: \"pointer\",\n            border: \"1px solid black\",\n          }}\n          labelStyle={{\n            fontSize: \"13px\",\n            fontWeight: \"500\",\n            color: \"#2e2e2e\",\n            marginLeft: 15,\n            userSelect: \"none\",\n          }}\n          label={\"Required\"}\n        />\n        <ButtonGroup float={\"flex-end\"} direction={\"row\"} gap={20} mgTop={5}>\n          <Button\n            label=\"Undo\"\n            buttonType=\"secondary\"\n            onClick={() => {\n              setChoices([]);\n              setCurrentId(0);\n            }}\n            width={100}\n          />\n          <Button\n            onClick={addAdditionalOption}\n            label=\"Add\"\n            justifyContent={\"center\"}\n            prefix={\n              <FontAwesomeIcon icon={faPlus} style={{ color: \"white\" }} />\n            }\n            buttonType=\"primary\"\n            width={100}\n          />\n        </ButtonGroup>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAdditionalOption;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/ErrorHandlers/AlertNotificationBox/AlertNotificationBox.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/MapDialog.js",["1508","1509","1510","1511","1512","1513"],"import React from \"react\";\nimport \"./MapDialog.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/fontawesome-free-solid\";\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  LoadScript,\n  Marker,\n  StandaloneSearchBox,\n  Autocomplete,\n} from \"@react-google-maps/api\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"450px\",\n};\n//import styled from \"styled-components\";\n\n/*\nconst Background = styled.div`\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.7);\n        position: fixed;\n        top: 0%;\n        left: 0%;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        justify-content: center;\n        align-items: center;\n        z-index: 10;\n    `\n\nconst MapDialogWrapper = styled.div`\n        width: 70%;\n        height: 75%;\n        background: #fff;\n        position: relative;\n        z-index: 10;\n        color: black;\n        \n    `\n*/\nfunction MapDialog({ showMapDialog, setShowMapDialog }) {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBROKXl2k41UwBJx-cUF5lbx1kLn_TqTyQ\",\n  });\n\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return (\n    <>\n      {showMapDialog ? (\n        <div className=\"dialog-background\">\n          <div className=\"map-dialog-wrapper\">\n            <div className=\"map-dialog-components\">\n              <div className=\"title-map-dialog-wrapper\">\n                <span className=\"dialog-title\">\n                  Find Your Location On Google Map\n                </span>\n                <FontAwesomeIcon\n                  onClick={() => setShowMapDialog((prev) => !prev)}\n                  className=\"form-icon\"\n                  icon={faTimes}\n                />\n              </div>\n              <div className=\"map-api-wrapper\">\n                <div className=\"map-api-section\">\n                  <GoogleMap\n                    zoom={10}\n                    onLoad={onLoad}\n                    onUnmount={onUnmount}\n                    mapContainerStyle={containerStyle}\n                  ></GoogleMap>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default MapDialog;\n","/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/UserAdmission/SignUpForm/DetailSignUpForm/AvatarEdit.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/assets/json_location/district.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/utils/FormUtils/FormValidate.js",[],"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UIComponentAction/UIAlertAction.js",[],{"ruleId":"1514","severity":1,"message":"1515","line":5,"column":24,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":38},{"ruleId":"1514","severity":1,"message":"1518","line":6,"column":8,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1519","line":7,"column":8,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1520","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1522","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1523","line":2,"column":25,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1524","line":6,"column":8,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1525","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":16},{"ruleId":"1526","severity":1,"message":"1527","line":56,"column":6,"nodeType":"1528","endLine":56,"endColumn":8,"suggestions":"1529"},{"ruleId":"1526","severity":1,"message":"1527","line":72,"column":6,"nodeType":"1528","endLine":72,"endColumn":33,"suggestions":"1530"},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":9,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1531","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1521","line":3,"column":10,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":3,"column":20,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1533","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1531","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1521","line":3,"column":10,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":3,"column":20,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1534","line":4,"column":8,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1533","line":8,"column":8,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1523","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1535","line":6,"column":10,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1536","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1523","line":5,"column":29,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1537","line":11,"column":8,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1538","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1539","line":13,"column":8,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1540","line":14,"column":8,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1541","line":15,"column":8,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1542","line":9,"column":11,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1531","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1534","line":4,"column":8,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1536","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1543","line":5,"column":17,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1544","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1545","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1546","line":12,"column":20,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":33},{"ruleId":"1526","severity":1,"message":"1527","line":32,"column":6,"nodeType":"1528","endLine":32,"endColumn":8,"suggestions":"1547"},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1533","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":27,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":38,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1548","line":1,"column":8,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1549","line":10,"column":8,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1550","line":11,"column":8,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1551","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1523","line":1,"column":25,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1552","line":8,"column":18,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1553","line":22,"column":8,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1554","line":23,"column":8,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1555","line":65,"column":6,"nodeType":"1528","endLine":65,"endColumn":8,"suggestions":"1556"},{"ruleId":"1557","severity":1,"message":"1558","line":70,"column":35,"nodeType":"1559","messageId":"1560","endLine":70,"endColumn":37},{"ruleId":"1561","severity":1,"message":"1562","line":71,"column":27,"nodeType":"1563","messageId":"1564","endLine":71,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":74,"column":47,"nodeType":"1559","messageId":"1560","endLine":74,"endColumn":49},{"ruleId":"1561","severity":1,"message":"1562","line":75,"column":35,"nodeType":"1563","messageId":"1564","endLine":75,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1558","line":78,"column":43,"nodeType":"1559","messageId":"1560","endLine":78,"endColumn":45},{"ruleId":"1561","severity":1,"message":"1562","line":79,"column":35,"nodeType":"1563","messageId":"1564","endLine":79,"endColumn":37},{"ruleId":"1565","severity":1,"message":"1566","line":152,"column":21,"nodeType":"1567","endLine":152,"endColumn":71},{"ruleId":"1565","severity":1,"message":"1566","line":164,"column":21,"nodeType":"1567","endLine":164,"endColumn":71},{"ruleId":"1568","severity":1,"message":"1569","line":244,"column":27,"nodeType":"1570","endLine":248,"endColumn":28},{"ruleId":"1568","severity":1,"message":"1569","line":273,"column":27,"nodeType":"1570","endLine":277,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":283,"column":57,"nodeType":"1559","messageId":"1560","endLine":283,"endColumn":59},{"ruleId":"1568","severity":1,"message":"1569","line":304,"column":27,"nodeType":"1570","endLine":308,"endColumn":28},{"ruleId":"1557","severity":1,"message":"1558","line":314,"column":57,"nodeType":"1559","messageId":"1560","endLine":314,"endColumn":59},{"ruleId":"1557","severity":1,"message":"1558","line":318,"column":63,"nodeType":"1559","messageId":"1560","endLine":318,"endColumn":65},{"ruleId":"1514","severity":1,"message":"1552","line":4,"column":18,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":30},{"ruleId":"1526","severity":1,"message":"1571","line":74,"column":13,"nodeType":"1563","endLine":83,"endColumn":4},{"ruleId":"1526","severity":1,"message":"1527","line":83,"column":6,"nodeType":"1528","endLine":83,"endColumn":8,"suggestions":"1572"},{"ruleId":"1514","severity":1,"message":"1573","line":221,"column":17,"nodeType":"1516","messageId":"1517","endLine":221,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1552","line":4,"column":18,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1574","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1575","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1576","line":9,"column":10,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1573","line":65,"column":17,"nodeType":"1516","messageId":"1517","endLine":65,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1522","line":1,"column":41,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1552","line":4,"column":18,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1576","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1577","line":15,"column":7,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1573","line":47,"column":17,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1578","line":47,"column":25,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1579","line":47,"column":33,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":40},{"ruleId":"1514","severity":1,"message":"1580","line":47,"column":42,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":55},{"ruleId":"1565","severity":1,"message":"1566","line":92,"column":21,"nodeType":"1567","endLine":92,"endColumn":73},{"ruleId":"1514","severity":1,"message":"1552","line":4,"column":18,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1574","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1581","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1582","line":13,"column":8,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1576","line":17,"column":10,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1573","line":86,"column":17,"nodeType":"1516","messageId":"1517","endLine":86,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1579","line":86,"column":33,"nodeType":"1516","messageId":"1517","endLine":86,"endColumn":40},{"ruleId":"1514","severity":1,"message":"1580","line":86,"column":42,"nodeType":"1516","messageId":"1517","endLine":86,"endColumn":55},{"ruleId":"1514","severity":1,"message":"1574","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1583","line":2,"column":8,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":13},{"ruleId":"1584","severity":1,"message":"1585","line":15,"column":1,"nodeType":"1586","endLine":78,"endColumn":2},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1587","line":13,"column":8,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1588","line":16,"column":25,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":34},{"ruleId":"1514","severity":1,"message":"1589","line":19,"column":7,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1534","line":2,"column":8,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1590","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1591","line":8,"column":8,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1589","line":16,"column":7,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":24},{"ruleId":"1557","severity":1,"message":"1558","line":42,"column":26,"nodeType":"1559","messageId":"1560","endLine":42,"endColumn":28},{"ruleId":"1592","severity":1,"message":"1593","line":25,"column":5,"nodeType":"1594","messageId":"1595","endLine":36,"endColumn":7},{"ruleId":"1514","severity":1,"message":"1596","line":21,"column":9,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1597","line":35,"column":9,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":24},{"ruleId":"1526","severity":1,"message":"1527","line":106,"column":6,"nodeType":"1528","endLine":106,"endColumn":8,"suggestions":"1598"},{"ruleId":"1526","severity":1,"message":"1527","line":119,"column":6,"nodeType":"1528","endLine":119,"endColumn":8,"suggestions":"1599"},{"ruleId":"1514","severity":1,"message":"1589","line":13,"column":7,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1600","line":20,"column":18,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1601","line":3,"column":8,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1602","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1575","line":10,"column":10,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1603","line":13,"column":45,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1604","line":15,"column":8,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":10},{"ruleId":"1514","severity":1,"message":"1605","line":34,"column":32,"nodeType":"1516","messageId":"1517","endLine":34,"endColumn":55},{"ruleId":"1514","severity":1,"message":"1606","line":37,"column":30,"nodeType":"1516","messageId":"1517","endLine":37,"endColumn":51},{"ruleId":"1514","severity":1,"message":"1607","line":40,"column":10,"nodeType":"1516","messageId":"1517","endLine":40,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1608","line":43,"column":10,"nodeType":"1516","messageId":"1517","endLine":43,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1609","line":53,"column":10,"nodeType":"1516","messageId":"1517","endLine":53,"endColumn":22},{"ruleId":"1526","severity":1,"message":"1610","line":103,"column":6,"nodeType":"1528","endLine":103,"endColumn":8,"suggestions":"1611"},{"ruleId":"1514","severity":1,"message":"1612","line":107,"column":10,"nodeType":"1516","messageId":"1517","endLine":107,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1613","line":152,"column":6,"nodeType":"1528","endLine":152,"endColumn":8,"suggestions":"1614"},{"ruleId":"1526","severity":1,"message":"1615","line":164,"column":6,"nodeType":"1528","endLine":164,"endColumn":8,"suggestions":"1616"},{"ruleId":"1514","severity":1,"message":"1604","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":10},{"ruleId":"1514","severity":1,"message":"1617","line":14,"column":10,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1575","line":15,"column":10,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1618","line":16,"column":10,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":25},{"ruleId":"1526","severity":1,"message":"1619","line":63,"column":6,"nodeType":"1528","endLine":63,"endColumn":8,"suggestions":"1620"},{"ruleId":"1514","severity":1,"message":"1621","line":64,"column":9,"nodeType":"1516","messageId":"1517","endLine":64,"endColumn":20},{"ruleId":"1526","severity":1,"message":"1622","line":80,"column":6,"nodeType":"1528","endLine":80,"endColumn":17,"suggestions":"1623"},{"ruleId":"1514","severity":1,"message":"1534","line":1,"column":8,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1601","line":3,"column":8,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1521","line":4,"column":27,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1532","line":4,"column":37,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1602","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1624","line":8,"column":3,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1600","line":23,"column":18,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1542","line":23,"column":28,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":32},{"ruleId":"1526","severity":1,"message":"1625","line":24,"column":6,"nodeType":"1528","endLine":24,"endColumn":34,"suggestions":"1626"},{"ruleId":"1526","severity":1,"message":"1627","line":55,"column":6,"nodeType":"1528","endLine":55,"endColumn":33,"suggestions":"1628"},{"ruleId":"1514","severity":1,"message":"1629","line":70,"column":10,"nodeType":"1516","messageId":"1517","endLine":70,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1630","line":89,"column":6,"nodeType":"1528","endLine":89,"endColumn":8,"suggestions":"1631"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1632","line":16,"column":19,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1633","line":17,"column":17,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1588","line":1,"column":25,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":34},{"ruleId":"1514","severity":1,"message":"1634","line":8,"column":17,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":24},{"ruleId":"1584","severity":1,"message":"1585","line":7,"column":1,"nodeType":"1586","endLine":15,"endColumn":2},{"ruleId":"1584","severity":1,"message":"1585","line":18,"column":1,"nodeType":"1586","endLine":32,"endColumn":2},{"ruleId":"1635","severity":1,"message":"1636","line":68,"column":5,"nodeType":"1637","messageId":"1638","endLine":69,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1639","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1640","line":33,"column":14,"nodeType":"1516","messageId":"1517","endLine":33,"endColumn":18},{"ruleId":"1641","severity":1,"message":"1642","line":55,"column":16,"nodeType":"1643","messageId":"1644","endLine":55,"endColumn":17,"suggestions":"1645"},{"ruleId":"1641","severity":1,"message":"1642","line":55,"column":32,"nodeType":"1643","messageId":"1644","endLine":55,"endColumn":33,"suggestions":"1646"},{"ruleId":"1641","severity":1,"message":"1642","line":58,"column":37,"nodeType":"1643","messageId":"1644","endLine":58,"endColumn":38,"suggestions":"1647"},{"ruleId":"1641","severity":1,"message":"1642","line":58,"column":57,"nodeType":"1643","messageId":"1644","endLine":58,"endColumn":58,"suggestions":"1648"},{"ruleId":"1649","severity":1,"message":"1650","line":200,"column":13,"nodeType":"1567","endLine":200,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":28,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1575","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1651","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1652","line":20,"column":10,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1653","line":20,"column":26,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1575","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1651","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1652","line":30,"column":10,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1653","line":30,"column":26,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":27,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1574","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1654","line":7,"column":10,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":28,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1574","line":3,"column":10,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1639","line":4,"column":8,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1655","line":10,"column":11,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1640","line":10,"column":14,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1656","line":10,"column":3,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1657","line":11,"column":3,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":10},{"ruleId":"1514","severity":1,"message":"1658","line":13,"column":3,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":8},{"ruleId":"1514","severity":1,"message":"1659","line":14,"column":3,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1660","line":15,"column":3,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1661","line":17,"column":3,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1662","line":18,"column":3,"nodeType":"1516","messageId":"1517","endLine":18,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1663","line":19,"column":3,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1664","line":21,"column":10,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1665","line":21,"column":18,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1666","line":21,"column":24,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1553","line":22,"column":8,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1554","line":23,"column":8,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1667","line":26,"column":21,"nodeType":"1516","messageId":"1517","endLine":26,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1668","line":27,"column":21,"nodeType":"1516","messageId":"1517","endLine":27,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1669","line":29,"column":10,"nodeType":"1516","messageId":"1517","endLine":29,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1670","line":32,"column":10,"nodeType":"1516","messageId":"1517","endLine":32,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1671","line":33,"column":7,"nodeType":"1516","messageId":"1517","endLine":33,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1672","line":35,"column":7,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":21},{"ruleId":"1526","severity":1,"message":"1673","line":55,"column":6,"nodeType":"1528","endLine":55,"endColumn":27,"suggestions":"1674"},{"ruleId":"1514","severity":1,"message":"1675","line":56,"column":10,"nodeType":"1516","messageId":"1517","endLine":56,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1676","line":56,"column":28,"nodeType":"1516","messageId":"1517","endLine":56,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1677","line":57,"column":9,"nodeType":"1516","messageId":"1517","endLine":57,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1624","line":5,"column":3,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1523","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1536","line":8,"column":3,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":8},{"ruleId":"1514","severity":1,"message":"1543","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1678","line":21,"column":26,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1679","line":22,"column":10,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1680","line":22,"column":22,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":35},{"ruleId":"1526","severity":1,"message":"1681","line":44,"column":6,"nodeType":"1528","endLine":44,"endColumn":29,"suggestions":"1682"},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":37,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1656","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1659","line":12,"column":3,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1661","line":14,"column":3,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1665","line":17,"column":18,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1675","line":29,"column":10,"nodeType":"1516","messageId":"1517","endLine":29,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1676","line":29,"column":28,"nodeType":"1516","messageId":"1517","endLine":29,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1573","line":96,"column":21,"nodeType":"1516","messageId":"1517","endLine":96,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1578","line":96,"column":29,"nodeType":"1516","messageId":"1517","endLine":96,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1579","line":96,"column":37,"nodeType":"1516","messageId":"1517","endLine":96,"endColumn":44},{"ruleId":"1514","severity":1,"message":"1544","line":2,"column":17,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":37,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1683","line":7,"column":8,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1684","line":8,"column":8,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1685","line":14,"column":3,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1686","line":19,"column":3,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1687","line":22,"column":3,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1688","line":4,"column":7,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1544","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1522","line":1,"column":41,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1689","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1690","line":12,"column":10,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":26},{"ruleId":"1526","severity":1,"message":"1691","line":33,"column":6,"nodeType":"1528","endLine":33,"endColumn":18,"suggestions":"1692"},{"ruleId":"1557","severity":1,"message":"1693","line":106,"column":31,"nodeType":"1559","messageId":"1560","endLine":106,"endColumn":33},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":27,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1565","severity":1,"message":"1566","line":9,"column":9,"nodeType":"1567","endLine":9,"endColumn":42},{"ruleId":"1514","severity":1,"message":"1544","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":31,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":31,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1694","line":50,"column":20,"nodeType":"1516","messageId":"1517","endLine":50,"endColumn":31},{"ruleId":"1526","severity":1,"message":"1695","line":115,"column":6,"nodeType":"1528","endLine":115,"endColumn":35,"suggestions":"1696"},{"ruleId":"1557","severity":1,"message":"1558","line":133,"column":32,"nodeType":"1559","messageId":"1560","endLine":133,"endColumn":34},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1697","line":4,"column":26,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1698","line":10,"column":10,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":18},{"ruleId":"1699","severity":1,"message":"1700","line":15,"column":10,"nodeType":"1559","messageId":"1701","endLine":15,"endColumn":17},{"ruleId":"1565","severity":1,"message":"1566","line":25,"column":17,"nodeType":"1567","endLine":25,"endColumn":40},{"ruleId":"1565","severity":1,"message":"1566","line":28,"column":17,"nodeType":"1567","endLine":28,"endColumn":40},{"ruleId":"1514","severity":1,"message":"1702","line":1,"column":8,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1618","line":5,"column":3,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1703","line":6,"column":3,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1704","line":11,"column":7,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1705","line":32,"column":9,"nodeType":"1516","messageId":"1517","endLine":32,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1574","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1706","line":3,"column":10,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1707","line":6,"column":3,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1708","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1709","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1553","line":14,"column":8,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1554","line":15,"column":8,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1710","line":40,"column":6,"nodeType":"1528","endLine":40,"endColumn":19,"suggestions":"1711"},{"ruleId":"1514","severity":1,"message":"1603","line":8,"column":45,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1712","line":54,"column":5,"nodeType":"1516","messageId":"1517","endLine":54,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1713","line":55,"column":5,"nodeType":"1516","messageId":"1517","endLine":55,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1605","line":56,"column":5,"nodeType":"1516","messageId":"1517","endLine":56,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1714","line":73,"column":10,"nodeType":"1516","messageId":"1517","endLine":73,"endColumn":30},{"ruleId":"1526","severity":1,"message":"1527","line":86,"column":6,"nodeType":"1528","endLine":86,"endColumn":39,"suggestions":"1715"},{"ruleId":"1526","severity":1,"message":"1716","line":114,"column":6,"nodeType":"1528","endLine":114,"endColumn":27,"suggestions":"1717"},{"ruleId":"1526","severity":1,"message":"1718","line":128,"column":6,"nodeType":"1528","endLine":128,"endColumn":8,"suggestions":"1719"},{"ruleId":"1526","severity":1,"message":"1720","line":147,"column":6,"nodeType":"1528","endLine":147,"endColumn":43,"suggestions":"1721"},{"ruleId":"1526","severity":1,"message":"1722","line":183,"column":6,"nodeType":"1528","endLine":183,"endColumn":36,"suggestions":"1723"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1724","line":25,"column":9,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1574","line":18,"column":10,"nodeType":"1516","messageId":"1517","endLine":18,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1725","line":30,"column":10,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1726","line":28,"column":22,"nodeType":"1516","messageId":"1517","endLine":28,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1727","line":28,"column":30,"nodeType":"1516","messageId":"1517","endLine":28,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1603","line":28,"column":45,"nodeType":"1516","messageId":"1517","endLine":28,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1728","line":31,"column":10,"nodeType":"1516","messageId":"1517","endLine":31,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1729","line":32,"column":8,"nodeType":"1516","messageId":"1517","endLine":32,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1730","line":85,"column":10,"nodeType":"1516","messageId":"1517","endLine":85,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1731","line":92,"column":6,"nodeType":"1528","endLine":92,"endColumn":20,"suggestions":"1732"},{"ruleId":"1557","severity":1,"message":"1558","line":103,"column":35,"nodeType":"1559","messageId":"1560","endLine":103,"endColumn":37},{"ruleId":"1561","severity":1,"message":"1562","line":104,"column":27,"nodeType":"1563","messageId":"1564","endLine":104,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":107,"column":47,"nodeType":"1559","messageId":"1560","endLine":107,"endColumn":49},{"ruleId":"1561","severity":1,"message":"1562","line":108,"column":35,"nodeType":"1563","messageId":"1564","endLine":108,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1558","line":111,"column":43,"nodeType":"1559","messageId":"1560","endLine":111,"endColumn":45},{"ruleId":"1561","severity":1,"message":"1562","line":112,"column":35,"nodeType":"1563","messageId":"1564","endLine":112,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1733","line":121,"column":9,"nodeType":"1516","messageId":"1517","endLine":121,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1573","line":305,"column":23,"nodeType":"1516","messageId":"1517","endLine":305,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1578","line":305,"column":31,"nodeType":"1516","messageId":"1517","endLine":305,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1579","line":305,"column":39,"nodeType":"1516","messageId":"1517","endLine":305,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1578","line":447,"column":31,"nodeType":"1516","messageId":"1517","endLine":447,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1579","line":447,"column":39,"nodeType":"1516","messageId":"1517","endLine":447,"endColumn":46},{"ruleId":"1557","severity":1,"message":"1558","line":592,"column":61,"nodeType":"1559","messageId":"1560","endLine":592,"endColumn":63},{"ruleId":"1557","severity":1,"message":"1558","line":614,"column":61,"nodeType":"1559","messageId":"1560","endLine":614,"endColumn":63},{"ruleId":"1557","severity":1,"message":"1558","line":619,"column":55,"nodeType":"1559","messageId":"1560","endLine":619,"endColumn":57},{"ruleId":"1514","severity":1,"message":"1734","line":17,"column":25,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":41},{"ruleId":"1514","severity":1,"message":"1735","line":11,"column":23,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1736","line":12,"column":23,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1522","line":1,"column":31,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1737","line":4,"column":19,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1632","line":37,"column":17,"nodeType":"1516","messageId":"1517","endLine":37,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1633","line":38,"column":15,"nodeType":"1516","messageId":"1517","endLine":38,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1544","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":31,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1543","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1738","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":35},{"ruleId":"1526","severity":1,"message":"1739","line":12,"column":6,"nodeType":"1528","endLine":12,"endColumn":18,"suggestions":"1740"},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1741","line":17,"column":10,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1742","line":120,"column":10,"nodeType":"1516","messageId":"1517","endLine":120,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1542","line":139,"column":18,"nodeType":"1516","messageId":"1517","endLine":139,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1534","line":2,"column":8,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1549","line":3,"column":8,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1601","line":4,"column":8,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1602","line":6,"column":8,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1591","line":7,"column":8,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1667","line":13,"column":14,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1743","line":18,"column":3,"nodeType":"1516","messageId":"1517","endLine":18,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1744","line":19,"column":3,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1745","line":20,"column":3,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1746","line":23,"column":8,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1747","line":25,"column":8,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1748","line":30,"column":7,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1527","line":138,"column":6,"nodeType":"1528","endLine":138,"endColumn":8,"suggestions":"1749"},{"ruleId":"1514","severity":1,"message":"1667","line":7,"column":14,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1750","line":25,"column":8,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":14},{"ruleId":"1565","severity":1,"message":"1566","line":16,"column":13,"nodeType":"1567","endLine":16,"endColumn":41},{"ruleId":"1565","severity":1,"message":"1566","line":30,"column":13,"nodeType":"1567","endLine":30,"endColumn":41},{"ruleId":"1565","severity":1,"message":"1566","line":44,"column":13,"nodeType":"1567","endLine":44,"endColumn":41},{"ruleId":"1565","severity":1,"message":"1566","line":58,"column":13,"nodeType":"1567","endLine":58,"endColumn":41},{"ruleId":"1565","severity":1,"message":"1566","line":72,"column":13,"nodeType":"1567","endLine":72,"endColumn":41},{"ruleId":"1565","severity":1,"message":"1566","line":86,"column":13,"nodeType":"1567","endLine":86,"endColumn":41},{"ruleId":"1514","severity":1,"message":"1751","line":13,"column":9,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":37,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1752","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1542","line":12,"column":11,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1753","line":15,"column":24,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":39},{"ruleId":"1526","severity":1,"message":"1754","line":26,"column":6,"nodeType":"1528","endLine":26,"endColumn":8,"suggestions":"1755"},{"ruleId":"1514","severity":1,"message":"1756","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1757","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1574","line":11,"column":10,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1758","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":24},{"ruleId":"1526","severity":1,"message":"1759","line":32,"column":6,"nodeType":"1528","endLine":32,"endColumn":8,"suggestions":"1760"},{"ruleId":"1514","severity":1,"message":"1761","line":33,"column":10,"nodeType":"1516","messageId":"1517","endLine":33,"endColumn":33},{"ruleId":"1514","severity":1,"message":"1762","line":33,"column":35,"nodeType":"1516","messageId":"1517","endLine":33,"endColumn":61},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1624","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1763","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1764","line":6,"column":8,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1765","line":13,"column":24,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1766","line":14,"column":22,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1521","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1522","line":2,"column":48,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":54},{"ruleId":"1514","severity":1,"message":"1604","line":8,"column":8,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":10},{"ruleId":"1526","severity":1,"message":"1767","line":23,"column":6,"nodeType":"1528","endLine":23,"endColumn":8,"suggestions":"1768"},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1745","line":8,"column":3,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1772","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1773","line":23,"column":25,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":41},{"ruleId":"1526","severity":1,"message":"1774","line":37,"column":6,"nodeType":"1528","endLine":37,"endColumn":24,"suggestions":"1775"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1576","line":6,"column":10,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1776","line":6,"column":22,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1552","line":8,"column":18,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1745","line":10,"column":10,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1777","line":14,"column":8,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1778","line":15,"column":8,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1779","line":17,"column":8,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1726","line":21,"column":22,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1727","line":21,"column":30,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1603","line":21,"column":45,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1542","line":25,"column":11,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1578","line":105,"column":31,"nodeType":"1516","messageId":"1517","endLine":105,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1579","line":105,"column":39,"nodeType":"1516","messageId":"1517","endLine":105,"endColumn":46},{"ruleId":"1557","severity":1,"message":"1558","line":139,"column":67,"nodeType":"1559","messageId":"1560","endLine":139,"endColumn":69},{"ruleId":"1557","severity":1,"message":"1558","line":149,"column":67,"nodeType":"1559","messageId":"1560","endLine":149,"endColumn":69},{"ruleId":"1514","severity":1,"message":"1778","line":8,"column":8,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1554","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1553","line":10,"column":8,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1780","line":22,"column":3,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1781","line":23,"column":3,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1782","line":150,"column":13,"nodeType":"1516","messageId":"1517","endLine":150,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1783","line":151,"column":13,"nodeType":"1516","messageId":"1517","endLine":151,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1784","line":152,"column":13,"nodeType":"1516","messageId":"1517","endLine":152,"endColumn":20},{"ruleId":"1526","severity":1,"message":"1785","line":155,"column":6,"nodeType":"1528","endLine":155,"endColumn":24,"suggestions":"1786"},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1698","line":3,"column":8,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1787","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1788","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1545","line":17,"column":8,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1789","line":18,"column":7,"nodeType":"1516","messageId":"1517","endLine":18,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1790","line":39,"column":23,"nodeType":"1516","messageId":"1517","endLine":39,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1725","line":25,"column":10,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1790","line":56,"column":23,"nodeType":"1516","messageId":"1517","endLine":56,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1791","line":12,"column":3,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1792","line":14,"column":8,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1554","line":16,"column":8,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1793","line":25,"column":11,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1794","line":26,"column":23,"nodeType":"1516","messageId":"1517","endLine":26,"endColumn":37},{"ruleId":"1526","severity":1,"message":"1795","line":44,"column":6,"nodeType":"1528","endLine":44,"endColumn":8,"suggestions":"1796"},{"ruleId":"1526","severity":1,"message":"1797","line":25,"column":6,"nodeType":"1528","endLine":25,"endColumn":8,"suggestions":"1798"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":17,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":28,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1756","line":3,"column":10,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1574","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1763","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1764","line":6,"column":8,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1799","line":23,"column":17,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1640","line":25,"column":11,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1800","line":78,"column":11,"nodeType":"1516","messageId":"1517","endLine":78,"endColumn":17},{"ruleId":"1565","severity":1,"message":"1566","line":7,"column":9,"nodeType":"1567","endLine":7,"endColumn":56},{"ruleId":"1514","severity":1,"message":"1521","line":7,"column":20,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1725","line":12,"column":10,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1640","line":15,"column":11,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1574","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1801","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1780","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1523","line":11,"column":8,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1662","line":15,"column":10,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1802","line":15,"column":22,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":34},{"ruleId":"1514","severity":1,"message":"1803","line":21,"column":8,"nodeType":"1516","messageId":"1517","endLine":21,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1793","line":45,"column":17,"nodeType":"1516","messageId":"1517","endLine":45,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1804","line":46,"column":22,"nodeType":"1516","messageId":"1517","endLine":46,"endColumn":35},{"ruleId":"1526","severity":1,"message":"1805","line":69,"column":6,"nodeType":"1528","endLine":69,"endColumn":24,"suggestions":"1806"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1543","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1738","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1807","line":3,"column":8,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1575","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1808","line":6,"column":10,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1809","line":8,"column":3,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1810","line":26,"column":17,"nodeType":"1516","messageId":"1517","endLine":26,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1811","line":26,"column":26,"nodeType":"1516","messageId":"1517","endLine":26,"endColumn":43},{"ruleId":"1526","severity":1,"message":"1812","line":98,"column":6,"nodeType":"1528","endLine":98,"endColumn":24,"suggestions":"1813"},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1745","line":6,"column":19,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1814","line":11,"column":8,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1726","line":11,"column":22,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1727","line":11,"column":30,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1815","line":11,"column":37,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1603","line":11,"column":45,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":50},{"ruleId":"1526","severity":1,"message":"1527","line":49,"column":6,"nodeType":"1528","endLine":49,"endColumn":31,"suggestions":"1816"},{"ruleId":"1514","severity":1,"message":"1817","line":10,"column":10,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1818","line":15,"column":10,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1819","line":15,"column":26,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1820","line":4,"column":3,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1821","line":6,"column":10,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1544","line":1,"column":10,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":20,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1552","line":5,"column":18,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1803","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1822","line":13,"column":8,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1689","line":20,"column":8,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1745","line":23,"column":3,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1823","line":25,"column":3,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1578","line":101,"column":25,"nodeType":"1516","messageId":"1517","endLine":101,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1579","line":101,"column":33,"nodeType":"1516","messageId":"1517","endLine":101,"endColumn":40},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":37,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1824","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1575","line":10,"column":10,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1825","line":12,"column":3,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1826","line":13,"column":3,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1827","line":14,"column":3,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1828","line":15,"column":3,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":10},{"ruleId":"1514","severity":1,"message":"1829","line":16,"column":3,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1814","line":19,"column":8,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1726","line":19,"column":22,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1727","line":19,"column":30,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1815","line":19,"column":37,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1603","line":19,"column":45,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1830","line":20,"column":10,"nodeType":"1516","messageId":"1517","endLine":20,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1831","line":55,"column":7,"nodeType":"1516","messageId":"1517","endLine":55,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1578","line":119,"column":29,"nodeType":"1516","messageId":"1517","endLine":119,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1579","line":119,"column":37,"nodeType":"1516","messageId":"1517","endLine":119,"endColumn":44},{"ruleId":"1514","severity":1,"message":"1521","line":1,"column":27,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":37,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1832","line":11,"column":8,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1578","line":97,"column":29,"nodeType":"1516","messageId":"1517","endLine":97,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1579","line":97,"column":37,"nodeType":"1516","messageId":"1517","endLine":97,"endColumn":44},{"ruleId":"1514","severity":1,"message":"1769","line":2,"column":10,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1770","line":2,"column":27,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1771","line":2,"column":38,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1833","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1834","line":25,"column":7,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1793","line":90,"column":17,"nodeType":"1516","messageId":"1517","endLine":90,"endColumn":25},{"ruleId":"1526","severity":1,"message":"1774","line":106,"column":6,"nodeType":"1528","endLine":106,"endColumn":24,"suggestions":"1835"},{"ruleId":"1514","severity":1,"message":"1836","line":108,"column":9,"nodeType":"1516","messageId":"1517","endLine":108,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1837","line":10,"column":8,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1838","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1839","line":34,"column":10,"nodeType":"1516","messageId":"1517","endLine":34,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1840","line":35,"column":10,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1633","line":38,"column":15,"nodeType":"1516","messageId":"1517","endLine":38,"endColumn":23},{"ruleId":"1526","severity":1,"message":"1841","line":61,"column":6,"nodeType":"1528","endLine":61,"endColumn":24,"suggestions":"1842"},{"ruleId":"1565","severity":1,"message":"1566","line":22,"column":15,"nodeType":"1567","endLine":22,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":24,"column":13,"nodeType":"1567","endLine":24,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":34,"column":15,"nodeType":"1567","endLine":34,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":36,"column":13,"nodeType":"1567","endLine":36,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":46,"column":15,"nodeType":"1567","endLine":46,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":48,"column":13,"nodeType":"1567","endLine":48,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":58,"column":15,"nodeType":"1567","endLine":58,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":60,"column":13,"nodeType":"1567","endLine":60,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":70,"column":15,"nodeType":"1567","endLine":70,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":72,"column":13,"nodeType":"1567","endLine":72,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":82,"column":15,"nodeType":"1567","endLine":82,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":84,"column":13,"nodeType":"1567","endLine":84,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":94,"column":15,"nodeType":"1567","endLine":94,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":96,"column":13,"nodeType":"1567","endLine":96,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":106,"column":15,"nodeType":"1567","endLine":106,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":108,"column":13,"nodeType":"1567","endLine":108,"endColumn":48},{"ruleId":"1565","severity":1,"message":"1566","line":118,"column":15,"nodeType":"1567","endLine":118,"endColumn":42},{"ruleId":"1649","severity":1,"message":"1650","line":120,"column":13,"nodeType":"1567","endLine":120,"endColumn":48},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1780","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1764","line":12,"column":8,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1763","line":13,"column":10,"nodeType":"1516","messageId":"1517","endLine":13,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1667","line":15,"column":21,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1668","line":16,"column":21,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1669","line":17,"column":10,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1632","line":138,"column":19,"nodeType":"1516","messageId":"1517","endLine":138,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":30,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1787","line":6,"column":10,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1662","line":12,"column":3,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1788","line":16,"column":3,"nodeType":"1516","messageId":"1517","endLine":16,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1726","line":24,"column":3,"nodeType":"1516","messageId":"1517","endLine":24,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1727","line":25,"column":3,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":8},{"ruleId":"1514","severity":1,"message":"1843","line":28,"column":3,"nodeType":"1516","messageId":"1517","endLine":28,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1830","line":31,"column":10,"nodeType":"1516","messageId":"1517","endLine":31,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1790","line":57,"column":23,"nodeType":"1516","messageId":"1517","endLine":57,"endColumn":37},{"ruleId":"1526","severity":1,"message":"1774","line":40,"column":6,"nodeType":"1528","endLine":40,"endColumn":24,"suggestions":"1844"},{"ruleId":"1526","severity":1,"message":"1527","line":48,"column":6,"nodeType":"1528","endLine":48,"endColumn":24,"suggestions":"1845"},{"ruleId":"1526","severity":1,"message":"1846","line":58,"column":6,"nodeType":"1528","endLine":58,"endColumn":8,"suggestions":"1847"},{"ruleId":"1526","severity":1,"message":"1848","line":67,"column":6,"nodeType":"1528","endLine":67,"endColumn":23,"suggestions":"1849"},{"ruleId":"1514","severity":1,"message":"1850","line":69,"column":9,"nodeType":"1516","messageId":"1517","endLine":69,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1851","line":253,"column":7,"nodeType":"1516","messageId":"1517","endLine":253,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1852","line":4,"column":3,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1853","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1854","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1855","line":11,"column":3,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1633","line":42,"column":15,"nodeType":"1516","messageId":"1517","endLine":42,"endColumn":23},{"ruleId":"1514","severity":1,"message":"1856","line":65,"column":13,"nodeType":"1516","messageId":"1517","endLine":65,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1857","line":74,"column":6,"nodeType":"1528","endLine":74,"endColumn":24,"suggestions":"1858"},{"ruleId":"1526","severity":1,"message":"1859","line":102,"column":6,"nodeType":"1528","endLine":102,"endColumn":24,"suggestions":"1860"},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":30,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1664","line":8,"column":10,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1552","line":8,"column":18,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1665","line":8,"column":32,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1666","line":8,"column":38,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":43},{"ruleId":"1514","severity":1,"message":"1861","line":19,"column":10,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":21},{"ruleId":"1514","severity":1,"message":"1862","line":35,"column":13,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1862","line":65,"column":13,"nodeType":"1516","messageId":"1517","endLine":65,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1552","line":5,"column":18,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1772","line":11,"column":3,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1863","line":47,"column":10,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1864","line":47,"column":19,"nodeType":"1516","messageId":"1517","endLine":47,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1865","line":48,"column":10,"nodeType":"1516","messageId":"1517","endLine":48,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1866","line":48,"column":21,"nodeType":"1516","messageId":"1517","endLine":48,"endColumn":33},{"ruleId":"1526","severity":1,"message":"1527","line":74,"column":6,"nodeType":"1528","endLine":74,"endColumn":30,"suggestions":"1867"},{"ruleId":"1526","severity":1,"message":"1527","line":88,"column":6,"nodeType":"1528","endLine":88,"endColumn":8,"suggestions":"1868"},{"ruleId":"1526","severity":1,"message":"1869","line":96,"column":6,"nodeType":"1528","endLine":96,"endColumn":24,"suggestions":"1870"},{"ruleId":"1514","severity":1,"message":"1578","line":127,"column":25,"nodeType":"1516","messageId":"1517","endLine":127,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1579","line":127,"column":33,"nodeType":"1516","messageId":"1517","endLine":127,"endColumn":40},{"ruleId":"1565","severity":1,"message":"1566","line":157,"column":19,"nodeType":"1567","endLine":157,"endColumn":77},{"ruleId":"1514","severity":1,"message":"1552","line":5,"column":18,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1871","line":26,"column":8,"nodeType":"1516","messageId":"1517","endLine":26,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1583","line":27,"column":8,"nodeType":"1516","messageId":"1517","endLine":27,"endColumn":13},{"ruleId":"1526","severity":1,"message":"1872","line":79,"column":6,"nodeType":"1528","endLine":79,"endColumn":8,"suggestions":"1873"},{"ruleId":"1526","severity":1,"message":"1869","line":88,"column":6,"nodeType":"1528","endLine":88,"endColumn":24,"suggestions":"1874"},{"ruleId":"1514","severity":1,"message":"1851","line":92,"column":11,"nodeType":"1516","messageId":"1517","endLine":92,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1578","line":143,"column":25,"nodeType":"1516","messageId":"1517","endLine":143,"endColumn":31},{"ruleId":"1514","severity":1,"message":"1579","line":143,"column":33,"nodeType":"1516","messageId":"1517","endLine":143,"endColumn":40},{"ruleId":"1514","severity":1,"message":"1875","line":15,"column":3,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1726","line":19,"column":22,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1727","line":19,"column":30,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1603","line":19,"column":45,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":50},{"ruleId":"1514","severity":1,"message":"1876","line":25,"column":3,"nodeType":"1516","messageId":"1517","endLine":25,"endColumn":16},{"ruleId":"1514","severity":1,"message":"1877","line":42,"column":17,"nodeType":"1516","messageId":"1517","endLine":42,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1730","line":57,"column":10,"nodeType":"1516","messageId":"1517","endLine":57,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1731","line":65,"column":6,"nodeType":"1528","endLine":65,"endColumn":30,"suggestions":"1878"},{"ruleId":"1557","severity":1,"message":"1558","line":69,"column":35,"nodeType":"1559","messageId":"1560","endLine":69,"endColumn":37},{"ruleId":"1561","severity":1,"message":"1562","line":70,"column":27,"nodeType":"1563","messageId":"1564","endLine":70,"endColumn":29},{"ruleId":"1557","severity":1,"message":"1558","line":73,"column":47,"nodeType":"1559","messageId":"1560","endLine":73,"endColumn":49},{"ruleId":"1561","severity":1,"message":"1562","line":74,"column":35,"nodeType":"1563","messageId":"1564","endLine":74,"endColumn":37},{"ruleId":"1557","severity":1,"message":"1558","line":77,"column":43,"nodeType":"1559","messageId":"1560","endLine":77,"endColumn":45},{"ruleId":"1561","severity":1,"message":"1562","line":78,"column":35,"nodeType":"1563","messageId":"1564","endLine":78,"endColumn":37},{"ruleId":"1514","severity":1,"message":"1879","line":86,"column":9,"nodeType":"1516","messageId":"1517","endLine":86,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1578","line":122,"column":29,"nodeType":"1516","messageId":"1517","endLine":122,"endColumn":35},{"ruleId":"1514","severity":1,"message":"1579","line":122,"column":37,"nodeType":"1516","messageId":"1517","endLine":122,"endColumn":44},{"ruleId":"1557","severity":1,"message":"1558","line":229,"column":55,"nodeType":"1559","messageId":"1560","endLine":229,"endColumn":57},{"ruleId":"1557","severity":1,"message":"1558","line":251,"column":55,"nodeType":"1559","messageId":"1560","endLine":251,"endColumn":57},{"ruleId":"1557","severity":1,"message":"1558","line":255,"column":61,"nodeType":"1559","messageId":"1560","endLine":255,"endColumn":63},{"ruleId":"1514","severity":1,"message":"1880","line":19,"column":10,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":24},{"ruleId":"1514","severity":1,"message":"1881","line":19,"column":26,"nodeType":"1516","messageId":"1517","endLine":19,"endColumn":43},{"ruleId":"1526","severity":1,"message":"1882","line":47,"column":6,"nodeType":"1528","endLine":47,"endColumn":38,"suggestions":"1883"},{"ruleId":"1514","severity":1,"message":"1532","line":4,"column":30,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1769","line":5,"column":10,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1810","line":49,"column":13,"nodeType":"1516","messageId":"1517","endLine":49,"endColumn":20},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1745","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1689","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1884","line":14,"column":24,"nodeType":"1516","messageId":"1517","endLine":14,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1693","line":60,"column":31,"nodeType":"1559","messageId":"1560","endLine":60,"endColumn":33},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1745","line":4,"column":10,"nodeType":"1516","messageId":"1517","endLine":4,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1689","line":5,"column":8,"nodeType":"1516","messageId":"1517","endLine":5,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1690","line":12,"column":10,"nodeType":"1516","messageId":"1517","endLine":12,"endColumn":26},{"ruleId":"1514","severity":1,"message":"1884","line":15,"column":24,"nodeType":"1516","messageId":"1517","endLine":15,"endColumn":39},{"ruleId":"1557","severity":1,"message":"1693","line":63,"column":31,"nodeType":"1559","messageId":"1560","endLine":63,"endColumn":33},{"ruleId":"1565","severity":1,"message":"1566","line":15,"column":9,"nodeType":"1567","endLine":15,"endColumn":51},{"ruleId":"1565","severity":1,"message":"1566","line":20,"column":9,"nodeType":"1567","endLine":20,"endColumn":51},{"ruleId":"1565","severity":1,"message":"1566","line":25,"column":9,"nodeType":"1567","endLine":25,"endColumn":51},{"ruleId":"1526","severity":1,"message":"1527","line":33,"column":6,"nodeType":"1528","endLine":33,"endColumn":8,"suggestions":"1885"},{"ruleId":"1514","severity":1,"message":"1886","line":34,"column":10,"nodeType":"1516","messageId":"1517","endLine":34,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1887","line":34,"column":30,"nodeType":"1516","messageId":"1517","endLine":34,"endColumn":51},{"ruleId":"1514","severity":1,"message":"1888","line":35,"column":10,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1889","line":35,"column":17,"nodeType":"1516","messageId":"1517","endLine":35,"endColumn":25},{"ruleId":"1514","severity":1,"message":"1890","line":36,"column":24,"nodeType":"1516","messageId":"1517","endLine":36,"endColumn":39},{"ruleId":"1649","severity":1,"message":"1650","line":176,"column":11,"nodeType":"1567","endLine":176,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1552","line":3,"column":18,"nodeType":"1516","messageId":"1517","endLine":3,"endColumn":30},{"ruleId":"1514","severity":1,"message":"1573","line":55,"column":17,"nodeType":"1516","messageId":"1517","endLine":55,"endColumn":23},{"ruleId":"1649","severity":1,"message":"1650","line":316,"column":31,"nodeType":"1567","endLine":316,"endColumn":58},{"ruleId":"1649","severity":1,"message":"1650","line":317,"column":19,"nodeType":"1567","endLine":317,"endColumn":46},{"ruleId":"1514","severity":1,"message":"1532","line":1,"column":27,"nodeType":"1516","messageId":"1517","endLine":1,"endColumn":36},{"ruleId":"1514","severity":1,"message":"1891","line":22,"column":8,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":14},{"ruleId":"1514","severity":1,"message":"1892","line":23,"column":8,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":17},{"ruleId":"1514","severity":1,"message":"1893","line":30,"column":10,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1894","line":30,"column":24,"nodeType":"1516","messageId":"1517","endLine":30,"endColumn":39},{"ruleId":"1514","severity":1,"message":"1895","line":59,"column":10,"nodeType":"1516","messageId":"1517","endLine":59,"endColumn":18},{"ruleId":"1514","severity":1,"message":"1896","line":60,"column":10,"nodeType":"1516","messageId":"1517","endLine":60,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1689","line":9,"column":8,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1897","line":17,"column":8,"nodeType":"1516","messageId":"1517","endLine":17,"endColumn":27},{"ruleId":"1514","severity":1,"message":"1898","line":22,"column":10,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":34},{"ruleId":"1514","severity":1,"message":"1899","line":22,"column":36,"nodeType":"1516","messageId":"1517","endLine":22,"endColumn":63},{"ruleId":"1526","severity":1,"message":"1900","line":41,"column":6,"nodeType":"1528","endLine":41,"endColumn":28,"suggestions":"1901"},{"ruleId":"1514","severity":1,"message":"1532","line":2,"column":20,"nodeType":"1516","messageId":"1517","endLine":2,"endColumn":29},{"ruleId":"1514","severity":1,"message":"1902","line":6,"column":3,"nodeType":"1516","messageId":"1517","endLine":6,"endColumn":12},{"ruleId":"1514","severity":1,"message":"1903","line":7,"column":3,"nodeType":"1516","messageId":"1517","endLine":7,"endColumn":10},{"ruleId":"1514","severity":1,"message":"1689","line":10,"column":8,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":11},{"ruleId":"1514","severity":1,"message":"1904","line":23,"column":10,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":28},{"ruleId":"1514","severity":1,"message":"1905","line":23,"column":30,"nodeType":"1516","messageId":"1517","endLine":23,"endColumn":47},{"ruleId":"1514","severity":1,"message":"1906","line":8,"column":3,"nodeType":"1516","messageId":"1517","endLine":8,"endColumn":13},{"ruleId":"1514","severity":1,"message":"1815","line":9,"column":3,"nodeType":"1516","messageId":"1517","endLine":9,"endColumn":9},{"ruleId":"1514","severity":1,"message":"1907","line":10,"column":3,"nodeType":"1516","messageId":"1517","endLine":10,"endColumn":22},{"ruleId":"1514","severity":1,"message":"1908","line":11,"column":3,"nodeType":"1516","messageId":"1517","endLine":11,"endColumn":15},{"ruleId":"1514","severity":1,"message":"1909","line":46,"column":11,"nodeType":"1516","messageId":"1517","endLine":46,"endColumn":19},{"ruleId":"1514","severity":1,"message":"1910","line":51,"column":10,"nodeType":"1516","messageId":"1517","endLine":51,"endColumn":13},"no-unused-vars","'persistReducer' is defined but never used.","Identifier","unusedVar","'autoMergeLevel2' is defined but never used.","'storage' is defined but never used.","'UserReducer' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Switch' is defined but never used.","'RouteWithSubRoutes' is defined but never used.","'routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1911"],["1912"],"'Suspense' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'withAuth' is defined but never used.","'setDialogBox' is defined but never used.","'Route' is defined but never used.","'ServiceInfoForm' is defined but never used.","'RegisteredRepresentativeForm' is defined but never used.","'BusinessUnitForm' is defined but never used.","'ProductDetailForm' is defined but never used.","'BankInfoForm' is defined but never used.","'user' is assigned a value but never used.","'Redirect' is defined but never used.","'Fragment' is defined but never used.","'Skeleton' is defined but never used.","'SkeletonTheme' is defined but never used.",["1913"],"'Homepage' is defined but never used.","'NavBar' is defined but never used.","'LoginForm' is defined but never used.","'Router' is defined but never used.","'ErrorMessage' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","React Hook useCallback has a missing dependency: 'handleViewportChange'. Either include it or remove the dependency array.",["1914"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["1915"],"'values' is assigned a value but never used.","'Link' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faAsterisk' is defined but never used.","'initialValues' is assigned a value but never used.","'errors' is assigned a value but never used.","'touched' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","'validateMerchantForm2' is defined but never used.","'FormError' is defined but never used.","'axios' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Stepper' is defined but never used.","'faDesktop' is defined but never used.","'backgroundStyling' is assigned a value but never used.","'MainContent' is defined but never used.","'VoucherToolBar' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'providerInfo' is assigned a value but never used.","'upcomingProduct' is assigned a value but never used.",["1916"],["1917"],"'location' is assigned a value but never used.","'Footer' is defined but never used.","'ToolBar' is defined but never used.","'Popup' is defined but never used.","'io' is defined but never used.","'setDepartureCoordinates' is assigned a value but never used.","'setArrivalCoordinates' is assigned a value but never used.","'loading' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'cancelStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllProductFromOrderAPI', 'getOrderStatusAPI', and 'match.params.order_code'. Either include them or remove the dependency array.",["1918"],"'orderData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order_code' and 'user.socket'. Either include them or remove the dependency array.",["1919"],"React Hook useEffect has missing dependencies: 'arrivalCoordinates' and 'departureCoordinates'. Either include them or remove the dependency array.",["1920"],"'ShipperLocation' is defined but never used.","'faCartArrowDown' is defined but never used.","React Hook useEffect has a missing dependency: 'shipper.socket'. Either include it or remove the dependency array.",["1921"],"'sendMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'messages' and 'shipper.socket'. Either include them or remove the dependency array.",["1922"],"'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.match.params.uid'. Either include them or remove the dependency array.",["1923"],"React Hook useEffect has missing dependencies: 'orderForm.subtotal' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1924"],"'orderItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCart', 'props.match.params.uid', 'user.isUserAuthenticated', and 'user.profile.user_id'. Either include them or remove the dependency array.",["1925"],"'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","'payload' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Logo' is defined but never used.","'i18n' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1926","1927"],["1928","1929"],["1930","1931"],["1932","1933"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faStar' is defined but never used.","'selectedRating' is assigned a value but never used.","'setSelectedRating' is assigned a value but never used.","'faShopify' is defined but never used.","'t' is assigned a value but never used.","'faExchangeAlt' is defined but never used.","'faGlobe' is defined but never used.","'faKey' is defined but never used.","'faLanguage' is defined but never used.","'faLock' is defined but never used.","'faSignLanguage' is defined but never used.","'faThumbsUp' is defined but never used.","'faUserCog' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'faHeart2' is defined but never used.","'faHeart1' is defined but never used.","'faGetPocket' is defined but never used.","'faGrinHearts' is defined but never used.","'LABEL_SIZE' is assigned a value but never used.","'initialValues1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFavoriteProvider' and 'user.profile.user_id'. Either include them or remove the dependency array.",["1934"],"'showEditPassword' is assigned a value but never used.","'setShowEditPassword' is assigned a value but never used.","'handleSubmitForm1' is assigned a value but never used.","'match' is assigned a value but never used.","'filterMode' is assigned a value but never used.","'setFilterMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrderHistoryAPI'. Either include it or remove the dependency array.",["1935"],"'IosApp' is defined but never used.","'AndroidApp' is defined but never used.","'faServicestack' is defined but never used.","'faCogs' is defined but never used.","'faQuestion' is defined but never used.","'ErrorAlert' is assigned a value but never used.","'Tag' is defined but never used.","'faCommentsDollar' is defined but never used.","React Hook useEffect has a missing dependency: 'props.list'. Either include it or remove the dependency array. If 'setCategoryList' needs the current value of 'props.list', you can also switch to useReducer instead of useState and read 'props.list' in the reducer.",["1936"],"Expected '!==' and instead saw '!='.","'setCurLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'curLimit', 'curOffset', 'getAllProvider', 'getProviderGroup', 'user.currentAddress.latitude', 'user.currentAddress.longitude', and 'user.profile?.user_id'. Either include them or remove the dependency array.",["1937"],"'faGlasses' is defined but never used.","'Carousel' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'ReactDOM' is defined but never used.","'faCartPlus' is defined but never used.","'portalRoot' is assigned a value but never used.","'disableNextClick' is assigned a value but never used.","'CREATE_ORDER' is defined but never used.","'getProviderGroup' is defined but never used.","'getAllProvider' is defined but never used.","'ProviderGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'props.categoryId', 'props.categoryType', 'props.user.profile.user_id', 'searchAPI', and 'setTotalResult'. Either include them or remove the dependency array.",["1938"],"'setArrivalCoordinate' is assigned a value but never used.","'departureCoordinates' is assigned a value but never used.","'showRemoveCartDialog' is assigned a value but never used.",["1939"],"React Hook useEffect has a missing dependency: 'setOrderForm'. Either include it or remove the dependency array.",["1940"],"React Hook useEffect has missing dependencies: 'deliveryOption', 'getAddressBookAPI', 'props.match.params.uid', and 'setOrderForm'. Either include them or remove the dependency array.",["1941"],"React Hook useEffect has missing dependencies: 'getDeliveryFee', 'props', and 'setOrderForm'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1942"],"React Hook useEffect has a missing dependency: 'viewport'. Either include it or remove the dependency array. You can also do a functional update 'setViewport(v => ...)' if you only need 'viewport' in the 'setViewport' call.",["1943"],"'useEffect' is assigned a value but never used.","'propTypes' is defined but never used.","'Source' is defined but never used.","'Layer' is defined but never used.","'faHouseUser' is defined but never used.","'city' is defined but never used.","'contact' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAddressBook'. Either include it or remove the dependency array.",["1944"],"'file' is assigned a value but never used.","'setBannerContent' is assigned a value but never used.","'setCardDetail' is assigned a value but never used.","'setOrderDetail' is assigned a value but never used.","'Provider' is defined but never used.","'useSearchParams' is defined but never used.","React Hook useEffect has a missing dependency: 'TabList.tab1'. Either include it or remove the dependency array.",["1945"],"'faSpeakerDeck' is defined but never used.","'selectedFeature' is assigned a value but never used.","'faClipboard' is defined but never used.","'faCopy' is defined but never used.","'faSearch' is defined but never used.","'Background' is defined but never used.","'ProviderDetail' is defined but never used.","'promotions' is assigned a value but never used.",["1946"],"'Avatar' is defined but never used.","'isLast' is assigned a value but never used.","'getScheduleTime' is defined but never used.","'setErrorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProviderScheduleTime' and 'user?.userCart?.provider_id'. Either include them or remove the dependency array.",["1947"],"'faBars' is defined but never used.","'faChevronRight' is defined but never used.","'CategoryLevelOne' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCategoryAPI'. Either include it or remove the dependency array. If 'getAllCategoryAPI' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1948"],"'categoryLevelOneContent' is assigned a value but never used.","'setCategoryLevelOneContent' is assigned a value but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'setCategoryType' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order_code', 'setMessages', and 'socket'. Either include them or remove the dependency array.",["1949"],"'DragDropContext' is defined but never used.","'Draggable' is defined but never used.","'Droppable' is defined but never used.","'faSave' is defined but never used.","'setDialogContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProductListAPI'. Either include it or remove the dependency array.",["1950"],"'faImage' is defined but never used.","'Metric' is defined but never used.","'ProgressBar' is defined but never used.","'Tabs' is defined but never used.","'faCalendarPlus' is defined but never used.","'faPlus' is defined but never used.","'result1' is assigned a value but never used.","'result2' is assigned a value but never used.","'result3' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProviderOrderByTime', 'getProviderRevenueByTime', 'getProviderTopCategoryByUnitAPI', 'getProviderTopProductBySalesAPI', and 'getProviderTopProductByUnitAPI'. Either include them or remove the dependency array.",["1951"],"'CustomButtonGroup' is defined but never used.","'faInfoCircle' is defined but never used.","'responsive' is assigned a value but never used.","'setCurrentTime' is assigned a value but never used.","'faChevronUp' is defined but never used.","'DialogBox' is defined but never used.","'provider' is assigned a value but never used.","'setProductItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'productItem.product_id' and 'user?.userCart?.cart'. Either include them or remove the dependency array.",["1952"],"React Hook useEffect has missing dependencies: 'getCart', 'user.isUserAuthenticated', and 'user.profile?.user_id'. Either include them or remove the dependency array.",["1953"],"'notifications' is assigned a value but never used.","'status' is assigned a value but never used.","'useHistory' is defined but never used.","'faThumbsDown' is defined but never used.","'Modal' is defined but never used.","'setCurrentTab' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllEcouponAPI' and 'getAllPromotionAPI'. Either include them or remove the dependency array.",["1954"],"'ProductList' is defined but never used.","'faCog' is defined but never used.","'faDownload' is defined but never used.","'product' is assigned a value but never used.","'getProductListAPI' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUpcomingProductAPI' and 'options'. Either include them or remove the dependency array. You can also do a functional update 'setOptions(o => ...)' if you only need 'options' in the 'setOptions' call.",["1955"],"'ReactMapGl' is defined but never used.","'Marker' is defined but never used.",["1956"],"'addToCart' is defined but never used.","'showSurveyNote' is assigned a value but never used.","'setShowSurveyNote' is assigned a value but never used.","'faChevronCircleLeft' is defined but never used.","'faChevronCircleRight' is defined but never used.","'CategorySelector' is defined but never used.","'faCircle' is defined but never used.","'locations' is defined but never used.","'faHome' is defined but never used.","'faBuilding' is defined but never used.","'faAddressBook' is defined but never used.","'faStore' is defined but never used.","'faShoppingBasket' is defined but never used.","'faMapMarkedAlt' is defined but never used.","'selectedTypeStyle' is assigned a value but never used.","'SwitchSelector' is defined but never used.","'faSort' is defined but never used.","'productList' is assigned a value but never used.",["1957"],"'handleDragEnd' is assigned a value but never used.","'orderListData' is defined but never used.","'ViewOrderDetail' is defined but never used.","'orderList' is assigned a value but never used.","'filterOrderList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllOrderAPI' and 'provider?.orderList.length'. Either include them or remove the dependency array.",["1958"],"'NavigationControl' is defined but never used.",["1959"],["1960"],"React Hook useEffect has missing dependencies: 'getProductListAPI' and 'user.provider_id'. Either include them or remove the dependency array.",["1961"],"React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.",["1962"],"'grid' is assigned a value but never used.","'data' is assigned a value but never used.","'faArrowCircleRight' is defined but never used.","'faCommentDots' is defined but never used.","'faEllipsisH' is defined but never used.","'faUtensils' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllOrderAPI' and 'provider.orderList.length'. Either include them or remove the dependency array.",["1963"],"React Hook useEffect has missing dependencies: 'getAllProductFromOrderAPI', 'getOrderStatusAPI', and 'provider.socket'. Either include them or remove the dependency array.",["1964"],"'orderStatus' is assigned a value but never used.","'res' is assigned a value but never used.","'choices' is assigned a value but never used.","'setChoices' is assigned a value but never used.","'currentId' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.",["1965"],["1966"],"React Hook useEffect has a missing dependency: 'foodCategory'. Either include it or remove the dependency array.",["1967"],"'SelectMenuCategory' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'user.provider_id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1968"],["1969"],"'faUndo' is defined but never used.","'addAddressAPI' is defined but never used.","'addAddressAPI' is assigned a value but never used.",["1970"],"'handleGeoCoding' is assigned a value but never used.","'nextSlideStyle' is assigned a value but never used.","'setNextSlideStyle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contentSlideInfo'. Either include it or remove the dependency array. You can also do a functional update 'setContentSlideInfo(c => ...)' if you only need 'contentSlideInfo' in the 'setContentSlideInfo' call.",["1971"],"'setCategoryList' is assigned a value but never used.",["1972"],"'enableVerifyButton' is assigned a value but never used.","'setEnableVerifyButton' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setVerifiedcode' is assigned a value but never used.","'cities' is defined but never used.","'districts' is defined but never used.","'selectedCode' is assigned a value but never used.","'setSelectedCode' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'AddAdditionalOption' is defined but never used.","'filteredAdditionalOption' is assigned a value but never used.","'setFilteredAdditionalOption' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'choices' and 'props.additionalOption'. Either include them or remove the dependency array.",["1973"],"'faRecycle' is defined but never used.","'faTrash' is defined but never used.","'additionalListList' is assigned a value but never used.","'setAdditionalList' is assigned a value but never used.","'LoadScript' is defined but never used.","'StandaloneSearchBox' is defined but never used.","'Autocomplete' is defined but never used.","'isLoaded' is assigned a value but never used.","'map' is assigned a value but never used.",{"desc":"1974","fix":"1975"},{"desc":"1976","fix":"1977"},{"desc":"1974","fix":"1978"},{"desc":"1979","fix":"1980"},{"desc":"1974","fix":"1981"},{"desc":"1974","fix":"1982"},{"desc":"1974","fix":"1983"},{"desc":"1984","fix":"1985"},{"desc":"1986","fix":"1987"},{"desc":"1988","fix":"1989"},{"desc":"1990","fix":"1991"},{"desc":"1992","fix":"1993"},{"desc":"1994","fix":"1995"},{"desc":"1996","fix":"1997"},{"desc":"1998","fix":"1999"},{"messageId":"2000","fix":"2001","desc":"2002"},{"messageId":"2003","fix":"2004","desc":"2005"},{"messageId":"2000","fix":"2006","desc":"2002"},{"messageId":"2003","fix":"2007","desc":"2005"},{"messageId":"2000","fix":"2008","desc":"2002"},{"messageId":"2003","fix":"2009","desc":"2005"},{"messageId":"2000","fix":"2010","desc":"2002"},{"messageId":"2003","fix":"2011","desc":"2005"},{"desc":"2012","fix":"2013"},{"desc":"2014","fix":"2015"},{"desc":"2016","fix":"2017"},{"desc":"2018","fix":"2019"},{"desc":"2020","fix":"2021"},{"desc":"2022","fix":"2023"},{"desc":"2024","fix":"2025"},{"desc":"2026","fix":"2027"},{"desc":"2028","fix":"2029"},{"desc":"2030","fix":"2031"},{"desc":"2032","fix":"2033"},{"desc":"2034","fix":"2035"},{"desc":"1974","fix":"2036"},{"desc":"2037","fix":"2038"},{"desc":"2039","fix":"2040"},{"desc":"2041","fix":"2042"},{"desc":"2043","fix":"2044"},{"desc":"2045","fix":"2046"},{"desc":"2047","fix":"2048"},{"desc":"2049","fix":"2050"},{"desc":"2051","fix":"2052"},{"desc":"2053","fix":"2054"},{"desc":"2055","fix":"2056"},{"desc":"2043","fix":"2057"},{"desc":"2058","fix":"2059"},{"desc":"2043","fix":"2060"},{"desc":"2061","fix":"2062"},{"desc":"2043","fix":"2063"},{"desc":"2064","fix":"2065"},{"desc":"2066","fix":"2067"},{"desc":"2068","fix":"2069"},{"desc":"2055","fix":"2070"},{"desc":"1974","fix":"2071"},{"desc":"2072","fix":"2073"},{"desc":"2061","fix":"2074"},{"desc":"2072","fix":"2075"},{"desc":"2076","fix":"2077"},{"desc":"2078","fix":"2079"},{"desc":"1974","fix":"2080"},{"desc":"2081","fix":"2082"},"Update the dependencies array to be: [props]",{"range":"2083","text":"2084"},"Update the dependencies array to be: [props, props.user.profile.role]",{"range":"2085","text":"2086"},{"range":"2087","text":"2084"},"Update the dependencies array to be: [handleViewportChange]",{"range":"2088","text":"2089"},{"range":"2090","text":"2084"},{"range":"2091","text":"2084"},{"range":"2092","text":"2084"},"Update the dependencies array to be: [getAllProductFromOrderAPI, getOrderStatusAPI, match.params.order_code]",{"range":"2093","text":"2094"},"Update the dependencies array to be: [order_code, user.socket]",{"range":"2095","text":"2096"},"Update the dependencies array to be: [arrivalCoordinates, departureCoordinates]",{"range":"2097","text":"2098"},"Update the dependencies array to be: [shipper.socket]",{"range":"2099","text":"2100"},"Update the dependencies array to be: [messages, orderCode, shipper.socket]",{"range":"2101","text":"2102"},"Update the dependencies array to be: [props.history, props.match.params.uid, props.user.profile.user_id]",{"range":"2103","text":"2104"},"Update the dependencies array to be: [orderForm.promotion_code, orderForm.subtotal, props]",{"range":"2105","text":"2106"},"Update the dependencies array to be: [getCart, props.match.params.uid, user.isUserAuthenticated, user.profile.user_id]",{"range":"2107","text":"2108"},"removeEscape",{"range":"2109","text":"2110"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2111","text":"2112"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2113","text":"2110"},{"range":"2114","text":"2112"},{"range":"2115","text":"2110"},{"range":"2116","text":"2112"},{"range":"2117","text":"2110"},{"range":"2118","text":"2112"},"Update the dependencies array to be: [getFavoriteProvider, user.currentAddress, user.profile.user_id]",{"range":"2119","text":"2120"},"Update the dependencies array to be: [getOrderHistoryAPI, user.profile?.user_id]",{"range":"2121","text":"2122"},"Update the dependencies array to be: [props.list, searchTerm]",{"range":"2123","text":"2124"},"Update the dependencies array to be: [curLimit, curOffset, getAllProvider, getProviderGroup, user.currentAddress.latitude, user.currentAddress.loading, user.currentAddress.longitude, user.profile?.user_id]",{"range":"2125","text":"2126"},"Update the dependencies array to be: [props.categoryId, props.categoryType, props.user.profile.user_id, query, searchAPI, setTotalResult, type]",{"range":"2127","text":"2128"},"Update the dependencies array to be: [props, props.user.userCart.provider_id]",{"range":"2129","text":"2130"},"Update the dependencies array to be: [setOrderForm, user.currentAddress]",{"range":"2131","text":"2132"},"Update the dependencies array to be: [deliveryOption, getAddressBookAPI, props.match.params.uid, setOrderForm]",{"range":"2133","text":"2134"},"Update the dependencies array to be: [getDeliveryFee, location, props, setOrderForm, user.userCart.provider_id]",{"range":"2135","text":"2136"},"Update the dependencies array to be: [arrivalCoordinates, location, viewport]",{"range":"2137","text":"2138"},"Update the dependencies array to be: [fetchAddressBook, user.profile]",{"range":"2139","text":"2140"},"Update the dependencies array to be: [TabList.tab1, currentTab]",{"range":"2141","text":"2142"},{"range":"2143","text":"2084"},"Update the dependencies array to be: [getProviderScheduleTime, user?.userCart?.provider_id]",{"range":"2144","text":"2145"},"Update the dependencies array to be: [getAllCategoryAPI]",{"range":"2146","text":"2147"},"Update the dependencies array to be: [order_code, setMessages, socket]",{"range":"2148","text":"2149"},"Update the dependencies array to be: [getProductListAPI, user.provider_id]",{"range":"2150","text":"2151"},"Update the dependencies array to be: [getProviderOrderByTime, getProviderRevenueByTime, getProviderTopCategoryByUnitAPI, getProviderTopProductBySalesAPI, getProviderTopProductByUnitAPI, user.provider_id]",{"range":"2152","text":"2153"},"Update the dependencies array to be: [productItem.product_id, user?.userCart?.cart]",{"range":"2154","text":"2155"},"Update the dependencies array to be: [getCart, user.isUserAuthenticated, user.profile?.user_id]",{"range":"2156","text":"2157"},"Update the dependencies array to be: [getAllEcouponAPI, getAllPromotionAPI, user.provider_id]",{"range":"2158","text":"2159"},"Update the dependencies array to be: [getUpcomingProductAPI, options, user.provider_id]",{"range":"2160","text":"2161"},"Update the dependencies array to be: [props, props.user.provider_id]",{"range":"2162","text":"2163"},{"range":"2164","text":"2151"},"Update the dependencies array to be: [getAllOrderAPI, provider?.orderList.length, user.provider_id]",{"range":"2165","text":"2166"},{"range":"2167","text":"2151"},"Update the dependencies array to be: [props, user.provider_id]",{"range":"2168","text":"2169"},{"range":"2170","text":"2151"},"Update the dependencies array to be: [items, selectedProduct]",{"range":"2171","text":"2172"},"Update the dependencies array to be: [getAllOrderAPI, provider.orderList.length, user.provider_id]",{"range":"2173","text":"2174"},"Update the dependencies array to be: [getAllProductFromOrderAPI, getOrderStatusAPI, provider.socket, user.provider_id]",{"range":"2175","text":"2176"},{"range":"2177","text":"2163"},{"range":"2178","text":"2084"},"Update the dependencies array to be: [foodCategory, selectedMainFood]",{"range":"2179","text":"2180"},{"range":"2181","text":"2169"},{"range":"2182","text":"2180"},"Update the dependencies array to be: [fetchAddressBook, user.profile.user_id]",{"range":"2183","text":"2184"},"Update the dependencies array to be: [images, currentSlide, interval, contentSlideInfo]",{"range":"2185","text":"2186"},{"range":"2187","text":"2084"},"Update the dependencies array to be: [choices, props.additionalOption, props.selectedOption]",{"range":"2188","text":"2189"},[2935,2937],"[props]",[3384,3411],"[props, props.user.profile.role]",[1128,1130],[2211,2213],"[handleViewportChange]",[2833,2835],[3827,3829],[4119,4121],[4061,4063],"[getAllProductFromOrderAPI, getOrderStatusAPI, match.params.order_code]",[5487,5489],"[order_code, user.socket]",[6134,6136],"[arrivalCoordinates, departureCoordinates]",[2334,2336],"[shipper.socket]",[2765,2776],"[messages, orderCode, shipper.socket]",[1025,1053],"[props.history, props.match.params.uid, props.user.profile.user_id]",[1845,1872],"[orderForm.promotion_code, orderForm.subtotal, props]",[2905,2907],"[getCart, props.match.params.uid, user.isUserAuthenticated, user.profile.user_id]",[1814,1815],"",[1814,1814],"\\",[1830,1831],[1830,1830],[1946,1947],[1946,1946],[1966,1967],[1966,1966],[1958,1979],"[getFavoriteProvider, user.currentAddress, user.profile.user_id]",[1494,1517],"[getOrderHistoryAPI, user.profile?.user_id]",[1170,1182],"[props.list, searchTerm]",[2978,3007],"[curLimit, curOffset, getAllProvider, getProviderGroup, user.currentAddress.latitude, user.currentAddress.loading, user.currentAddress.longitude, user.profile?.user_id]",[1350,1363],"[props.categoryId, props.categoryType, props.user.profile.user_id, query, searchAPI, setTotalResult, type]",[3130,3163],"[props, props.user.userCart.provider_id]",[3882,3903],"[setOrderForm, user.currentAddress]",[4332,4334],"[deliveryOption, getAddressBookAPI, props.match.params.uid, setOrderForm]",[4860,4897],"[getDeliveryFee, location, props, setOrderForm, user.userCart.provider_id]",[6129,6159],"[arrivalCoordinates, location, viewport]",[2761,2775],"[fetchAddressBook, user.profile]",[542,554],"[TabList.tab1, currentTab]",[3982,3984],[1076,1078],"[getProviderScheduleTime, user?.userCart?.provider_id]",[1034,1036],"[getAllCategoryAPI]",[799,801],"[order_code, setMessages, socket]",[1549,1567],"[getProductListAPI, user.provider_id]",[3838,3856],"[getProviderOrderByTime, getProviderRevenueByTime, getProviderTopCategoryByUnitAPI, getProviderTopProductBySalesAPI, getProviderTopProductByUnitAPI, user.provider_id]",[1589,1591],"[productItem.product_id, user?.userCart?.cart]",[967,969],"[getCart, user.isUserAuthenticated, user.profile?.user_id]",[2894,2912],"[getAllEcouponAPI, getAllPromotionAPI, user.provider_id]",[2989,3007],"[getUpcomingProductAPI, options, user.provider_id]",[1622,1647],"[props, props.user.provider_id]",[2935,2953],[1894,1912],"[getAllOrderAPI, provider?.orderList.length, user.provider_id]",[1930,1948],[2269,2287],"[props, user.provider_id]",[2554,2556],[2861,2878],"[items, selectedProduct]",[2346,2364],"[getAllOrderAPI, provider.orderList.length, user.provider_id]",[3307,3325],"[getAllProductFromOrderAPI, getOrderStatusAPI, provider.socket, user.provider_id]",[3128,3152],[3534,3536],[3812,3830],"[foodCategory, selectedMainFood]",[3409,3411],[3688,3706],[1928,1952],"[fetchAddressBook, user.profile.user_id]",[1704,1736],"[images, currentSlide, interval, contentSlideInfo]",[905,907],[1380,1402],"[choices, props.additionalOption, props.selectedOption]"]