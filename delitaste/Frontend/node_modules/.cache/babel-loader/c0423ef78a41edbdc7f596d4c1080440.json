{"ast":null,"code":"import axios from \"axios\";\nimport { UPDATE_REGISTER_STEP_STYLING, UPDATE_REGISTRATION_FORM, MAP_REGISTRATION_FORM, REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, SET_ALERT_NOTIFICATION, REMOVE_ALERT_NOTIFICATION, CHECK_DUPLICATION_SUCCESS, SET_EMAIL_VERIFICATION_CODE, SET_EMAIL_VERIFICATION_STATUS, GET_PROFILE_SUCCESS, SET_LOADING, SIGN_OUT, GET_CONTACT, SET_CURRENT_LOCATION, GET_NOTIFICATION, SET_NOTIFICATION_SOCKET } from \"store/actions/types\"; //UPDATE UI\n\nexport const updateStepStyling = stepStyle => dispatch => {\n  dispatch({\n    type: UPDATE_REGISTER_STEP_STYLING,\n    payload: {\n      styling: stepStyle\n    }\n  });\n};\nexport const updateRegistrationFormData = formData => dispatch => {\n  dispatch({\n    type: UPDATE_REGISTRATION_FORM,\n    payload: {\n      formData: formData\n    }\n  });\n};\nexport const mapRegistrationForm = (form, msg) => dispatch => {\n  dispatch({\n    type: MAP_REGISTRATION_FORM,\n    payload: {\n      currentForm: form\n    }\n  });\n};\nexport const setLoading = state => dispatch => {\n  dispatch({\n    type: SET_LOADING,\n    payload: {\n      isLoading: state\n    }\n  });\n};\nexport const userSignOut = () => dispatch => {\n  dispatch({\n    type: SIGN_OUT,\n    payload: {\n      isUserAuthenticated: false,\n      profile: null,\n      loginState: false\n    }\n  });\n}; //REGISTRATION API\n//form 1: When user clicks on \"Sign Up\" button -> call this api to check email & phone duplication\n\nexport const checkDuplicationAPI = (email, phone) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    phone\n  });\n\n  try {\n    const endpoint = \"v1/api/auth/check-exist-email-and-phone\";\n    const res = await axios.post(endpoint, body, config);\n    const {\n      isPhoneDuplicated,\n      isEmailDuplicated\n    } = res.data;\n\n    if (isPhoneDuplicated || isEmailDuplicated) {\n      const alertMsg = \"Your account has already in use.\";\n      dispatch({\n        type: SET_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: true,\n          msg: alertMsg\n        }\n      });\n    } else {\n      dispatch({\n        type: CHECK_DUPLICATION_SUCCESS,\n        payload: {}\n      });\n      dispatch({\n        type: REMOVE_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: false,\n          msg: \"\"\n        }\n      });\n    }\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n  }\n}; //form 2: When user clicks on \"Verify Email\" button -> call this api to insert submittedFormData to database\n\nexport const accountRegistrationAPI = formData => async dispatch => {\n  const {\n    email,\n    password,\n    phone,\n    first_name,\n    last_name\n  } = formData;\n  const registered_at = new Date().toISOString().slice(0, 10);\n  const role = 1;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    phone,\n    email,\n    password,\n    role,\n    registered_at\n  });\n\n  try {\n    const endpoint = \"/v1/api/auth/sign-up\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.registerState) {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: res.data.err\n      });\n    }\n  } catch (err) {\n    const errs = err.response.data.errors;\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: errs\n    });\n  }\n};\nexport const sendEmailVerificationCodeAPI = email => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n\n  try {\n    const endpoint = \"/v1/api/auth/send-code-with-email\";\n    const res = await axios.post(endpoint, body, config);\n    dispatch({\n      type: SET_EMAIL_VERIFICATION_CODE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const checkEmailVerificationCodeAPI = data => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const endpoint = \"/v1/api/auth/verify-code-with-email\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res);\n\n    if (res.data.status) {\n      dispatch({\n        type: SET_EMAIL_VERIFICATION_STATUS,\n        payload: {\n          isEmailVerified: res.data.status\n        }\n      });\n    } else {\n      const alertMsg = \"Your email verified code is incorrect. Please try again.\";\n      dispatch({\n        type: SET_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: true,\n          msg: alertMsg\n        }\n      });\n    }\n\n    return res.data.status;\n  } catch (err) {\n    console.log(err);\n  }\n}; //get profile\n\nexport const getUserProfileAPI = accessToken => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    accessToken: accessToken\n  });\n\n  try {\n    const endpoint = \"/v1/api/auth/get_profile\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data) {\n      dispatch({\n        type: GET_PROFILE_SUCCESS,\n        payload: {\n          profile: res.data.profile,\n          provider_id: res.data.provider_id\n        }\n      });\n      return res.data.profile.user_id;\n    }\n\n    return -1;\n  } catch (err) {\n    console.log(err);\n    return -1;\n  }\n};\nexport const getAddressBookAPI = id => async dispatch => {\n  try {\n    var _res$data;\n\n    const endpoint = `/v1/api/tastie/checkout/get_contact/${id}`;\n    const res = await axios.get(endpoint);\n\n    if ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.status) {\n      let phone = res.data.response.user_phone;\n      let address = res.data.response.user_address;\n      dispatch({\n        type: GET_CONTACT,\n        payload: {\n          phone,\n          address\n        }\n      });\n      return {\n        phone,\n        address\n      };\n    }\n  } catch (err) {\n    return {\n      phone: \"\",\n      address: []\n    };\n  }\n};\nexport const addAddressAPI = data => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const endpoint = \"/v1/api/tastie/add-customer-address\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n\n    if (res.data) {\n      console.log(res.data);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n/* have not integrated yet*/\n\nexport const updateAddressAPI = data => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const endpoint = \"/v1/api/tastie/update-customer-address\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n\n    if (res.data) {\n      console.log(res.data);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getDeliveryFee = (id, longitude, latitude) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    provider_id: id,\n    longitude,\n    latitude\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/delivery-fee-to-checkout\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data) return res.data.delivery_fee / 23000;\n    return 0;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const accountSignInAPI = data => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const endpoint = \"/v1/api/auth/sign-in\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.loginState) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: res.data\n      });\n    }\n\n    return {\n      state: res.data.loginState || \"\",\n      msg: res.data.loginState ? \"\" : res.data.err.message\n    };\n  } catch (err) {\n    const errs = err.response.data.errors;\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: errs\n    });\n    return false;\n  }\n};\nexport const setCurrentLocation = (latitude, longitude, address) => dispatch => {\n  dispatch({\n    type: SET_CURRENT_LOCATION,\n    payload: {\n      currentAddress: {\n        loading: true,\n        address,\n        latitude,\n        longitude\n      }\n    }\n  });\n};\nexport const addFavoriteProvider = (uid, pid) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: uid,\n    provider_id: pid\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/add-to-favorite\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) return true;\n    return false;\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n    return false;\n  }\n};\nexport const removeFavoriteProvider = (uid, pid) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: uid,\n    provider_id: pid\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/remove-from-favorite\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) return true;\n    return false;\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n    return false;\n  }\n};\nexport const getFavoriteProvider = (uid, latitude, longitude) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: uid,\n    latitude: String(latitude),\n    longitude: String(longitude)\n  });\n  console.log(body);\n\n  try {\n    const endpoint = \"/v1/api/tastie/home/get-list-provider-favorite\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n    if (res.data.status) return res.data.response;\n    return [];\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n    return [];\n  }\n};\nexport const getUserNotification = uid => async dispatch => {\n  try {\n    var _res$data2;\n\n    const endpoint = `/v1/api/tastie/order/get-all-notification/${uid}`;\n    const res = await axios.get(endpoint);\n\n    if ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.status) {\n      dispatch({\n        type: GET_NOTIFICATION,\n        payload: {\n          notifications: res.data.response\n        }\n      });\n      return res.data.response;\n    }\n  } catch (err) {\n    return [];\n  }\n};\nexport const setNotificationSocket = notification => dispatch => {\n  dispatch({\n    type: SET_NOTIFICATION_SOCKET,\n    payload: {\n      notification: notification\n    }\n  });\n};","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/UserAction/UserAction.js"],"names":["axios","UPDATE_REGISTER_STEP_STYLING","UPDATE_REGISTRATION_FORM","MAP_REGISTRATION_FORM","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","SET_ALERT_NOTIFICATION","REMOVE_ALERT_NOTIFICATION","CHECK_DUPLICATION_SUCCESS","SET_EMAIL_VERIFICATION_CODE","SET_EMAIL_VERIFICATION_STATUS","GET_PROFILE_SUCCESS","SET_LOADING","SIGN_OUT","GET_CONTACT","SET_CURRENT_LOCATION","GET_NOTIFICATION","SET_NOTIFICATION_SOCKET","updateStepStyling","stepStyle","dispatch","type","payload","styling","updateRegistrationFormData","formData","mapRegistrationForm","form","msg","currentForm","setLoading","state","isLoading","userSignOut","isUserAuthenticated","profile","loginState","checkDuplicationAPI","email","phone","config","headers","body","JSON","stringify","endpoint","res","post","isPhoneDuplicated","isEmailDuplicated","data","alertMsg","loadingAlert","err","errs","response","errors","console","log","accountRegistrationAPI","password","first_name","last_name","registered_at","Date","toISOString","slice","role","registerState","sendEmailVerificationCodeAPI","checkEmailVerificationCodeAPI","status","isEmailVerified","getUserProfileAPI","accessToken","provider_id","user_id","getAddressBookAPI","id","get","user_phone","address","user_address","addAddressAPI","updateAddressAPI","getDeliveryFee","longitude","latitude","delivery_fee","accountSignInAPI","message","setCurrentLocation","currentAddress","loading","addFavoriteProvider","uid","pid","removeFavoriteProvider","getFavoriteProvider","String","getUserNotification","notifications","setNotificationSocket","notification"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  UPDATE_REGISTER_STEP_STYLING,\n  UPDATE_REGISTRATION_FORM,\n  MAP_REGISTRATION_FORM,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  SET_ALERT_NOTIFICATION,\n  REMOVE_ALERT_NOTIFICATION,\n  CHECK_DUPLICATION_SUCCESS,\n  SET_EMAIL_VERIFICATION_CODE,\n  SET_EMAIL_VERIFICATION_STATUS,\n  GET_PROFILE_SUCCESS,\n  SET_LOADING,\n  SIGN_OUT,\n  GET_CONTACT,\n  SET_CURRENT_LOCATION,\n  GET_NOTIFICATION,\n  SET_NOTIFICATION_SOCKET,\n} from \"store/actions/types\";\n\n//UPDATE UI\nexport const updateStepStyling = (stepStyle) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REGISTER_STEP_STYLING,\n    payload: {\n      styling: stepStyle,\n    },\n  });\n};\n\nexport const updateRegistrationFormData = (formData) => (dispatch) => {\n  dispatch({\n    type: UPDATE_REGISTRATION_FORM,\n    payload: { formData: formData },\n  });\n};\n\nexport const mapRegistrationForm = (form, msg) => (dispatch) => {\n  dispatch({\n    type: MAP_REGISTRATION_FORM,\n    payload: { currentForm: form },\n  });\n};\n\nexport const setLoading = (state) => (dispatch) => {\n  dispatch({\n    type: SET_LOADING,\n    payload: { isLoading: state },\n  });\n};\n\nexport const userSignOut = () => (dispatch) => {\n  dispatch({\n    type: SIGN_OUT,\n    payload: { isUserAuthenticated: false, profile: null, loginState: false },\n  });\n};\n\n//REGISTRATION API\n//form 1: When user clicks on \"Sign Up\" button -> call this api to check email & phone duplication\nexport const checkDuplicationAPI = (email, phone) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    email,\n    phone,\n  });\n  try {\n    const endpoint = \"v1/api/auth/check-exist-email-and-phone\";\n    const res = await axios.post(endpoint, body, config);\n    const { isPhoneDuplicated, isEmailDuplicated } = res.data;\n    if (isPhoneDuplicated || isEmailDuplicated) {\n      const alertMsg = \"Your account has already in use.\";\n      dispatch({\n        type: SET_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: true,\n          msg: alertMsg,\n        },\n      });\n    } else {\n      dispatch({\n        type: CHECK_DUPLICATION_SUCCESS,\n        payload: {},\n      });\n      dispatch({\n        type: REMOVE_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: false,\n          msg: \"\",\n        },\n      });\n    }\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n  }\n};\n\n//form 2: When user clicks on \"Verify Email\" button -> call this api to insert submittedFormData to database\nexport const accountRegistrationAPI = (formData) => async (dispatch) => {\n  const { email, password, phone, first_name, last_name } = formData;\n  const registered_at = new Date().toISOString().slice(0, 10);\n  const role = 1;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    phone,\n    email,\n    password,\n    role,\n    registered_at,\n  });\n\n  try {\n    const endpoint = \"/v1/api/auth/sign-up\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.registerState) {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: res.data.err,\n      });\n    }\n  } catch (err) {\n    const errs = err.response.data.errors;\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: errs,\n    });\n  }\n};\n\nexport const sendEmailVerificationCodeAPI = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    email,\n  });\n  try {\n    const endpoint = \"/v1/api/auth/send-code-with-email\";\n    const res = await axios.post(endpoint, body, config);\n\n    dispatch({\n      type: SET_EMAIL_VERIFICATION_CODE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const checkEmailVerificationCodeAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/auth/verify-code-with-email\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res);\n    if (res.data.status) {\n      dispatch({\n        type: SET_EMAIL_VERIFICATION_STATUS,\n        payload: { isEmailVerified: res.data.status },\n      });\n    } else {\n      const alertMsg =\n        \"Your email verified code is incorrect. Please try again.\";\n      dispatch({\n        type: SET_ALERT_NOTIFICATION,\n        payload: {\n          loadingAlert: true,\n          msg: alertMsg,\n        },\n      });\n    }\n    return res.data.status;\n  } catch (err) {\n    console.log(err);\n  }\n};\n//get profile\nexport const getUserProfileAPI = (accessToken) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ accessToken: accessToken });\n  try {\n    const endpoint = \"/v1/api/auth/get_profile\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data) {\n      dispatch({\n        type: GET_PROFILE_SUCCESS,\n        payload: {\n          profile: res.data.profile,\n          provider_id: res.data.provider_id,\n        },\n      });\n      return res.data.profile.user_id;\n    }\n    return -1;\n  } catch (err) {\n    console.log(err);\n    return -1;\n  }\n};\n\nexport const getAddressBookAPI = (id) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/checkout/get_contact/${id}`;\n    const res = await axios.get(endpoint);\n    if (res.data?.status) {\n      let phone = res.data.response.user_phone;\n      let address = res.data.response.user_address;\n      dispatch({\n        type: GET_CONTACT,\n        payload: {\n          phone,\n          address,\n        },\n      });\n      return { phone, address };\n    }\n  } catch (err) {\n    return { phone: \"\", address: [] };\n  }\n};\n\nexport const addAddressAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/tastie/add-customer-address\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n    if (res.data) {\n      console.log(res.data);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n/* have not integrated yet*/\nexport const updateAddressAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/tastie/update-customer-address\";\n    const res = await axios.post(endpoint, body, config);\n    console.log(res.data);\n    if (res.data) {\n      console.log(res.data);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getDeliveryFee = (id, longitude, latitude) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    provider_id: id,\n    longitude,\n    latitude,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/delivery-fee-to-checkout\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data) return res.data.delivery_fee / 23000;\n    return 0;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const accountSignInAPI = (data) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify(data);\n  try {\n    const endpoint = \"/v1/api/auth/sign-in\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.loginState) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    } else {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: res.data,\n      });\n    }\n    return {\n      state: res.data.loginState || \"\",\n      msg: res.data.loginState ? \"\" : res.data.err.message,\n    };\n  } catch (err) {\n    const errs = err.response.data.errors;\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: errs,\n    });\n    return false;\n  }\n};\n\nexport const setCurrentLocation =\n  (latitude, longitude, address) => (dispatch) => {\n    dispatch({\n      type: SET_CURRENT_LOCATION,\n      payload: {\n        currentAddress: {\n          loading: true,\n          address,\n          latitude,\n          longitude,\n        },\n      },\n    });\n  };\n\nexport const addFavoriteProvider = (uid, pid) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    user_id: uid,\n    provider_id: pid,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/add-to-favorite\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) return true;\n    return false;\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n    return false;\n  }\n};\n\nexport const removeFavoriteProvider = (uid, pid) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    user_id: uid,\n    provider_id: pid,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/remove-from-favorite\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) return true;\n    return false;\n  } catch (err) {\n    const errs = err.response.data.errors;\n    console.log(errs);\n    return false;\n  }\n};\n\nexport const getFavoriteProvider =\n  (uid, latitude, longitude) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      user_id: uid,\n      latitude: String(latitude),\n      longitude: String(longitude),\n    });\n    console.log(body);\n    try {\n      const endpoint = \"/v1/api/tastie/home/get-list-provider-favorite\";\n      const res = await axios.post(endpoint, body, config);\n      console.log(res.data);\n      if (res.data.status) return res.data.response;\n      return [];\n    } catch (err) {\n      const errs = err.response.data.errors;\n      console.log(errs);\n      return [];\n    }\n  };\n\nexport const getUserNotification = (uid) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/order/get-all-notification/${uid}`;\n    const res = await axios.get(endpoint);\n    if (res.data?.status) {\n      dispatch({\n        type: GET_NOTIFICATION,\n        payload: {\n          notifications: res.data.response,\n        },\n      });\n      return res.data.response;\n    }\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const setNotificationSocket = (notification) => (dispatch) => {\n  dispatch({\n    type: SET_NOTIFICATION_SOCKET,\n    payload: { notification: notification },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}