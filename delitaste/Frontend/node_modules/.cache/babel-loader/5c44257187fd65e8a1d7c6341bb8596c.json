{"ast":null,"code":"import { CREATE_MERCHANT, UPDATE_SERVICE_INFO_FORM, UPDATE_REPRESENTATIVE_INFO_FORM, UPDATE_BUSINESS_UNIT_INFO_FORM, UPDATE_PRODUCT_DETAIL_INFO_FORM, UPDATE_BANK_INFO_FORM, SET_DASHBOARD_PROVIDER, SET_ORDER_LIST, SET_TOP_PRODUCT_BY_SALES, SET_TOP_PRODUCT_BY_UNIT, SET_CURRENT_ORDER_LIST, SET_TOP_CATEGORY_BY_UNIT, ADD_ORDER_TO_ORDER_LIST, UPDATE_ORDER_IN_ORDER_LIST } from \"store/actions/types\";\nimport \"store/actions/types\";\nimport io from \"socket.io-client\";\nconst initialState = {\n  isMerchantAuthenticated: false,\n  isServiceFormSubmitted: false,\n  isRepresentativeInfoFormSubmitted: false,\n  isBusinessUnitInfoFormSubmitted: false,\n  isProductDetailInfoFormSubmitted: false,\n  isBankInfoFormSubmitted: false,\n  currentForm: 0,\n  merchantId: \"\",\n  merchantPrefilledData: {},\n  provider: {\n    longitude: 106.68057155417674,\n    latitude: 10.768685473523648\n  },\n  socket: io(`http://157.230.243.92:3015`),\n  providerNotifications: [],\n  currentOrderList: [],\n  operation: [],\n  orderList: [],\n  topBySales: [],\n  topByUnit: [],\n  topCategory: []\n};\n\nconst ProviderReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_CURRENT_ORDER_LIST:\n      return { ...state,\n        ...payload\n      };\n\n    case SET_DASHBOARD_PROVIDER:\n      return { ...state,\n        ...payload,\n        provider: payload.provider,\n        operation: payload.operation\n      };\n\n    case ADD_ORDER_TO_ORDER_LIST:\n      const copy = state.orderList.filter(el => el.order_code !== payload.order.order_code);\n      state.orderList = copy;\n      state.orderList.unshift(payload.order);\n      return { ...state,\n        ...payload\n      };\n\n    case UPDATE_ORDER_IN_ORDER_LIST:\n      state.orderList.forEach(item => {\n        if (item.order_code === payload.order.order_code) item.status = 6;\n        return { ...state,\n          ...payload\n        };\n      });\n\n    case SET_ORDER_LIST:\n      return { ...state,\n        ...payload\n      };\n\n    case CREATE_MERCHANT:\n      return { ...state,\n        ...payload\n      };\n\n    case UPDATE_SERVICE_INFO_FORM:\n      return { ...state,\n        ...payload,\n        currentForm: 1\n      };\n\n    case UPDATE_REPRESENTATIVE_INFO_FORM:\n      return { ...state,\n        ...payload,\n        currentForm: 2\n      };\n\n    case UPDATE_BUSINESS_UNIT_INFO_FORM:\n      return { ...state,\n        ...payload,\n        currentForm: 3\n      };\n\n    case UPDATE_PRODUCT_DETAIL_INFO_FORM:\n      return { ...state,\n        ...payload,\n        currentForm: 4\n      };\n\n    case UPDATE_BANK_INFO_FORM:\n      return { ...state,\n        ...payload,\n        currentForm: -1\n      };\n\n    case SET_TOP_PRODUCT_BY_SALES:\n      return { ...state,\n        ...payload\n      };\n\n    case SET_TOP_PRODUCT_BY_UNIT:\n      return { ...state,\n        ...payload\n      };\n\n    case SET_TOP_CATEGORY_BY_UNIT:\n      return { ...state,\n        ...payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ProviderReducer;\nexport default ProviderReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderReducer\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/reducers/ProviderReducer/ProviderReducer.js"],"names":["CREATE_MERCHANT","UPDATE_SERVICE_INFO_FORM","UPDATE_REPRESENTATIVE_INFO_FORM","UPDATE_BUSINESS_UNIT_INFO_FORM","UPDATE_PRODUCT_DETAIL_INFO_FORM","UPDATE_BANK_INFO_FORM","SET_DASHBOARD_PROVIDER","SET_ORDER_LIST","SET_TOP_PRODUCT_BY_SALES","SET_TOP_PRODUCT_BY_UNIT","SET_CURRENT_ORDER_LIST","SET_TOP_CATEGORY_BY_UNIT","ADD_ORDER_TO_ORDER_LIST","UPDATE_ORDER_IN_ORDER_LIST","io","initialState","isMerchantAuthenticated","isServiceFormSubmitted","isRepresentativeInfoFormSubmitted","isBusinessUnitInfoFormSubmitted","isProductDetailInfoFormSubmitted","isBankInfoFormSubmitted","currentForm","merchantId","merchantPrefilledData","provider","longitude","latitude","socket","providerNotifications","currentOrderList","operation","orderList","topBySales","topByUnit","topCategory","ProviderReducer","state","action","type","payload","copy","filter","el","order_code","order","unshift","forEach","item","status"],"mappings":"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","sourcesContent":["import {\n  CREATE_MERCHANT,\n  UPDATE_SERVICE_INFO_FORM,\n  UPDATE_REPRESENTATIVE_INFO_FORM,\n  UPDATE_BUSINESS_UNIT_INFO_FORM,\n  UPDATE_PRODUCT_DETAIL_INFO_FORM,\n  UPDATE_BANK_INFO_FORM,\n  SET_DASHBOARD_PROVIDER,\n  SET_ORDER_LIST,\n  SET_TOP_PRODUCT_BY_SALES,\n  SET_TOP_PRODUCT_BY_UNIT,\n  SET_CURRENT_ORDER_LIST,\n  SET_TOP_CATEGORY_BY_UNIT,\n  ADD_ORDER_TO_ORDER_LIST,\n  UPDATE_ORDER_IN_ORDER_LIST,\n} from \"store/actions/types\";\nimport {} from \"store/actions/types\";\nimport io from \"socket.io-client\";\n\nconst initialState = {\n  isMerchantAuthenticated: false,\n  isServiceFormSubmitted: false,\n  isRepresentativeInfoFormSubmitted: false,\n  isBusinessUnitInfoFormSubmitted: false,\n  isProductDetailInfoFormSubmitted: false,\n  isBankInfoFormSubmitted: false,\n  currentForm: 0,\n  merchantId: \"\",\n  merchantPrefilledData: {},\n  provider: {\n    longitude: 106.68057155417674,\n    latitude: 10.768685473523648,\n  },\n  socket: io(`http://157.230.243.92:3015`),\n  providerNotifications: [],\n  currentOrderList: [],\n  operation: [],\n  orderList: [],\n  topBySales: [],\n  topByUnit: [],\n  topCategory: [],\n};\nconst ProviderReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_CURRENT_ORDER_LIST:\n      return { ...state, ...payload };\n    case SET_DASHBOARD_PROVIDER:\n      return {\n        ...state,\n        ...payload,\n        provider: payload.provider,\n        operation: payload.operation,\n      };\n    case ADD_ORDER_TO_ORDER_LIST:\n      const copy = state.orderList.filter(\n        (el) => el.order_code !== payload.order.order_code\n      );\n      state.orderList = copy;\n      state.orderList.unshift(payload.order);\n      return { ...state, ...payload };\n\n    case UPDATE_ORDER_IN_ORDER_LIST:\n      state.orderList.forEach((item) => {\n        if (item.order_code === payload.order.order_code) item.status = 6;\n        return { ...state, ...payload };\n      });\n    case SET_ORDER_LIST:\n      return { ...state, ...payload };\n    case CREATE_MERCHANT:\n      return { ...state, ...payload };\n    case UPDATE_SERVICE_INFO_FORM:\n      return { ...state, ...payload, currentForm: 1 };\n    case UPDATE_REPRESENTATIVE_INFO_FORM:\n      return { ...state, ...payload, currentForm: 2 };\n    case UPDATE_BUSINESS_UNIT_INFO_FORM:\n      return { ...state, ...payload, currentForm: 3 };\n    case UPDATE_PRODUCT_DETAIL_INFO_FORM:\n      return { ...state, ...payload, currentForm: 4 };\n    case UPDATE_BANK_INFO_FORM:\n      return { ...state, ...payload, currentForm: -1 };\n    case SET_TOP_PRODUCT_BY_SALES:\n      return { ...state, ...payload };\n    case SET_TOP_PRODUCT_BY_UNIT:\n      return { ...state, ...payload };\n    case SET_TOP_CATEGORY_BY_UNIT:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default ProviderReducer;\n"]},"metadata":{},"sourceType":"module"}