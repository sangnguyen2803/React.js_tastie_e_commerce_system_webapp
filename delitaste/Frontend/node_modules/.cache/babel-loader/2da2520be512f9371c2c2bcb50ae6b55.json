{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileDetail/ProfileDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"assets/avatar.jpg\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Formik, Form, Field } from \"formik\";\nimport locations from \"assets/json_location/locations\";\nimport { faMars, faVenus, faCrown, faPlusSquare, faMinusSquare, faUpload, faUndo, faLink, faSave, faHome, faBuilding, faAddressBook, faDotCircle } from \"@fortawesome/fontawesome-free-solid\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport axios from \"axios\";\nimport \"./ProfileDetail.scss\";\nimport { faHouseUser, faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport city from \"assets/json_location/city\";\nimport { addAddressAPI, getAddressBookAPI } from \"store/actions/UserAction/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues1 = {\n  firstname: \"\",\n  lastname: \"\",\n  birthday: \"2000/03/28\",\n  gender: 1\n};\nconst initialValues2 = {\n  address: \"\",\n  longitude: \"\",\n  latitude: \"\",\n  city: \"\",\n  district: \"\",\n  ward: \"\",\n  road: \"\",\n  type: 1\n};\n\nfunction ProfileDetail(props) {\n  _s();\n\n  var _user$profile, _user$profile2, _user$profile3, _user$profile3$birthd, _user$currentAddress;\n\n  const {\n    user,\n    addAddressAPI,\n    getAddressBookAPI\n  } = props;\n  const [imageURL, setImageURL] = useState();\n  const [showEditBI, setShowEditBI] = useState(true);\n  const [showEditPI, setShowEditPI] = useState(false);\n  const [showEditCI, setShowEditCI] = useState(true);\n  const preference = [\"Vegetarian\", \"Vegan\", \"Fastfood\"]; //Dialog\n\n  const [showValidateDialog, setShowValidateDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({\n    header: \"\",\n    text1: \"\",\n    text2: \"\"\n  }); //Map\n\n  const selectedAddressType = {\n    border: \"1px solid #101010\",\n    backgroundColor: \"#f6f6f6\"\n  };\n  const [loading, setLoading] = useState(false);\n  const [addressType, setAddressType] = useState(1);\n  const [latitude, setLatitude] = useState(10.768685473523648);\n  const [longitude, setLongitude] = useState(106.68057155417674);\n  const [viewport, setViewport] = useState({\n    width: \"calc(80% - 14px)\",\n    height: \"300px\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 16\n  });\n  const [contact, setContact] = useState([]);\n\n  async function fetchAddressBook() {\n    var result = await getAddressBookAPI(user.profile.user_id);\n    setContact(result);\n  }\n\n  useEffect(() => {\n    fetchAddressBook();\n  }, [user.profile]);\n  const inputFile = useRef(null);\n\n  const uploadProfileImage = e => {\n    inputFile.current.click();\n  };\n\n  useEffect(() => {\n    if (user.profile.length !== 0) setLoading(true);\n  }, [user.profile]);\n\n  const getFullAddress = (road, city_id, district_id, ward_id) => {\n    const address = [];\n    locations.filter(city => city.code == city_id).map(selectedCity => {\n      address.unshift(selectedCity.name);\n      selectedCity.districts.filter(district => district.code == district_id).map(selectedDistrict => {\n        address.unshift(selectedDistrict.name);\n        selectedDistrict.wards.filter(ward => ward.code == ward_id).map(selectedWard => {\n          address.unshift(selectedWard.name);\n        });\n      });\n    });\n    if (road) address.unshift(road);\n    return address.join(\", \");\n  };\n\n  const uploadFile = e => {\n    let file = e.target.files[0];\n  };\n\n  const handleSubmitForm1 = async values => {\n    console.log(values);\n  };\n\n  const handleSubmitForm2 = async values => {\n    const data = {\n      customer_id: user.profile.user_id,\n      address: getFullAddress(values.road, values.city, values.district, values.ward),\n      city: values.city,\n      longtitude: longitude,\n      latitude: latitude,\n      type: addressType\n    };\n    console.log(data);\n    await addAddressAPI(data);\n    fetchAddressBook();\n    setShowValidateDialog(true);\n    setDialogContent({ ...dialogContent,\n      header: \"Success\",\n      text1: `Successfully adding a new address`,\n      text2: `Address \"${data.address}\" has been added to your address book`\n    });\n  };\n\n  return loading && /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-pd-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-pd-header-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-pd-header-profile-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-pd-hp-s-profile-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"p-pd-hd-ps-image\",\n              alt: \"profile_image\",\n              src: Avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-pd-hp-s-profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-pd-hp-s-pi-main-text\",\n              children: `${user === null || user === void 0 ? void 0 : (_user$profile = user.profile) === null || _user$profile === void 0 ? void 0 : _user$profile.first_name} ${user === null || user === void 0 ? void 0 : (_user$profile2 = user.profile) === null || _user$profile2 === void 0 ? void 0 : _user$profile2.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"u-pf-sb-pt-icon\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"vip-customer\",\n                icon: faCrown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"u-pf-sb-pt-sub-text-type\",\n                children: \"Gold customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-pd-hp-s-pi-sub-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Birthday:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), \" \", (_user$profile3 = user.profile) === null || _user$profile3 === void 0 ? void 0 : (_user$profile3$birthd = _user$profile3.birthday) === null || _user$profile3$birthd === void 0 ? void 0 : _user$profile3$birthd.split(\"T\")[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-pd-hp-s-pi-sub-text-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), \" Male\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"mars-icon\",\n                icon: faMars\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-pd-hp-s-pi-sub-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Delivery address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), \" \", user.location ? (_user$currentAddress = user.currentAddress) === null || _user$currentAddress === void 0 ? void 0 : _user$currentAddress.address : user.location.address[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"p-pd-hp-s-pi-sub-text-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Preference:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), preference.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n                margin: \"0 0\",\n                tFontSize: \"11px\",\n                height: \"18px\",\n                text: tag\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-pd-body-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-pd-body-title\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"p-pd-bt-icon\",\n            icon: showEditPI ? faMinusSquare : faPlusSquare,\n            onClick: () => setShowEditPI(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-pd-title-text\",\n            children: \"Profile picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), showEditPI && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/*\",\n            type: \"file\",\n            id: \"profileImageInput\",\n            onChange: e => uploadFile(e),\n            ref: inputFile,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-pd-body-avatar-uploader-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-pd-body-image-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"p-pd-body-profile-photo-preview\",\n                src: Avatar,\n                alt: \"profile_pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-pd-body-image-upload-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-pd-b-iu-label\",\n                children: \"Upload by URL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"imageURL\",\n                value: imageURL,\n                className: \"p-pd-b-iu-link-upload\",\n                onChange: e => setImageURL(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                gap: 10,\n                float: \"center\",\n                mgTop: 10,\n                mgBottom: 5,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  width: 120,\n                  height: 30,\n                  color: \"black\",\n                  bglight: true,\n                  border: \"#5d5d5d 1.5px solid\",\n                  justifyContent: \"center\",\n                  label: imageURL ? \"URL Submit\" : \"Upload\",\n                  prefix: imageURL ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: \"button-icon\",\n                    icon: faLink\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: \"button-icon\",\n                    icon: faUpload\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 29\n                  }, this),\n                  onClick: uploadProfileImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  width: 100,\n                  height: 30,\n                  color: \"black\",\n                  bglight: true,\n                  border: \"#5d5d5d 1.5px solid\",\n                  justifyContent: \"center\",\n                  label: \"Revert\",\n                  prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: \"button-icon\",\n                    icon: faUndo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 27\n                  }, this),\n                  onClick: () => {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-pd-b-iu-guideline\",\n                children: \"Acceptable file formats: PDF, PNG, GIF, JPG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-pd-b-iu-guideline\",\n                children: \"Acceptable file sizes: File sizes are limited by the upload timeout, so we recommend files that are less than 25 MB per file uploaded (either individually or in a zip file). Tastie will resize each image file down to 1 MB.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues1,\n        validateOnChange: false,\n        onSubmit: values => handleSubmitForm1(values),\n        children: formikProps => {\n          var _user$profile4, _user$profile5, _user$profile6, _user$profile7, _user$profile8, _user$profile8$birthd;\n\n          const {\n            values,\n            errors,\n            touched\n          } = formikProps;\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"p-pd-body-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-pd-body-title\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"p-pd-bt-icon\",\n                  icon: showEditBI ? faMinusSquare : faPlusSquare,\n                  onClick: () => setShowEditBI(prev => !prev)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"p-pd-title-text\",\n                  children: \"General profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this), showEditBI && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-submit-button\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    width: 80,\n                    height: 25,\n                    fontSize: 12,\n                    color: \"black\",\n                    bglight: true,\n                    border: \"#5d5d5d 1.5px solid\",\n                    justifyContent: \"center\",\n                    label: \"Revert\",\n                    prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"button-icon\",\n                      icon: faUndo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    width: 80,\n                    height: 25,\n                    fontSize: 12,\n                    color: \"black\",\n                    bglight: true,\n                    border: \"#5d5d5d 1.5px solid\",\n                    justifyContent: \"center\",\n                    label: \"Save\",\n                    prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"button-icon\",\n                      icon: faSave\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), showEditBI && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-pd-general-profile-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-pd-b-gp-label\",\n                    children: \"Full name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"firstname\",\n                    className: \"p-pd-b-iu-input-general\",\n                    defaultValue: (_user$profile4 = user.profile) === null || _user$profile4 === void 0 ? void 0 : _user$profile4.first_name,\n                    onChange: e => setImageURL(e.target.value),\n                    placeholder: \"First name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 27\n                  }, this), \"\\u2014\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"lastname\",\n                    placeholder: \"Last name\",\n                    defaultValue: (_user$profile5 = user.profile) === null || _user$profile5 === void 0 ? void 0 : _user$profile5.last_name,\n                    className: \"p-pd-b-iu-input-general\",\n                    onChange: e => setImageURL(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-pd-b-gp-label\",\n                    children: \"Phone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"email\",\n                    className: \"p-pd-b-iu-input-general\",\n                    defaultValue: (_user$profile6 = user.profile) === null || _user$profile6 === void 0 ? void 0 : _user$profile6.phone,\n                    onChange: e => setImageURL(e.target.value),\n                    placeholder: \"Phone number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-pd-b-gp-label\",\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"email\",\n                    className: \"p-pd-b-iu-input-general p-pd-disable\",\n                    onChange: e => setImageURL(e.target.value),\n                    defaultValue: (_user$profile7 = user.profile) === null || _user$profile7 === void 0 ? void 0 : _user$profile7.email,\n                    placeholder: \"Email\",\n                    disabled: true,\n                    style: {\n                      width: \"526px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-pd-b-gp-label\",\n                    children: \"Date of birth:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    name: \"birthday\",\n                    defaultValue: (_user$profile8 = user.profile) === null || _user$profile8 === void 0 ? void 0 : (_user$profile8$birthd = _user$profile8.birthday) === null || _user$profile8$birthd === void 0 ? void 0 : _user$profile8$birthd.split(\"T\")[0],\n                    className: \"p-pd-b-iu-input-general\",\n                    onChange: e => setImageURL(e.target.value),\n                    placeholder: \"Date of birth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-pd-b-gp-label\",\n                    children: \"Gender:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"p-pd-b-iu-input-general-radio radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"gender\",\n                      value: 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-pd-label-radio\",\n                      children: [\"Male\", \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        className: \"mars-icon\",\n                        icon: faMars\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"p-pd-b-iu-input-general-radio radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"gender\",\n                      value: 2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-pd-label-radio\",\n                      children: [\"Female\", \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        className: \"venus-icon\",\n                        icon: faVenus\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues2,\n        validateOnChange: false,\n        children: formikProps => {\n          const {\n            values,\n            errors,\n            touched\n          } = formikProps;\n\n          const handleGeoCoding = values => {\n            const {\n              road,\n              city,\n              district,\n              ward\n            } = values;\n            const address = getFullAddress(road, city, district, ward);\n            if (!address) return;\n            const endpoint = `https://api.geoapify.com/v1/geocode/search?text=${address}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n\n            async function fetchCoordinates(url) {\n              var _result$data, _result$data$features;\n\n              const result = await axios.get(url);\n\n              if (((_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$features = _result$data.features) === null || _result$data$features === void 0 ? void 0 : _result$data$features.length) !== 0) {\n                var _result$data$features2, _result$data$features3, _result$data$features4, _result$data$features5, _result$data$features6, _result$data$features7, _result$data$features8, _result$data$features9;\n\n                setLongitude((_result$data$features2 = result.data.features[0]) === null || _result$data$features2 === void 0 ? void 0 : (_result$data$features3 = _result$data$features2.geometry) === null || _result$data$features3 === void 0 ? void 0 : _result$data$features3.coordinates[0]);\n                setLatitude((_result$data$features4 = result.data.features[0]) === null || _result$data$features4 === void 0 ? void 0 : (_result$data$features5 = _result$data$features4.geometry) === null || _result$data$features5 === void 0 ? void 0 : _result$data$features5.coordinates[1]);\n                setViewport({ ...viewport,\n                  latitude: (_result$data$features6 = result.data.features[0]) === null || _result$data$features6 === void 0 ? void 0 : (_result$data$features7 = _result$data$features6.geometry) === null || _result$data$features7 === void 0 ? void 0 : _result$data$features7.coordinates[1],\n                  longitude: (_result$data$features8 = result.data.features[0]) === null || _result$data$features8 === void 0 ? void 0 : (_result$data$features9 = _result$data$features8.geometry) === null || _result$data$features9 === void 0 ? void 0 : _result$data$features9.coordinates[0]\n                });\n                return;\n              }\n\n              setShowValidateDialog(true);\n              setDialogContent({ ...dialogContent,\n                header: \"No result found\",\n                text1: \"Sorry, we couldn't find any locations for your search\",\n                text2: \"In that case, we would recommend you to input a coordinates (latitude, longitude) instead.\"\n              });\n            }\n\n            fetchCoordinates(endpoint);\n          };\n\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"p-pd-body-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-pd-body-title\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"p-pd-bt-icon\",\n                  icon: showEditCI ? faMinusSquare : faPlusSquare,\n                  onClick: () => setShowEditCI(prev => !prev)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"p-pd-title-text\",\n                  children: \"Delivery address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 23\n                }, this), showEditBI && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-submit-button\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    width: 80,\n                    height: 25,\n                    fontSize: 12,\n                    color: \"black\",\n                    bglight: true,\n                    border: \"#5d5d5d 1.5px solid\",\n                    justifyContent: \"center\",\n                    label: \"Revert\",\n                    prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"button-icon\",\n                      icon: faUndo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    width: 80,\n                    height: 25,\n                    fontSize: 12,\n                    color: \"black\",\n                    bglight: true,\n                    border: \"#5d5d5d 1.5px solid\",\n                    justifyContent: \"center\",\n                    label: \"Save\",\n                    prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      className: \"button-icon\",\n                      icon: faSave\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 31\n                    }, this),\n                    onClick: () => {\n                      handleSubmitForm2(values);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this), showEditCI && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-pd-general-profile-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"p-pd-text-secondary\",\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        className: \"p-pd-address-icon\",\n                        icon: faDotCircle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: user.currentAddress.address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 27\n                  }, this), user.location.map(address => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row \",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"p-pd-text-secondary\",\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        className: \"p-pd-address-icon\",\n                        icon: address.type === 1 ? faHome : address.type === 2 ? faBuilding : faAddressBook\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: address.address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 560,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-pd-b-gp-label\",\n                      children: \"Location:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"p-pd-b-iu-input-general-select\",\n                      as: \"select\",\n                      name: \"city\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        hidden: true,\n                        children: \"Select a city...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 31\n                      }, this), locations.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: city.code,\n                        label: city.name\n                      }, city.code, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 33\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 29\n                    }, this), \"\\u2014\", /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"p-pd-b-iu-input-general-select\",\n                      as: \"select\",\n                      name: \"district\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        hidden: true,\n                        children: \"Select a district...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 31\n                      }, this), locations.filter(city => city.code == values.city).map(selectedCity => selectedCity.districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: district.code,\n                        label: district.name\n                      }, district.code, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 37\n                      }, this)))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 29\n                    }, this), \"\\u2014\", /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"p-pd-b-iu-input-general-select\",\n                      style: {\n                        width: \"100%\",\n                        height: \"35px\"\n                      },\n                      as: \"select\",\n                      name: \"ward\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        disabled: true,\n                        hidden: true,\n                        children: \"Select a ward...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 31\n                      }, this), locations.filter(city => city.code == values.city).map(selectedCity => selectedCity.districts.filter(district => district.code == values.district).map(selectedDistrict => selectedDistrict.wards.map(ward => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: ward.code,\n                        label: ward.name\n                      }, ward.code, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 41\n                      }, this))))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-pd-b-gp-label\",\n                      children: \"Address:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      name: \"road\",\n                      className: \"p-pd-b-iu-input-general\",\n                      placeholder: \"Road. Eg. 100A, St. Laurant Street\",\n                      style: {\n                        width: \"526px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"p-pd-b-gp-label\",\n                      children: \"Type:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"p-pd-a-item\",\n                      onClick: () => setAddressType(1),\n                      style: addressType === 1 ? selectedAddressType : {},\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-pd-a-image-wrapper\",\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faHome,\n                          className: \"p-pd-a-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 654,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 653,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"p-pd-a-label-radio\",\n                        children: \"House\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 659,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"p-pd-a-item\",\n                      onClick: () => setAddressType(2),\n                      style: addressType === 2 ? selectedAddressType : {},\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-pd-a-image-wrapper\",\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faBuilding,\n                          className: \"p-pd-a-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 668,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"p-pd-a-label-radio\",\n                        children: \"Workplace\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 674,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"p-pd-a-item\",\n                      onClick: () => setAddressType(3),\n                      style: addressType === 3 ? selectedAddressType : {},\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-pd-a-image-wrapper\",\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faAddressBook,\n                          className: \"p-pd-a-icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 686,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"p-pd-a-label-radio\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 691,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    gap: 5,\n                    mgTop: 5,\n                    mgBottom: 5,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      width: 140,\n                      height: 25,\n                      fontSize: 12,\n                      color: \"black\",\n                      marginTop: 20,\n                      bglight: true,\n                      border: \"#5d5d5d 1.5px solid\",\n                      justifyContent: \"center\",\n                      label: \"Check on map\",\n                      prefix: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        className: \"button-icon\",\n                        icon: faMapMarkedAlt\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 706,\n                        columnNumber: 33\n                      }, this),\n                      onClick: () => {\n                        handleGeoCoding(values);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-pd-general-profile-row\",\n                    children: /*#__PURE__*/_jsxDEV(ReactMapGl, {\n                      transitionDuration: 1000,\n                      ...viewport,\n                      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n                      onViewportChange: viewport => setViewport(viewport),\n                      mapboxApiAccessToken: \"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\",\n                      children: /*#__PURE__*/_jsxDEV(Marker, {\n                        latitude: latitude,\n                        longitude: longitude,\n                        offsetLeft: -20,\n                        offsetTop: -30,\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          alt: \"marker\",\n                          style: {\n                            height: 30,\n                            width: 30\n                          },\n                          src: \"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 732,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-pd-footer-wrapper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogBox, {\n      visibility: showValidateDialog,\n      headerText: dialogContent.header,\n      close: () => setShowValidateDialog(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog-detail-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogbox-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dialogbox-content-detail-main\",\n            children: dialogContent.text1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dialogbox-content-detail-sub\",\n            children: dialogContent.text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogbox-action\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            gap: 5,\n            mgRight: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              bgColor: \"#800000\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n              width: 80,\n              height: 30,\n              label: \"OK\",\n              onClick: () => setShowValidateDialog(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProfileDetail, \"0Pp35RE4YwBVYT/dlYrXztlC3bo=\");\n\n_c = ProfileDetail;\nProfileDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  addAddressAPI: PropTypes.func.isRequired,\n  getAddressBookAPI: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.UserReducer,\n  product: state.ProductReducer\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  addAddressAPI,\n  getAddressBookAPI\n})(ProfileDetail));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDetail\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Profile/ProfileDetail/ProfileDetail.js"],"names":["React","Fragment","useState","useEffect","useRef","withRouter","connect","PropTypes","Avatar","Tag","FontAwesomeIcon","Formik","Form","Field","locations","faMars","faVenus","faCrown","faPlusSquare","faMinusSquare","faUpload","faUndo","faLink","faSave","faHome","faBuilding","faAddressBook","faDotCircle","ButtonGroup","Button","DialogBox","ReactMapGl","Source","Layer","Marker","Popup","axios","faHouseUser","faMapMarkedAlt","city","addAddressAPI","getAddressBookAPI","initialValues1","firstname","lastname","birthday","gender","initialValues2","address","longitude","latitude","district","ward","road","type","ProfileDetail","props","user","imageURL","setImageURL","showEditBI","setShowEditBI","showEditPI","setShowEditPI","showEditCI","setShowEditCI","preference","showValidateDialog","setShowValidateDialog","dialogContent","setDialogContent","header","text1","text2","selectedAddressType","border","backgroundColor","loading","setLoading","addressType","setAddressType","setLatitude","setLongitude","viewport","setViewport","width","height","zoom","contact","setContact","fetchAddressBook","result","profile","user_id","inputFile","uploadProfileImage","e","current","click","length","getFullAddress","city_id","district_id","ward_id","filter","code","map","selectedCity","unshift","name","districts","selectedDistrict","wards","selectedWard","join","uploadFile","file","target","files","handleSubmitForm1","values","console","log","handleSubmitForm2","data","customer_id","longtitude","first_name","last_name","split","location","currentAddress","tag","index","prev","display","value","formikProps","errors","touched","phone","email","handleGeoCoding","endpoint","fetchCoordinates","url","get","features","geometry","coordinates","propTypes","object","isRequired","product","func","mapStateToProps","state","UserReducer","ProductReducer"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"assets/avatar.jpg\";\nimport Tag from \"components/Commons/Tag/Tag\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Formik, Form, Field } from \"formik\";\nimport locations from \"assets/json_location/locations\";\nimport {\n  faMars,\n  faVenus,\n  faCrown,\n  faPlusSquare,\n  faMinusSquare,\n  faUpload,\n  faUndo,\n  faLink,\n  faSave,\n  faHome,\n  faBuilding,\n  faAddressBook,\n  faDotCircle,\n} from \"@fortawesome/fontawesome-free-solid\";\nimport ButtonGroup from \"components/Commons/Button/ButtonGroup/ButtonGroup\";\nimport Button from \"components/Commons/Button/Button\";\nimport DialogBox from \"components/Commons/Overlay/DialogBox/DialogBox\";\nimport ReactMapGl, { Source, Layer, Marker, Popup } from \"react-map-gl\";\nimport axios from \"axios\";\nimport \"./ProfileDetail.scss\";\nimport { faHouseUser, faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport city from \"assets/json_location/city\";\nimport {\n  addAddressAPI,\n  getAddressBookAPI,\n} from \"store/actions/UserAction/UserAction\";\n\nconst initialValues1 = {\n  firstname: \"\",\n  lastname: \"\",\n  birthday: \"2000/03/28\",\n  gender: 1,\n};\nconst initialValues2 = {\n  address: \"\",\n  longitude: \"\",\n  latitude: \"\",\n  city: \"\",\n  district: \"\",\n  ward: \"\",\n  road: \"\",\n  type: 1,\n};\n\nfunction ProfileDetail(props) {\n  const { user, addAddressAPI, getAddressBookAPI } = props;\n  const [imageURL, setImageURL] = useState();\n  const [showEditBI, setShowEditBI] = useState(true);\n  const [showEditPI, setShowEditPI] = useState(false);\n  const [showEditCI, setShowEditCI] = useState(true);\n  const preference = [\"Vegetarian\", \"Vegan\", \"Fastfood\"];\n  //Dialog\n  const [showValidateDialog, setShowValidateDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({\n    header: \"\",\n    text1: \"\",\n    text2: \"\",\n  });\n  //Map\n  const selectedAddressType = {\n    border: \"1px solid #101010\",\n    backgroundColor: \"#f6f6f6\",\n  };\n  const [loading, setLoading] = useState(false);\n  const [addressType, setAddressType] = useState(1);\n  const [latitude, setLatitude] = useState(10.768685473523648);\n  const [longitude, setLongitude] = useState(106.68057155417674);\n  const [viewport, setViewport] = useState({\n    width: \"calc(80% - 14px)\",\n    height: \"300px\",\n    latitude: 10.768685473523648,\n    longitude: 106.68057155417674,\n    zoom: 16,\n  });\n  const [contact, setContact] = useState([]);\n  async function fetchAddressBook() {\n    var result = await getAddressBookAPI(user.profile.user_id);\n    setContact(result);\n  }\n  useEffect(() => {\n    fetchAddressBook();\n  }, [user.profile]);\n  const inputFile = useRef(null);\n  const uploadProfileImage = (e) => {\n    inputFile.current.click();\n  };\n  useEffect(() => {\n    if (user.profile.length !== 0) setLoading(true);\n  }, [user.profile]);\n  const getFullAddress = (road, city_id, district_id, ward_id) => {\n    const address = [];\n    locations\n      .filter((city) => city.code == city_id)\n      .map((selectedCity) => {\n        address.unshift(selectedCity.name);\n        selectedCity.districts\n          .filter((district) => district.code == district_id)\n          .map((selectedDistrict) => {\n            address.unshift(selectedDistrict.name);\n            selectedDistrict.wards\n              .filter((ward) => ward.code == ward_id)\n              .map((selectedWard) => {\n                address.unshift(selectedWard.name);\n              });\n          });\n      });\n    if (road) address.unshift(road);\n    return address.join(\", \");\n  };\n  const uploadFile = (e) => {\n    let file = e.target.files[0];\n  };\n  const handleSubmitForm1 = async (values) => {\n    console.log(values);\n  };\n  const handleSubmitForm2 = async (values) => {\n    const data = {\n      customer_id: user.profile.user_id,\n      address: getFullAddress(\n        values.road,\n        values.city,\n        values.district,\n        values.ward\n      ),\n      city: values.city,\n      longtitude: longitude,\n      latitude: latitude,\n      type: addressType,\n    };\n    console.log(data);\n    await addAddressAPI(data);\n    fetchAddressBook();\n    setShowValidateDialog(true);\n    setDialogContent({\n      ...dialogContent,\n      header: \"Success\",\n      text1: `Successfully adding a new address`,\n      text2: `Address \"${data.address}\" has been added to your address book`,\n    });\n  };\n\n  return (\n    loading && (\n      <Fragment>\n        <div className=\"profile-pd-container\">\n          <div className=\"p-pd-header-wrapper\">\n            <div className=\"p-pd-header-profile-summary\">\n              <div className=\"p-pd-hp-s-profile-image\">\n                <img\n                  className=\"p-pd-hd-ps-image\"\n                  alt=\"profile_image\"\n                  src={Avatar}\n                />\n              </div>\n              <div className=\"p-pd-hp-s-profile-info\">\n                <span className=\"p-pd-hp-s-pi-main-text\">\n                  {`${user?.profile?.first_name} ${user?.profile?.last_name}`}\n                </span>\n                <span className=\"u-pf-sb-pt-icon\">\n                  <FontAwesomeIcon className=\"vip-customer\" icon={faCrown} />\n                  <span className=\"u-pf-sb-pt-sub-text-type\">\n                    Gold customer\n                  </span>\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text\">\n                  <b>Birthday:</b> {user.profile?.birthday?.split(\"T\")[0]}\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text-medium\">\n                  <b>Gender:</b> Male\n                  <FontAwesomeIcon className=\"mars-icon\" icon={faMars} />\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text\">\n                  <b>Delivery address:</b>{\" \"}\n                  {user.location\n                    ? user.currentAddress?.address\n                    : user.location.address[0]}\n                </span>\n                <span className=\"p-pd-hp-s-pi-sub-text-medium\">\n                  <b>Preference:</b>\n                  {preference.map((tag, index) => (\n                    <Tag\n                      key={index}\n                      margin={\"0 0\"}\n                      tFontSize={\"11px\"}\n                      height={\"18px\"}\n                      text={tag}\n                    />\n                  ))}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-pd-body-wrapper\">\n            <div className=\"p-pd-body-title\">\n              <FontAwesomeIcon\n                className=\"p-pd-bt-icon\"\n                icon={showEditPI ? faMinusSquare : faPlusSquare}\n                onClick={() => setShowEditPI((prev) => !prev)}\n              />\n              <span className=\"p-pd-title-text\">Profile picture</span>\n            </div>\n            {showEditPI && (\n              <Fragment>\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  id=\"profileImageInput\"\n                  onChange={(e) => uploadFile(e)}\n                  ref={inputFile}\n                  style={{ display: \"none\" }}\n                />\n                <div className=\"p-pd-body-avatar-uploader-wrapper\">\n                  <div className=\"p-pd-body-image-preview\">\n                    <img\n                      className=\"p-pd-body-profile-photo-preview\"\n                      src={Avatar}\n                      alt=\"profile_pic\"\n                    />\n                  </div>\n                  <div className=\"p-pd-body-image-upload-wrapper\">\n                    <span className=\"p-pd-b-iu-label\">Upload by URL:</span>\n                    <input\n                      type=\"text\"\n                      name=\"imageURL\"\n                      value={imageURL}\n                      className=\"p-pd-b-iu-link-upload\"\n                      onChange={(e) => setImageURL(e.target.value)}\n                    />\n                    <ButtonGroup\n                      gap={10}\n                      float=\"center\"\n                      mgTop={10}\n                      mgBottom={5}\n                    >\n                      <Button\n                        width={120}\n                        height={30}\n                        color={\"black\"}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label={imageURL ? \"URL Submit\" : \"Upload\"}\n                        prefix={\n                          imageURL ? (\n                            <FontAwesomeIcon\n                              className=\"button-icon\"\n                              icon={faLink}\n                            />\n                          ) : (\n                            <FontAwesomeIcon\n                              className=\"button-icon\"\n                              icon={faUpload}\n                            />\n                          )\n                        }\n                        onClick={uploadProfileImage}\n                      />\n                      <Button\n                        width={100}\n                        height={30}\n                        color={\"black\"}\n                        bglight={true}\n                        border={\"#5d5d5d 1.5px solid\"}\n                        justifyContent={\"center\"}\n                        label=\"Revert\"\n                        prefix={\n                          <FontAwesomeIcon\n                            className=\"button-icon\"\n                            icon={faUndo}\n                          />\n                        }\n                        onClick={() => {}}\n                      />\n                    </ButtonGroup>\n                    <span className=\"p-pd-b-iu-guideline\">\n                      Acceptable file formats: PDF, PNG, GIF, JPG\n                    </span>\n                    <span className=\"p-pd-b-iu-guideline\">\n                      Acceptable file sizes: File sizes are limited by the\n                      upload timeout, so we recommend files that are less than\n                      25 MB per file uploaded (either individually or in a zip\n                      file). Tastie will resize each image file down to 1 MB.\n                    </span>\n                  </div>\n                </div>\n              </Fragment>\n            )}\n          </div>\n          <Formik\n            initialValues={initialValues1}\n            validateOnChange={false}\n            onSubmit={(values) => handleSubmitForm1(values)}\n          >\n            {(formikProps) => {\n              const { values, errors, touched } = formikProps;\n\n              return (\n                <Fragment>\n                  <Form className=\"p-pd-body-wrapper\">\n                    <div className=\"p-pd-body-title\">\n                      <FontAwesomeIcon\n                        className=\"p-pd-bt-icon\"\n                        icon={showEditBI ? faMinusSquare : faPlusSquare}\n                        onClick={() => setShowEditBI((prev) => !prev)}\n                      />\n                      <span className=\"p-pd-title-text\">General profile</span>\n                      {showEditBI && (\n                        <div className=\"p-pd-submit-button\">\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Revert\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faUndo}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Save\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faSave}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                        </div>\n                      )}\n                    </div>\n                    {showEditBI && (\n                      <div className=\"p-pd-general-profile-wrapper\">\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Full name:</span>\n                          <input\n                            type=\"text\"\n                            name=\"firstname\"\n                            className=\"p-pd-b-iu-input-general\"\n                            defaultValue={user.profile?.first_name}\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"First name\"}\n                          />\n                          —\n                          <input\n                            type=\"text\"\n                            name=\"lastname\"\n                            placeholder={\"Last name\"}\n                            defaultValue={user.profile?.last_name}\n                            className=\"p-pd-b-iu-input-general\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Phone:</span>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"p-pd-b-iu-input-general\"\n                            defaultValue={user.profile?.phone}\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"Phone number\"}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Email:</span>\n                          <input\n                            type=\"text\"\n                            name=\"email\"\n                            className=\"p-pd-b-iu-input-general p-pd-disable\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                            defaultValue={user.profile?.email}\n                            placeholder={\"Email\"}\n                            disabled\n                            style={{ width: \"526px\" }}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">\n                            Date of birth:\n                          </span>\n                          <input\n                            type=\"date\"\n                            name=\"birthday\"\n                            defaultValue={user.profile?.birthday?.split(\"T\")[0]}\n                            className=\"p-pd-b-iu-input-general\"\n                            onChange={(e) => setImageURL(e.target.value)}\n                            placeholder={\"Date of birth\"}\n                          />\n                        </div>\n                        <div className=\"p-pd-general-profile-row\">\n                          <span className=\"p-pd-b-gp-label\">Gender:</span>\n                          <label className=\"p-pd-b-iu-input-general-radio radio\">\n                            <input type=\"radio\" name=\"gender\" value={1} />\n                            <span className=\"p-pd-label-radio\">\n                              Male{\" \"}\n                              <FontAwesomeIcon\n                                className=\"mars-icon\"\n                                icon={faMars}\n                              />\n                            </span>\n                          </label>\n                          <label className=\"p-pd-b-iu-input-general-radio radio\">\n                            <input type=\"radio\" name=\"gender\" value={2} />\n                            <span className=\"p-pd-label-radio\">\n                              Female{\" \"}\n                              <FontAwesomeIcon\n                                className=\"venus-icon\"\n                                icon={faVenus}\n                              />\n                            </span>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n                  </Form>\n                </Fragment>\n              );\n            }}\n          </Formik>\n          <Formik initialValues={initialValues2} validateOnChange={false}>\n            {(formikProps) => {\n              const { values, errors, touched } = formikProps;\n              const handleGeoCoding = (values) => {\n                const { road, city, district, ward } = values;\n                const address = getFullAddress(road, city, district, ward);\n                if (!address) return;\n                const endpoint = `https://api.geoapify.com/v1/geocode/search?text=${address}&apiKey=05e76b96155e447ba0391d645ce81d27`;\n                async function fetchCoordinates(url) {\n                  const result = await axios.get(url);\n                  if (result.data?.features?.length !== 0) {\n                    setLongitude(\n                      result.data.features[0]?.geometry?.coordinates[0]\n                    );\n                    setLatitude(\n                      result.data.features[0]?.geometry?.coordinates[1]\n                    );\n                    setViewport({\n                      ...viewport,\n                      latitude:\n                        result.data.features[0]?.geometry?.coordinates[1],\n                      longitude:\n                        result.data.features[0]?.geometry?.coordinates[0],\n                    });\n                    return;\n                  }\n                  setShowValidateDialog(true);\n                  setDialogContent({\n                    ...dialogContent,\n                    header: \"No result found\",\n                    text1:\n                      \"Sorry, we couldn't find any locations for your search\",\n                    text2:\n                      \"In that case, we would recommend you to input a coordinates (latitude, longitude) instead.\",\n                  });\n                }\n                fetchCoordinates(endpoint);\n              };\n              return (\n                <Fragment>\n                  <Form className=\"p-pd-body-wrapper\">\n                    <div className=\"p-pd-body-title\">\n                      <FontAwesomeIcon\n                        className=\"p-pd-bt-icon\"\n                        icon={showEditCI ? faMinusSquare : faPlusSquare}\n                        onClick={() => setShowEditCI((prev) => !prev)}\n                      />\n                      <span className=\"p-pd-title-text\">Delivery address</span>\n                      {showEditBI && (\n                        <div className=\"p-pd-submit-button\">\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Revert\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faUndo}\n                              />\n                            }\n                            onClick={() => {}}\n                          />\n                          <Button\n                            width={80}\n                            height={25}\n                            fontSize={12}\n                            color={\"black\"}\n                            bglight={true}\n                            border={\"#5d5d5d 1.5px solid\"}\n                            justifyContent={\"center\"}\n                            label=\"Save\"\n                            prefix={\n                              <FontAwesomeIcon\n                                className=\"button-icon\"\n                                icon={faSave}\n                              />\n                            }\n                            onClick={() => {\n                              handleSubmitForm2(values);\n                            }}\n                          />\n                        </div>\n                      )}\n                    </div>\n\n                    {showEditCI && (\n                      <Fragment>\n                        <div className=\"p-pd-general-profile-wrapper\">\n                          <div className=\"p-pd-general-profile-row\">\n                            <div className=\"p-pd-text-secondary\">\n                              <FontAwesomeIcon\n                                className=\"p-pd-address-icon\"\n                                icon={faDotCircle}\n                              />\n                              <span>{user.currentAddress.address}</span>\n                            </div>\n                          </div>\n                          {user.location.map((address) => (\n                            <div className=\"p-pd-general-profile-row \">\n                              <div className=\"p-pd-text-secondary\">\n                                <FontAwesomeIcon\n                                  className=\"p-pd-address-icon\"\n                                  icon={\n                                    address.type === 1\n                                      ? faHome\n                                      : address.type === 2\n                                      ? faBuilding\n                                      : faAddressBook\n                                  }\n                                />\n                                <span>{address.address}</span>\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Location:</span>\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              as=\"select\"\n                              name=\"city\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a city...\n                              </option>\n                              {locations.map((city) => (\n                                <option\n                                  key={city.code}\n                                  value={city.code}\n                                  label={city.name}\n                                />\n                              ))}\n                            </Field>\n                            —\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              as=\"select\"\n                              name=\"district\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a district...\n                              </option>\n                              {locations\n                                .filter((city) => city.code == values.city)\n                                .map((selectedCity) =>\n                                  selectedCity.districts.map((district) => (\n                                    <option\n                                      key={district.code}\n                                      value={district.code}\n                                      label={district.name}\n                                    />\n                                  ))\n                                )}\n                            </Field>\n                            —\n                            <Field\n                              className=\"p-pd-b-iu-input-general-select\"\n                              style={{ width: \"100%\", height: \"35px\" }}\n                              as=\"select\"\n                              name=\"ward\"\n                            >\n                              <option value=\"\" disabled hidden>\n                                Select a ward...\n                              </option>\n                              {locations\n                                .filter((city) => city.code == values.city)\n                                .map((selectedCity) =>\n                                  selectedCity.districts\n                                    .filter(\n                                      (district) =>\n                                        district.code == values.district\n                                    )\n                                    .map((selectedDistrict) =>\n                                      selectedDistrict.wards.map((ward) => (\n                                        <option\n                                          key={ward.code}\n                                          value={ward.code}\n                                          label={ward.name}\n                                        />\n                                      ))\n                                    )\n                                )}\n                            </Field>\n                          </div>\n\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Address:</span>\n                            <Field\n                              type=\"text\"\n                              name=\"road\"\n                              className=\"p-pd-b-iu-input-general\"\n                              placeholder={\"Road. Eg. 100A, St. Laurant Street\"}\n                              style={{ width: \"526px\" }}\n                            />\n                          </div>\n                          <div className=\"p-pd-general-profile-row\">\n                            <span className=\"p-pd-b-gp-label\">Type:</span>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(1)}\n                              style={\n                                addressType === 1 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faHome}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">House</span>\n                            </div>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(2)}\n                              style={\n                                addressType === 2 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faBuilding}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">\n                                Workplace\n                              </span>\n                            </div>\n                            <div\n                              className=\"p-pd-a-item\"\n                              onClick={() => setAddressType(3)}\n                              style={\n                                addressType === 3 ? selectedAddressType : {}\n                              }\n                            >\n                              <div className=\"p-pd-a-image-wrapper\">\n                                <FontAwesomeIcon\n                                  icon={faAddressBook}\n                                  className=\"p-pd-a-icon\"\n                                />\n                              </div>\n                              <span className=\"p-pd-a-label-radio\">Other</span>\n                            </div>\n                          </div>\n                          <ButtonGroup gap={5} mgTop={5} mgBottom={5}>\n                            <Button\n                              width={140}\n                              height={25}\n                              fontSize={12}\n                              color={\"black\"}\n                              marginTop={20}\n                              bglight={true}\n                              border={\"#5d5d5d 1.5px solid\"}\n                              justifyContent={\"center\"}\n                              label=\"Check on map\"\n                              prefix={\n                                <FontAwesomeIcon\n                                  className=\"button-icon\"\n                                  icon={faMapMarkedAlt}\n                                />\n                              }\n                              onClick={() => {\n                                handleGeoCoding(values);\n                              }}\n                            />\n                          </ButtonGroup>\n                          <div className=\"p-pd-general-profile-row\">\n                            <ReactMapGl\n                              transitionDuration={1000}\n                              {...viewport}\n                              mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                              onViewportChange={(viewport) =>\n                                setViewport(viewport)\n                              }\n                              mapboxApiAccessToken=\"pk.eyJ1IjoiaG9hbmduYW0yNDMiLCJhIjoiY2t1dHJxdjdlMHg5ZDJwbnlpcmo0a2NnMiJ9.DUrlIOzvO6-kWt-VCKZW1g\"\n                            >\n                              <Marker\n                                latitude={latitude}\n                                longitude={longitude}\n                                offsetLeft={-20}\n                                offsetTop={-30}\n                              >\n                                <img\n                                  alt=\"marker\"\n                                  style={{ height: 30, width: 30 }}\n                                  src=\"https://xuonginthanhpho.com/wp-content/uploads/2020/03/map-marker-icon.png\"\n                                />\n                              </Marker>\n                            </ReactMapGl>\n                          </div>\n                        </div>\n                      </Fragment>\n                    )}\n                  </Form>\n                </Fragment>\n              );\n            }}\n          </Formik>\n          <div className=\"p-pd-footer-wrapper\"></div>\n        </div>\n        <DialogBox\n          visibility={showValidateDialog}\n          headerText={dialogContent.header}\n          close={() => setShowValidateDialog(false)}\n        >\n          <div className=\"dialog-detail-wrapper\">\n            <div className=\"dialogbox-content\">\n              <span className=\"dialogbox-content-detail-main\">\n                {dialogContent.text1}\n              </span>\n              <span className=\"dialogbox-content-detail-sub\">\n                {dialogContent.text2}\n              </span>\n            </div>\n            <div className=\"dialogbox-action\">\n              <ButtonGroup gap={5} mgRight={5}>\n                <Button\n                  color={\"white\"}\n                  bgColor={\"#800000\"}\n                  justifyContent={\"center\"}\n                  gap={\"10px\"}\n                  width={80}\n                  height={30}\n                  label={\"OK\"}\n                  onClick={() => setShowValidateDialog(false)}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </DialogBox>\n      </Fragment>\n    )\n  );\n}\n\nProfileDetail.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  addAddressAPI: PropTypes.func.isRequired,\n  getAddressBookAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { addAddressAPI, getAddressBookAPI })(ProfileDetail)\n);\n"]},"metadata":{},"sourceType":"module"}