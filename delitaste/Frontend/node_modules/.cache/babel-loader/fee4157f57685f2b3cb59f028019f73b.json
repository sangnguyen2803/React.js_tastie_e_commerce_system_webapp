{"ast":null,"code":"import axios from \"axios\";\nimport { GET_CART, ADD_TO_CART, CLEAR_CART, REMOVE_CART } from \"store/actions/types\";\nexport const clearCart = (userId, providerId, name) => async dispatch => {\n  try {\n    var _res$data;\n\n    const endpoint = `/v1/api/tastie/tastie/clear-cart/${userId}`;\n    const res = await axios.delete(endpoint);\n\n    if ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.status) {\n      dispatch({\n        type: CLEAR_CART,\n        payload: {\n          userCart: {\n            provider_id: providerId,\n            user_id: userId,\n            provider_name: name,\n            date: \"\",\n            status: 1,\n            cart: []\n          }\n        }\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const removeCartItem = (userId, productId, code) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: userId,\n    product_id: productId,\n    item_code: code\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/delete_cart\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.status) {\n      dispatch({\n        type: REMOVE_CART,\n        payload: {\n          product_id: productId,\n          item_code: code\n        }\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getCart = id => async dispatch => {\n  var initialCart = {};\n\n  try {\n    var _res$data2;\n\n    const endpoint = `/v1/api/tastie/tastie/get_cart/${id}`;\n    const res = await axios.get(endpoint);\n\n    if ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.status) {\n      var _res$data$response$it;\n\n      var cartItems = [];\n      (_res$data$response$it = res.data.response.items) === null || _res$data$response$it === void 0 ? void 0 : _res$data$response$it.forEach(item => {\n        var _item$productPrice, _ref;\n\n        let detailItem = {};\n        detailItem.product_id = item.product_id;\n        detailItem.product_name = item.productName;\n        detailItem.product_image = item.productImage;\n        detailItem.product_price = (_item$productPrice = item.productPrice) === null || _item$productPrice === void 0 ? void 0 : _item$productPrice.toFixed(2);\n        detailItem.product_options = item.additionalOptions;\n        detailItem.totalPrice = (_ref = item.productPrice * item.quantity) === null || _ref === void 0 ? void 0 : _ref.toFixed(2);\n        detailItem.note = item.specialInstruction;\n        detailItem.quantity = item.quantity;\n        detailItem.item_code = item.item_code;\n        cartItems.push(detailItem);\n      });\n      initialCart = {\n        provider_id: parseInt(res.data.response.providerID),\n        user_id: id,\n        provider_name: res.data.response.providerName,\n        longitude: res.data.response.longitude,\n        latitude: res.data.response.latitude,\n        date: \"\",\n        status: 1,\n        cart: cartItems\n      };\n      dispatch({\n        type: GET_CART,\n        payload: {\n          userCart: initialCart\n        }\n      });\n      return initialCart;\n    }\n  } catch (err) {\n    return [];\n  }\n};\nexport const updateCart = (updateCartItem, code) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: updateCartItem.user_id,\n    product_id: updateCartItem.cartItem.product_id,\n    special_instruction: updateCartItem.cartItem.note,\n    quantity: updateCartItem.cartItem.quantity,\n    item_code: code\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/update-quantity-and-note-into-cart\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.status && res.data.response) {\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          userCart: updateCartItem\n        }\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n};\nexport const addToCart = cartItem => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: cartItem.user_id,\n    product_id: cartItem.cartItem.product_id,\n    quantity: cartItem.cartItem.quantity,\n    special_instruction: cartItem.cartItem.note,\n    additional_option: cartItem.cartItem.product_options || []\n  });\n\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/insert_product-into-cart\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.status && res.data.item_code) {\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          userCart: cartItem\n        }\n      });\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/CartAction/CartAction.js"],"names":["axios","GET_CART","ADD_TO_CART","CLEAR_CART","REMOVE_CART","clearCart","userId","providerId","name","dispatch","endpoint","res","delete","data","status","type","payload","userCart","provider_id","user_id","provider_name","date","cart","err","console","log","removeCartItem","productId","code","config","headers","body","JSON","stringify","product_id","item_code","post","getCart","id","initialCart","get","cartItems","response","items","forEach","item","detailItem","product_name","productName","product_image","productImage","product_price","productPrice","toFixed","product_options","additionalOptions","totalPrice","quantity","note","specialInstruction","push","parseInt","providerID","providerName","longitude","latitude","updateCart","updateCartItem","cartItem","special_instruction","addToCart","additional_option"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  GET_CART,\n  ADD_TO_CART,\n  CLEAR_CART,\n  REMOVE_CART,\n} from \"store/actions/types\";\n\nexport const clearCart = (userId, providerId, name) => async (dispatch) => {\n  try {\n    const endpoint = `/v1/api/tastie/tastie/clear-cart/${userId}`;\n    const res = await axios.delete(endpoint);\n    if (res.data?.status) {\n      dispatch({\n        type: CLEAR_CART,\n        payload: {\n          userCart: {\n            provider_id: providerId,\n            user_id: userId,\n            provider_name: name,\n            date: \"\",\n            status: 1,\n            cart: [],\n          },\n        },\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const removeCartItem = (userId, productId, code) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    user_id: userId,\n    product_id: productId,\n    item_code: code,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/delete_cart\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status) {\n      dispatch({\n        type: REMOVE_CART,\n        payload: { product_id: productId, item_code: code },\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getCart = (id) => async (dispatch) => {\n  var initialCart = {};\n  try {\n    const endpoint = `/v1/api/tastie/tastie/get_cart/${id}`;\n    const res = await axios.get(endpoint);\n    if (res.data?.status) {\n      var cartItems = [];\n      res.data.response.items?.forEach((item) => {\n        let detailItem = {};\n        detailItem.product_id = item.product_id;\n        detailItem.product_name = item.productName;\n        detailItem.product_image = item.productImage;\n        detailItem.product_price = item.productPrice?.toFixed(2);\n        detailItem.product_options = item.additionalOptions;\n        detailItem.totalPrice = (item.productPrice * item.quantity)?.toFixed(2);\n        detailItem.note = item.specialInstruction;\n        detailItem.quantity = item.quantity;\n        detailItem.item_code = item.item_code;\n        cartItems.push(detailItem);\n      });\n      initialCart = {\n        provider_id: parseInt(res.data.response.providerID),\n        user_id: id,\n        provider_name: res.data.response.providerName,\n        longitude: res.data.response.longitude,\n        latitude: res.data.response.latitude,\n        date: \"\",\n        status: 1,\n        cart: cartItems,\n      };\n      dispatch({\n        type: GET_CART,\n        payload: { userCart: initialCart },\n      });\n      return initialCart;\n    }\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const updateCart = (updateCartItem, code) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    user_id: updateCartItem.user_id,\n    product_id: updateCartItem.cartItem.product_id,\n    special_instruction: updateCartItem.cartItem.note,\n    quantity: updateCartItem.cartItem.quantity,\n    item_code: code,\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/update-quantity-and-note-into-cart\";\n    const res = await axios.post(endpoint, body, config);\n    if (res.data.status && res.data.response) {\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          userCart: updateCartItem,\n        },\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n};\n\nexport const addToCart = (cartItem) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({\n    user_id: cartItem.user_id,\n    product_id: cartItem.cartItem.product_id,\n    quantity: cartItem.cartItem.quantity,\n    special_instruction: cartItem.cartItem.note,\n    additional_option: cartItem.cartItem.product_options || [],\n  });\n  try {\n    const endpoint = \"/v1/api/tastie/tastie/insert_product-into-cart\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res.data.status && res.data.item_code) {\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          userCart: cartItem,\n        },\n      });\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}