{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProfileScreen/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Suspense } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Profile from \"components/Profile/Profile\";\nimport { getAccessTokenAPI } from \"store/actions/UserAction/AuthAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen(props) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchAccessToken(token) {\n      const res = await props.getAccessTokenAPI(token);\n      return res === null || res === void 0 ? void 0 : res.isAuth;\n    }\n\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n\n    if (refreshToken !== null) {\n      let result = fetchAccessToken(refreshToken);\n\n      if (result) {\n        setLoading(false);\n        return;\n      } else {\n        props.history.push(\"/sign-in\");\n      }\n    }\n\n    props.history.push(\"/sign-in\");\n  }, []);\n  return !loading && /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 22\n  }, this);\n}\n\n_s(ProfileScreen, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c = ProfileScreen;\nProfileScreen.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getAccessTokenAPI: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.UserReducer,\n  product: state.ProductReducer\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  getAccessTokenAPI\n})(ProfileScreen));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","Suspense","useState","useEffect","withAuth","Route","Redirect","withRouter","Fragment","Profile","getAccessTokenAPI","connect","PropTypes","Skeleton","SkeletonTheme","ProfileScreen","props","loading","setLoading","fetchAccessToken","token","res","isAuth","refreshToken","localStorage","getItem","result","history","push","propTypes","user","object","isRequired","product","func","mapStateToProps","state","UserReducer","ProductReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,gBAAf,CAAgCC,KAAhC,EAAuC;AACrC,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACN,iBAAN,CAAwBU,KAAxB,CAAlB;AACA,aAAOC,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEC,MAAZ;AACD;;AACD,UAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;;AACA,QAAIF,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAIG,MAAM,GAAGP,gBAAgB,CAACI,YAAD,CAA7B;;AACA,UAAIG,MAAJ,EAAY;AACVR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,OAHD,MAGO;AACLF,QAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACD;AACF;;AACDZ,IAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,SAAO,CAACX,OAAD,iBAAY,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAnB;AACD;;GApBQF,a;;KAAAA,a;AAsBTA,aAAa,CAACc,SAAd,GAA0B;AACxBC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBC,UADC;AAExBC,EAAAA,OAAO,EAAErB,SAAS,CAACmB,MAAV,CAAiBC,UAFF;AAGxBtB,EAAAA,iBAAiB,EAAEE,SAAS,CAACsB,IAAV,CAAeF;AAHV,CAA1B;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,IAAI,EAAEM,KAAK,CAACC,WADsB;AAElCJ,EAAAA,OAAO,EAAEG,KAAK,CAACE;AAFmB,CAAZ,CAAxB;;AAKA,eAAe/B,UAAU,CACvBI,OAAO,CAACwB,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAAgDK,aAAhD,CADuB,CAAzB","sourcesContent":["import React from \"react\";\nimport { Suspense } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport withAuth from \"components/HigherOrderComponents(HOC)/withAuth\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Profile from \"components/Profile/Profile\";\nimport { getAccessTokenAPI } from \"store/actions/UserAction/AuthAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nfunction ProfileScreen(props) {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchAccessToken(token) {\n      const res = await props.getAccessTokenAPI(token);\n      return res?.isAuth;\n    }\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    if (refreshToken !== null) {\n      let result = fetchAccessToken(refreshToken);\n      if (result) {\n        setLoading(false);\n        return;\n      } else {\n        props.history.push(\"/sign-in\");\n      }\n    }\n    props.history.push(\"/sign-in\");\n  }, []);\n  return !loading && <Profile />;\n}\n\nProfileScreen.propTypes = {\n  user: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  getAccessTokenAPI: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.UserReducer,\n  product: state.ProductReducer,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { getAccessTokenAPI })(ProfileScreen)\n);\n"]},"metadata":{},"sourceType":"module"}