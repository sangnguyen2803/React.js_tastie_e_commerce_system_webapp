{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faChevronDown } from \"@fortawesome/fontawesome-free-solid\";\nimport { useLocation, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./SearchBar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar(props) {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [typeSearch, setTypeSearch] = useState(1);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [categoryType, setCategoryType] = useState(1);\n  const [categoryId, setCategoryId] = useState(1000001);\n  const typeText = [\"All\", \"Provider\", \"Product\", \"Category\"];\n\n  const executeSearch = () => {\n    //if type search is not category search\n    if (typeSearch !== 3) {\n      props.history.push(`/search?q=${search}&type=${typeSearch}`);\n      return;\n    }\n\n    props.history.push(`/search?q=${search}&type=${typeSearch}&ctype=${categoryType}&cid=${categoryId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-type\",\n      onClick: () => setShowDropdown(prev => !prev),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-type-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"search-type-text\",\n          children: typeText[typeSearch]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"nav-icon-prefix\",\n          icon: faChevronDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-type-dropdown-show\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"search-type-drop-down-text\",\n        onClick: e => {\n          setShowDropdown(false);\n          setTypeSearch(1);\n        },\n        children: \"Provider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"search-type-drop-down-text\",\n        onClick: e => {\n          setShowDropdown(false);\n          setTypeSearch(2);\n        },\n        children: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-term\",\n      placeholder: \"What are you looking for?\",\n      onChange: e => setSearch(e.target.value),\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          executeSearch();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-search-wrapper\",\n      onClick: () => executeSearch(),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"search-icon\",\n        icon: faSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn-search-text\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBar, \"JsaIBZWGe+vGQSOgasukYOsRhPo=\");\n\n_c = NavBar;\nexport default _c2 = withRouter(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Layout/NavBar/SearchBar.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faSearch","faChevronDown","useLocation","withRouter","connect","PropTypes","NavBar","props","search","setSearch","typeSearch","setTypeSearch","showDropdown","setShowDropdown","categoryType","setCategoryType","categoryId","setCategoryId","typeText","executeSearch","history","push","prev","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faChevronDown } from \"@fortawesome/fontawesome-free-solid\";\nimport { useLocation, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./SearchBar.scss\";\n\nfunction NavBar(props) {\n  const [search, setSearch] = useState(\"\");\n  const [typeSearch, setTypeSearch] = useState(1);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [categoryType, setCategoryType] = useState(1);\n  const [categoryId, setCategoryId] = useState(1000001);\n  const typeText = [\"All\", \"Provider\", \"Product\", \"Category\"];\n  const executeSearch = () => {\n    //if type search is not category search\n    if (typeSearch !== 3) {\n      props.history.push(`/search?q=${search}&type=${typeSearch}`);\n      return;\n    }\n    props.history.push(\n      `/search?q=${search}&type=${typeSearch}&ctype=${categoryType}&cid=${categoryId}`\n    );\n  };\n  return (\n    <div className=\"search-bar-wrapper\">\n      <div\n        className=\"search-bar-type\"\n        onClick={() => setShowDropdown((prev) => !prev)}\n      >\n        <div className=\"search-type-dropdown\">\n          <span className=\"search-type-text\">{typeText[typeSearch]}</span>\n          <FontAwesomeIcon className=\"nav-icon-prefix\" icon={faChevronDown} />\n        </div>\n      </div>\n      {showDropdown && (\n        <div className=\"search-type-dropdown-show\">\n          <span\n            className=\"search-type-drop-down-text\"\n            onClick={(e) => {\n              setShowDropdown(false);\n              setTypeSearch(1);\n            }}\n          >\n            Provider\n          </span>\n          <span\n            className=\"search-type-drop-down-text\"\n            onClick={(e) => {\n              setShowDropdown(false);\n              setTypeSearch(2);\n            }}\n          >\n            Product\n          </span>\n        </div>\n      )}\n\n      <input\n        type=\"text\"\n        className=\"search-term\"\n        placeholder=\"What are you looking for?\"\n        onChange={(e) => setSearch(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            executeSearch();\n          }\n        }}\n      />\n      <div className=\"btn-search-wrapper\" onClick={() => executeSearch()}>\n        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n        <span className=\"btn-search-text\">Search</span>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(NavBar);\n"]},"metadata":{},"sourceType":"module"}