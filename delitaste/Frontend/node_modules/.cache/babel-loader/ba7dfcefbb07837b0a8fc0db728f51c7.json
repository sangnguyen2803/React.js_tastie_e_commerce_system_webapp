{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/LanguageSettingPanel.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router\"; //scss\n\nimport \"./LanguageSettingPanel.scss\";\nimport \"style/Common.scss\"; //i18next\n\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LanguageSettingPanel = props => {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const languages = [{\n    key: \"vi\",\n    name: \"Tiếng Việt\"\n  }, {\n    key: \"en\",\n    name: \"English\"\n  }, {\n    key: \"fr\",\n    name: \"Français\"\n  }];\n\n  const languagePanelHandler = () => {\n    i18n.changeLanguage(selectedLanguage);\n    const url = `/${selectedLanguage}`;\n    props.history.push(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-title\",\n        children: \"Language Settings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"panel-description\",\n        children: \"Select the language right below to change current web context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-select-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-select panel-label\",\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSelectedLanguage(e.target.value);\n          },\n          className: \"language-select-wrapper panel-text-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: i18n.language,\n            hidden: true,\n            children: languages.filter(language => language.key === i18n.language).map(currentLanguage => currentLanguage.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: language.key,\n            children: language.name\n          }, language.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: languagePanelHandler,\n        className: \"btn-panel btn-language-panel-position\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageSettingPanel, \"wJV1QNoyGBrOWc/fLB+B+WgOkXQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageSettingPanel;\nexport default _c2 = withRouter(LanguageSettingPanel);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageSettingPanel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/components/Commons/Overlay/Popup/Panel/LanguageSettingPanel.js"],"names":["useState","Fragment","Link","withRouter","useHistory","useTranslation","LanguageSettingPanel","props","i18n","selectedLanguage","setSelectedLanguage","languages","key","name","languagePanelHandler","changeLanguage","url","history","push","e","target","value","language","filter","map","currentLanguage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CACA;;AACA,OAAO,6BAAP;AACA,OAAO,mBAAP,C,CACA;;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,cAAc,EAA/B;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMW,SAAS,GAAG,CAChB;AAAEC,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GADgB,EAEhB;AAAED,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAFgB,EAGhB;AAAED,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAHgB,CAAlB;;AAKA,QAAMC,oBAAoB,GAAG,MAAM;AACjCN,IAAAA,IAAI,CAACO,cAAL,CAAoBN,gBAApB;AACA,UAAMO,GAAG,GAAI,IAAGP,gBAAiB,EAAjC;AACAF,IAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBF,GAAnB;AACD,GAJD;;AAKA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGG,CAAD,IAAO;AACfT,YAAAA,mBAAmB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACD,WAHH;AAIE,UAAA,SAAS,EAAC,0CAJZ;AAAA,kCAME;AAAQ,YAAA,YAAY,EAAEb,IAAI,CAACc,QAA3B;AAAqC,YAAA,MAAM,MAA3C;AAAA,sBACGX,SAAS,CACPY,MADF,CACUD,QAAD,IAAcA,QAAQ,CAACV,GAAT,KAAiBJ,IAAI,CAACc,QAD7C,EAEEE,GAFF,CAEOC,eAAD,IAAqBA,eAAe,CAACZ,IAF3C;AADH;AAAA;AAAA;AAAA;AAAA,kBANF,EAWGF,SAAS,CAACa,GAAV,CAAeF,QAAD,iBACb;AAA2B,YAAA,KAAK,EAAEA,QAAQ,CAACV,GAA3C;AAAA,sBACGU,QAAQ,CAACT;AADZ,aAAaS,QAAQ,CAACV,GAAtB;AAAA;AAAA;AAAA;AAAA,kBADD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAyBE;AACE,QAAA,OAAO,EAAEE,oBADX;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAjDD;;GAAMR,oB;UACaD,c;;;KADbC,oB;AAmDN,qBAAeH,UAAU,CAACG,oBAAD,CAAzB","sourcesContent":["import { useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n//scss\nimport \"./LanguageSettingPanel.scss\";\nimport \"style/Common.scss\";\n//i18next\nimport { useTranslation } from \"react-i18next\";\n\nconst LanguageSettingPanel = (props) => {\n  const { i18n } = useTranslation();\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const languages = [\n    { key: \"vi\", name: \"Tiếng Việt\" },\n    { key: \"en\", name: \"English\" },\n    { key: \"fr\", name: \"Français\" },\n  ];\n  const languagePanelHandler = () => {\n    i18n.changeLanguage(selectedLanguage);\n    const url = `/${selectedLanguage}`;\n    props.history.push(url);\n  };\n  return (\n    <Fragment>\n      <div className=\"language-panel\">\n        <div className=\"panel-title\">Language Settings:</div>\n        <span className=\"panel-description\">\n          Select the language right below to change current web context.\n        </span>\n        <div className=\"language-select-container\">\n          <div className=\"language-select panel-label\">Language:</div>\n          <select\n            onChange={(e) => {\n              setSelectedLanguage(e.target.value);\n            }}\n            className=\"language-select-wrapper panel-text-field\"\n          >\n            <option defaultValue={i18n.language} hidden>\n              {languages\n                .filter((language) => language.key === i18n.language)\n                .map((currentLanguage) => currentLanguage.name)}\n            </option>\n            {languages.map((language) => (\n              <option key={language.key} value={language.key}>\n                {language.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div\n          onClick={languagePanelHandler}\n          className=\"btn-panel btn-language-panel-position\"\n        >\n          Save\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default withRouter(LanguageSettingPanel);\n"]},"metadata":{},"sourceType":"module"}