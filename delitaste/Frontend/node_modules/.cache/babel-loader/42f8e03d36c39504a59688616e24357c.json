{"ast":null,"code":"import axios from \"axios\"; //UPDATE UI\n\nexport const getProviderGroup = (group_id, limit, offset, latitude, longitude, uid) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: uid || -1,\n    group_provider_id: group_id,\n    limit: limit,\n    offset: offset,\n    latitude: latitude,\n    longitude: longitude\n  });\n\n  try {\n    const endpoint = \"/v1/api/provider/dashboard/home/get-group-provider\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res === null || res === void 0 ? void 0 : res.data) {\n      return res.data.response;\n    }\n\n    return [];\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n};\nexport const getAllProvider = (limit, offset, latitude, longitude, uid) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    user_id: uid || -1,\n    limit: limit,\n    offset: offset,\n    latitude: latitude,\n    longitude: longitude\n  });\n\n  try {\n    const endpoint = \"/v1/api/provider/dashboard/home/get-near-by-provider\";\n    const res = await axios.post(endpoint, body, config);\n\n    if (res === null || res === void 0 ? void 0 : res.data) {\n      return res.data.response;\n    }\n\n    return [];\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n};","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/18VP-Graduation_Project-Tastie-Frontend/delitaste/Frontend/src/store/actions/HomeAction/HomeAction.js"],"names":["axios","getProviderGroup","group_id","limit","offset","latitude","longitude","uid","dispatch","config","headers","body","JSON","stringify","user_id","group_provider_id","endpoint","res","post","data","response","err","console","log","getAllProvider"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAC3B,CAACC,QAAD,EAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,GAA/C,KAAuD,MAAOC,QAAP,IAAoB;AACzE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,IAAAA,OAAO,EAAEP,GAAG,IAAI,CAAC,CADS;AAE1BQ,IAAAA,iBAAiB,EAAEb,QAFO;AAG1BC,IAAAA,KAAK,EAAEA,KAHmB;AAI1BC,IAAAA,MAAM,EAAEA,MAJkB;AAK1BC,IAAAA,QAAQ,EAAEA,QALgB;AAM1BC,IAAAA,SAAS,EAAEA;AANe,GAAf,CAAb;;AAQA,MAAI;AACF,UAAMU,QAAQ,GAAG,oDAAjB;AACA,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAWF,QAAX,EAAqBL,IAArB,EAA2BF,MAA3B,CAAlB;;AACA,QAAIQ,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEE,IAAT,EAAe;AACb,aAAOF,GAAG,CAACE,IAAJ,CAASC,QAAhB;AACD;;AACD,WAAO,EAAP;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO,EAAP;AACD;AACF,CA1BI;AA4BP,OAAO,MAAMG,cAAc,GACzB,CAACrB,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,GAArC,KAA6C,MAAOC,QAAP,IAAoB;AAC/D,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,IAAAA,OAAO,EAAEP,GAAG,IAAI,CAAC,CADS;AAE1BJ,IAAAA,KAAK,EAAEA,KAFmB;AAG1BC,IAAAA,MAAM,EAAEA,MAHkB;AAI1BC,IAAAA,QAAQ,EAAEA,QAJgB;AAK1BC,IAAAA,SAAS,EAAEA;AALe,GAAf,CAAb;;AAOA,MAAI;AACF,UAAMU,QAAQ,GAAG,sDAAjB;AACA,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAWF,QAAX,EAAqBL,IAArB,EAA2BF,MAA3B,CAAlB;;AACA,QAAIQ,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEE,IAAT,EAAe;AACb,aAAOF,GAAG,CAACE,IAAJ,CAASC,QAAhB;AACD;;AACD,WAAO,EAAP;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO,EAAP;AACD;AACF,CAzBI","sourcesContent":["import axios from \"axios\";\n//UPDATE UI\nexport const getProviderGroup =\n  (group_id, limit, offset, latitude, longitude, uid) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      user_id: uid || -1,\n      group_provider_id: group_id,\n      limit: limit,\n      offset: offset,\n      latitude: latitude,\n      longitude: longitude,\n    });\n    try {\n      const endpoint = \"/v1/api/provider/dashboard/home/get-group-provider\";\n      const res = await axios.post(endpoint, body, config);\n      if (res?.data) {\n        return res.data.response;\n      }\n      return [];\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  };\n\nexport const getAllProvider =\n  (limit, offset, latitude, longitude, uid) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({\n      user_id: uid || -1,\n      limit: limit,\n      offset: offset,\n      latitude: latitude,\n      longitude: longitude,\n    });\n    try {\n      const endpoint = \"/v1/api/provider/dashboard/home/get-near-by-provider\";\n      const res = await axios.post(endpoint, body, config);\n      if (res?.data) {\n        return res.data.response;\n      }\n      return [];\n    } catch (err) {\n      console.log(err);\n      return [];\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}