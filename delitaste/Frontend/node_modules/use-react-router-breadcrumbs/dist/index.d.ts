import React from 'react';
import { useLocation } from 'react-router';
declare type Location = ReturnType<typeof useLocation>;
export interface Options {
    disableDefaults?: boolean;
    excludePaths?: string[];
}
export interface MatchOptions {
    exact?: boolean;
    strict?: boolean;
    sensitive?: boolean;
}
export interface BreadcrumbsRoute {
    path: string;
    breadcrumb?: React.ComponentType | React.ElementType | string | null;
    matchOptions?: MatchOptions;
    routes?: BreadcrumbsRoute[];
    props?: {
        [x: string]: unknown;
    };
}
export interface BreadcrumbData {
    match: {
        url: string;
    };
    location: Location;
    key: string;
    breadcrumb: React.ReactNode;
}
export declare const getBreadcrumbs: ({ routes, location, options, }: {
    routes: BreadcrumbsRoute[];
    location: Location;
    options?: Options | undefined;
}) => BreadcrumbData[];
declare const useReactRouterBreadcrumbs: (routes?: BreadcrumbsRoute[] | undefined, options?: Options | undefined) => BreadcrumbData[];
export default useReactRouterBreadcrumbs;
